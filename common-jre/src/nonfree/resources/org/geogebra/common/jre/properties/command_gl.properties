# Copyright (c) GeoGebra Group, office@geogebra.org
# The GeoGebra language files are licensed to you under the terms of the
# Creative Commons Attribution-NonCommercial-ShareAlike licence (version 3.0 or later),
# the current text of which can be found via this link:
# https://creativecommons.org/licenses/by-nc-sa/3.0/legalcode.
# Attribution (as required by that Creative Commons license) should take the form of
# (at least) a mention of our name, an appropriate copyright notice and a link to our
# website located at https://www.geogebra.org.
# For further details, please see https://www.geogebra.org/license
ANOVA.Syntax=[ <Lista>, <Lista>, ... ]
AffineRatio=RazónSimple
AffineRatio.Syntax=[ <Punto inicial>, <Punto final>, <Punto aliñado> ]
Angle=Ángulo
Angle.Syntax=[ <Obxecto> ]\n[ <Vector inicial>, <Vector final> ]\n[ <Lado (recta, semirecta ou segmento)>, <lado (recta, semirecta ou segmento)> ]\n[ <Punto no lado inicial>, <Vértice>, <Punto no lado final> ]\n[ <Punto no lado inicial>, <Vértice>, <Ángulo antihorario> ]
Angle.Syntax3D=[ <Obxecto> ]\n[ <Vector>, <Vector> ]\n[ <Recta>, <Recta> ]\n[ <Recta>, <Plano> ]\n[ <Plano>, <Plano> ]\n[ <Punto>, <Vértice>, <Punto> ]\n[ <Punto>, <Vértice>, <Ángulo> ]\n[ <Point>, <Point>, <Point>, <Direction> ]
AngularBisector=Bisectriz
AngularBisector.Syntax=[ <Recta>, <Recta> ]\n[ <Punto>, <Punto>, <Punto> ]
Append=Engade
Append.Syntax=[ <Lista>, <Obxecto> ]\n[ <Obxecto>, <Lista> ]
ApplyMatrix=AplicaMatriz
ApplyMatrix.Syntax=[ <Matriz>, <Obxecto> ]
Arc=Arco
Arc.Syntax=[ <Circunferencia>, <Punto>, <Punto> ]\n[ <Elipse>, <Punto>, <Punto> ]\n[ <Circunferencia>, <Valor parámetro>, <Valor parámetro> ]\n[ <Elipse>, <Valor parámetro>, <Valor parámetro> ]
AreCollinear=SonColineais
AreCollinear.Syntax=[ <Punto>, <Punto>, <Punto> ]
AreConcurrent=SonConcorrentes
AreConcurrent.Syntax=[ <Liña>, <Liña>, <Liña> ]
AreConcyclic=SonConcíclicos
AreConcyclic.Syntax=[ <Punto>, <Punto>, <Punto>, <Punto> ]
AreCongruent=SonCongruentes
AreCongruent.Syntax=[ <Obxecto>, <Obxecto> ]
AreEqual=SonIguais
AreEqual.Syntax=[ <Obxecto>, <Obxecto> ]
AreParallel=SonParalelas
AreParallel.Syntax=[ <Liña>, <Liña> ]
ArePerpendicular=SonPerpendiculares
ArePerpendicular.Syntax=[ <Liña>, <Liña> ]
Area=Área
Area.Syntax=[ <Circunferencia ou elipse> ]\n[ <Punto>, ..., <Punto> ]\n[ <Polígono> ]
Assume=Asume
Assume.SyntaxCAS=[ <Condición>, <Expresión> ]
Asymptote=Asíntota
Asymptote.Syntax=[ <Cónica> ]\n[ <Función> ]\n[ <Curva implícita> ]
AttachCopyToView=EnganchaCopiaAVista
AttachCopyToView.Syntax=[ <Obxecto>, <Vista 0|1|2> ]\n[ <Obxecto>, <Vista 0|1|2>, <Punto 1>, <Punto 2>, <Punto Pantalla 1>, <Punto Pantalla 2> ]
Axes=Eixes
Axes.Syntax=[ <Cónica> ]
Axes.Syntax3D=[ <Cónica> ]\n[ <Cuádrica> ]
AxisStepX=PasoEixeX
AxisStepX.Syntax=[]
AxisStepY=PasoEixeY
AxisStepY.Syntax=[]
BarChart=GráficoBarras
BarChart.Syntax=[ <Lista datos>, <Lista frecuencias> ]\n[ <Lista datos en bruto>, <Ancho barras>, <Factor de escala vertical (opcional)> ]\n[ <Lista datos>, <Lista frecuencias>, <Ancho barras> ]\n[ <Valor inicial>, <Valor final>, <Lista alturas> ]\n[ <Valor inicial>, <Valor final>, <Expresión>, <Variable>, <Dende número>, <Ata número> ]\n[ <Valor inicial>, <Valor final>, <Expresión>, <Variable>, <Dende número>, <Ata número>, <Incremento> ]
BarCode=CódigoBarras
BarCode.Syntax=[ ]\n[ <Imaxe> ]\n[ <Texto ou número>, "<Formato (opcional)>", "<Corrección de erro (opcional)>", <Ancho (opcional)>, <Alto (opcional)> ]
Barycenter=Baricentro
Barycenter.Syntax=[ <Lista de puntos>, <Lista de masas dos puntos> ]
Bernoulli=DistribuciónBernouilli
Bernoulli.Syntax=[ <Probabilidade>, <Acumula (Booleana)> ]
Binomial=NúmeroCombinatorio
Binomial.Syntax=[ <Número n>, <Número k> ]
BinomialDist=DistribuciónBinomial
BinomialDist.Syntax=[ <Número de ensaios>, <Probabilidade de éxito> ]\n[ <Número de ensaios>, <Probabilidade de éxito>, <Acumula (Booleana)> ]\n[ <Número de ensaios>, <Probabilidade de éxito>, <Valor da variable>, <Acumula (Booleana)> ]
BinomialDist.SyntaxCAS=[ <Número de ensaios>, <Probabilidade de éxito>, <Valor da variable>, <Acumula (Booleana)> ]
Bottom=Fondo
Bottom.Syntax=[ <Cuádrica> ]
BoxPlot=DiagramaCaixa
BoxPlot.Syntax=[ <Ordenada>, <Semialtura>, <Lista de datos en bruto> ]\n[ <Ordenada>, <Semialtura>, <Lista de datos en bruto>, <Booleana atípicos> ]\n[ <Ordenada>, <Semialtura>, <Lista de datos>, <Lista de frecuencias>, <Booleana atípicos> ]\n[ <Ordenada>, <Semialtura>, <Valor inicial>, <Q1>, <Mediana>, <Q3>, <Valor final> ]
Button=Botón
Button.Syntax=[]\n[ <Título> ]
CFactor=FactorizaC
CFactor.SyntaxCAS=[ <Expresión> ]\n[ <Expresión>, <Variable> ]
CIFactor=FactorC
CIFactor.SyntaxCAS=[ <Expresión> ]\n[ <Expresión>, <Variable> ]
CSolutions=SoluciónsC
CSolutions.SyntaxCAS=[ <Ecuación> ]\n[ <Ecuación>, <Variable> ]\n[ <Lista de ecuacións>, <Lista de variables> ]
CSolve=ResolveC
CSolve.SyntaxCAS=[ <Ecuación> ]\n[ <Ecuación>, <Variable> ]\n[ <Lista de ecuacións>, <Lista de variables> ]
Cauchy=DistribuciónCauchy
Cauchy.Syntax=[ <Mediana>, <Escala>, x, <Acumular (Booleana)> ]\n[ <Mediana>, <Escala>, <Valor da variable> ]
Cauchy.SyntaxCAS=[ <Mediana>, <Escala>, <Valor da variable> ]
Cell=Cela
Cell.Syntax=[ <Columna>, <Fila> ]
CellRange=RangoCela
CellRange.Syntax=[ <Cela Inicial>, <Cela Final> ]
Center=Centro
Center.Syntax=[ <Cónica> ]
Center.Syntax3D=[ <Cónica> ]\n[ <Cuádrica> ]
CenterView=CentrarVista
CenterView.Syntax=[ <Punto central> ]
Centroid=Centroide
Centroid.Syntax=[ <Polígono> ]
Checkbox=CaixaControl
Checkbox.Syntax=[]\n[ <Título> ]\n[ <Lista> ]\n[ <Título>, <Lista> ]
ChiSquared=DistribuciónChiCadrado
ChiSquared.Syntax=[ <Graos de liberdade>, x, <Acumula (Booleana)> ] \n[ <Graos de liberdade>, <Valor da variable> ]
ChiSquared.SyntaxCAS=[ <Graos de liberdade>, <Variable> ]
ChiSquaredTest=TestChiCadrado
ChiSquaredTest.Syntax=[ <Matriz> ]\n[ <Lista>, <Lista> ]\n[ <Matriz>, <Matriz> ]
Circle=Circunferencia
Circle.Syntax=[ <Centro>, <Raio (número)> ]\n[ <Centro>, <Raio (segmento)> ]\n[ <Centro>, <Punto> ]\n[ <Punto>, <Punto>, <Punto> ]
Circle.Syntax3D=[ <Centro>, <Raio (número)> ]\n[ <Centro>, <Raio (segmento)> ]\n[ <Centro>, <Punto> ]\n[ <Liña>, <Punto> ]\n[ <Punto>, <Punto>, <Punto> ]\n[ <Centro>, <Raio>, <Dirección> ]\n[ <Centro>, <Punto>, <Dirección> ]
CircleArc=ArcoCircunferencia
CircleArc.Syntax=[ <Centro>, <Punto inicial>, <Punto final antihorario> ]
CircleSector=SectorCircular
CircleSector.Syntax=[ <Centro>, <Punto inicial>, <Punto final antihorario> ]
CircumcircleArc=ArcoCirc3P
CircumcircleArc.Syntax=[ <Punto extremo>, <Punto medio>, <Punto extremo> ]
CircumcircleSector=SectorCircular3P
CircumcircleSector.Syntax=[ <Punto extremo>, <Punto medio>, <Punto extremo> ]
Circumference=PerímetroCónica
Circumference.Syntax=[ <Circunferencia ou elipse> ]
Classes=Clases
Classes.Syntax=[ <Lista de datos>, <Número de clases> ]\n[ <Lista de datos>, <Inicio>, <Ancho das clases> ]
ClosestPoint=PuntoMáisPróximo
ClosestPoint.Syntax=[ <Percorrido>, <Punto> ]\n[ <Recta>, <Recta> ]
ClosestPointRegion=PuntoMáisPróximoRexión
ClosestPointRegion.Syntax=[ <Rexión>, <Punto> ]
Coefficients=Coeficientes
Coefficients.Syntax=[ <Polinomio> ]\n[ <Cónica> ]
Coefficients.SyntaxCAS=[ <Polinomio> ]\n[ <Polinomio>, <Variable> ]
Column=Columna
Column.Syntax=[ <Cela da Folla de Cálculo> ]
ColumnName=NomeColumna
ColumnName.Syntax=[ <Cela da Folla de Cálculo> ]
Command=Comando
CommonDenominator=ComúnDenominador
CommonDenominator.Syntax=[ <Expresión>, <Expresión> ]
CompetitionRank=RangoCompetencia
CompetitionRank.Syntax=[ <Lista> ]
CompleteSquare=CompletaCadrado
CompleteSquare.Syntax=[ <Función cuadrática> ]
ComplexRoot=RaícesComplexas
ComplexRoot.Syntax=[ <Polinomio> ]
Cone=Cono
Cone.Syntax=[ <Circunferencia>, <Altura> ]\n[ <Punto>, <Punto>, <Raio> ]\n[ <Punto>, <Vector>, <Ángulo> ]
ConeInfinite=ConoInfinito
ConeInfinite.Syntax=[ <Punto>, <Vector>, <Ángulo> ]\n[ <Punto>, <Punto>, <Ángulo> ]\n[ <Punto>, <Línea>, <Ángulo> ]
Conic=Cónica
Conic.Syntax=[ <Punto>, <Punto>, <Punto>, <Punto>, <Punto> ]\n[ <Coef. x^2>, <Coef. xy>, <Coef. y^2>, <Coef. x>, <Coef. y>, <Termo ind.> ]
ConstructionStep=PasoConstrución
ConstructionStep.Syntax=[]\n[ <Obxecto> ]
ContingencyTable=TáboaContinxencia
ContingencyTable.Syntax=[ <Lista de texto>, <Lista de texto> ]\n[ <Lista de texto>, <Lista de texto>, <Opcións> ]\n[ <Lista de valores de fila>, <Lista de valores de columna>, <Táboa de frecuencia> ]\n[ <Lista de valores de fila>, <Lista de valores de columna>, <Táboa de frecuencia>, <Opcións> ]
ContinuedFraction=FracciónContinua
ContinuedFraction.Syntax=[ <Número> ]\n[ <Número>, <Nivel> ]\n[ <Número>, <Nivel>, <Nunha liña true|false> ]
ConvexHull=PecheConvexo
ConvexHull.Syntax=[ <Lista de puntos> ]
CopyFreeObject=CopiaObxectoLibre
CopyFreeObject.Syntax=[ <Obxecto> ]
Corner=Esquina
Corner.Syntax=[ <Imaxe>, <Número de Esquina> ]\n[ <Texto>, <Número de Esquina> ]\n[ <Vista gráfica>, <Número de Esquina> ]\n[ <Número de Esquina> ]
CountIf=ContarSe
CountIf.Syntax=[ <Condición>, <Lista> ]\n[ <Condición>, <Variable>, <Lista> ]
Covariance=Covarianza
Covariance.Syntax=[ <Lista de Puntos> ]\n[ <Lista de Números>, <Lista de Números> ]
Cross=ProdutoVectorial
CrossRatio=RazónDobre
CrossRatio.Syntax=[ <Punto>, <Punto>, <Punto>, <Punto> ]
Cube=Cubo
Cube.Syntax=[ <Cadrado> ]\n[ <Punto>, <Punto>, <Punto> ]\n[ <Punto>, <Punto>, <Dirección> ]
Cubic=Cúbica
Cubic.Syntax=[ <Punto>, <Punto>, <Punto>, <Número> ]
Curvature=Curvatura
Curvature.Syntax=[ <Punto>, <Obxecto> ]
CurvatureVector=VectorCurvatura
CurvatureVector.Syntax=[ <Punto>, <Obxecto> ]
CurveCartesian=CurvaParamétrica
CurveCartesian.Syntax=[ <Expresión>, <Expresión>, <Parámetro>, <Valor Inicial>, <Valor Final> ]
CurveCartesian.Syntax3D=[ <Expresión>, <Expresión>, <Parámetro>, <Valor Inicial>, <Valor Final> ]\n[ <Expresión>, <Expresión>, <Expresión>, <Parámetro>, <Valor Inicial>, <Valor Final> ]
Cylinder=Cilindro
Cylinder.Syntax=[ <Circunferencia>, <Altura> ]\n[ <Punto>, <Punto>, <Raio> ]
CylinderInfinite=CilindroInfinito
CylinderInfinite.Syntax=[ <Línea>, <Radio> ]\n[ <Punto>, <Vector>, <Radio> ]\n[ <Punto>, <Punto>, <Radio> ]
DataFunction=FunciónEmpírica
DataFunction.Syntax=[ <Lista de Números>, <Lista de Números> ]
Defined=EstáDefinido
Defined.Syntax=[ <Obxecto> ]
Degree=Grao
Degree.Syntax=[ <Polinomio> ]
Degree.SyntaxCAS=[ <Polinomio> ]\n[ <Polinomio>, <Variable> ]
DelauneyTriangulation=Delaunay
DelauneyTriangulation.Syntax=[ <Lista de puntos> ]
Delete=Borra
Delete.Syntax=[ <Obxecto> ]
Denominator=Denominador
Denominator.Syntax=[ <Número> ]\n[ <Función> ]
Denominator.SyntaxCAS=[ <Expresión> ]
DensityPlot=GráficaDensidade
Derivative=Derivada
Derivative.Syntax=[ <Función> ]\n[ <Curva> ]\n[ <Función>, <Orde da derivada> ]\n[ <Función>, <Variable> ]\n[ <Curva>, <Orde da derivada> ]\n[ <Función>, <Variable>, <Orde da derivada> ]
Derivative.SyntaxCAS=[ <Expresión> ]\n[ <Expresión>, <Variable> ]\n[ <Expresión>, <Variable>, <Orde> ]
Determinant=Determinante
Determinant.Syntax=[ <Matriz> ]
Diameter=DiámetroConxugado
Diameter.Syntax=[ <Vector>, <Cónica> ]\n[ <Dirección (recta, semirrecta ou segmento)>, <Cónica> ]
Difference=Diferencia
Difference.Syntax=[ <Polígono>, <Polígono> ]
Dilate=Homotecia
Dilate.Syntax=[ <Obxecto>, <Factor de Escala (número o valor numérico)>, <Centro (punto)> ]\n[ <Obxecto>, <Factor de Escala (número o valor numérico)> ]
Dimension=Dimensión
Dimension.Syntax=[ <Vector> ]\n[ <Matriz> ]
Direction=Dirección
Direction.Syntax=[ <Recta, semirrecta ou segmento> ]
Directrix=Directriz
Directrix.Syntax=[ <Parábola> ]
Distance=Distancia
Distance.Syntax=[ <Punto>, <Obxecto> ]\n[ <Recta>, <Recta> ]
Div=Cociente
Div.Syntax=[ <Dividendo (número ou valor numérico)>, <Divisor (número ou valor numérico) ]\n[ <Dividendo (polinomio)>, <Divisor (polinomio)> ]
Division=División
Division.Syntax=[ <Dividendo (número ou valor numérico)>, <Divisor (número ou valor numérico) ]\n[ <Dividendo (polinomio)>, <Divisor (polinomio)> ]
Divisors=NúmeroDivisores
Divisors.Syntax=[ <Número> ]
DivisorsList=ListaDivisores
DivisorsList.Syntax=[ <Número> ]
DivisorsSum=SumaDivisores
DivisorsSum.Syntax=[ <Número> ]
Dodecahedron=Dodecaedro
Dodecahedron.Syntax=[ <Pentágono regular> ]\n[ <Punto>, <Punto>, <Punto> ]\n[ <Punto>, <Punto>, <Dirección> ]
Dot=ProdutoEscalar
DotPlot=GráficoDePuntos
DotPlot.Syntax=[ <List datos en bruto>, <Amorear puntos adxacentes (opcional)>, <Factor de escala (opcional)> ]
DynamicCoordinates=CoordenadasDinámicas
DynamicCoordinates.Syntax=[ <Punto>, <Coordenada x>, <Coordenada y> ]\n[ <Punto>, <Coordenada x>, <Coordenada y>, <Coordenada z> ]
Eccentricity=Excentricidade
Eccentricity.Syntax=[ <Cónica> ]
Eigenvalues=Autovalores
Eigenvalues.SyntaxCAS=[ <Matriz> ]
Eigenvectors=Autovectores
Eigenvectors.SyntaxCAS=[ <Matriz> ]
Element=Elemento
Element.Syntax=[ <Lista>, <Posición do elemento> ]\n[ <Matriz>, <Fila>, <Columna> ]\n[ <Lista>, <Índice1>, <Índice2>, ... ]
Element.SyntaxCAS=[ <Lista>, <Posición do elemento> ]\n[ <Matriz>, <Fila>, <Columna> ]
Eliminate=Eliminar
Eliminate.Syntax=[ <Lista de polinomios>, <Lista de variables> ]
Ellipse=Elipse
Ellipse.Syntax=[ <Foco>, <Foco>, <Semieixe principal (número)> ]\n[ <Foco>, <Foco>, <Semieixe principal (segmento)> ]\n[ <Foco>, <Foco>, <Punto polo que pasa> ]
Ends=Extremos
Ends.Syntax=[ <Cuádrica> ]
Envelope=Envolvente
Envelope.Syntax=[ <Percorrido>, <Punto> ]
Erlang=DistribuciónErlang
Erlang.Syntax=[ <Forma (número)>, <Razón>, x, <Acumula (booleana)> ]\n[ <Forma (número)>, <Razón>, <Valor da variable> ]
Evaluate=Avalía
Excentricity=SemidistanciaFocal
Excentricity.Syntax=[ <Cónica> ]
Execute=Executa
Execute.Syntax=[ <Lista de textos> ]\n[ <Lista de textos>, <Parámetro>, <Parámetro>, ... ]
Expand=Desenvolve
Expand.Syntax=[ <Función> ]
Exponential=DistribuciónExponencial
Exponential.Syntax=[ <Parámetro Lambda>, x, <Acumula (booleana)> ]\n[ <Parámetro Lambda>, <Valor da variable> ]
Exponential.SyntaxCAS=[ <Parámetro Lambda>, <Valor da variable> ]
ExportImage=ExportaImaxe
ExportImage.Syntax=[ <Propiedade>, <Valor>, <Propiedade>, <Valor>, ... ]
Extremum=Extremo
Extremum.Syntax=[ <Polinomio> ]\n[ <Función>, <Valor x inicial>, <Valor x final> ]
FDistribution=DistribuciónF
FDistribution.Syntax=[ <Graos de liberdade do numerador>, <Graos de liberdade do denominador>, x , <Acumula (booleana)> ]\n[ <Graos de liberdade do numerador>, <Graos de liberdade do denominador>,  <Valor da variable> ]
FDistribution.SyntaxCAS=[ <Graos de liberdade do numerador>, <Graos de liberdade do denominador>,  <Valor da variable> ]
Factor=Factoriza
Factor.Syntax=[ <Polinomio> ]
Factor.SyntaxCAS=[ <Número> ]\n[ <Polinomio> ]\n[ <Expresión>, <Variable> ]
Factors=Factores
Factors.Syntax=[ <Polinomio> ]\n[ <Número> ]
FillCells=RecheaCelas
FillCells.Syntax=[ <Rango de celas>, <Obxecto> ]\n[ <Cela>, <Lista> ]\n[ <Cela>, <Matriz> ]
FillColumn=RecheaColumna
FillColumn.Syntax=[ <Columna>, <Lista> ]
FillRow=RecheaFila
FillRow.Syntax=[ <Fila>, <Lista> ]
First=Primeiros
First.Syntax=[ <Lista> ]\n[ <Lista>, <Número de elementos> ]\n[ <Texto> ]\n[ <Texto>, <Número de elementos> ]\n[ <Lugar xeométrico>, <Número de elementos> ]
First.SyntaxCAS=[ <Lista> ]\n[ <Lista>, <Número de elementos> ]
FirstAxis=EixePrincipal
FirstAxis.Syntax=[ <Cónica> ]
FirstAxisLength=LonxitudeEixePrincipal
FirstAxisLength.Syntax=[ <Cónica> ]
Fit=Axusta
Fit.Syntax=[ <Lista de puntos>, <Lista de funcións> ]\n[ <Lista de puntos>, <Función> ]
FitExp=AxusteExp
FitExp.Syntax=[ <Lista de puntos> ]
FitGrowth=AxusteCrecemento
FitGrowth.Syntax=[ <Lista de puntos> ]
FitImplicit=AxusteImplícita
FitImplicit.Syntax=[ <Lista de puntos>, <Orde> ]
FitLineX=AxusteLinealX
FitLineX.Syntax=[ <Lista de puntos> ]
FitLineY=AxusteLineal
FitLineY.Syntax=[ <Lista de puntos> ]
FitLog=AxusteLogarítmico
FitLog.Syntax=[ <Lista de puntos> ]
FitLogistic=AxusteLoxístico
FitLogistic.Syntax=[ <Lista de puntos> ]
FitPoly=AxustePolinómico
FitPoly.Syntax=[ <Lista de puntos>, <Grao do polinomio> ]\n[ <Función mano alzada>, <Grao do polinomio> ]
FitPow=AxustePotencial
FitPow.Syntax=[ <Lista de puntos> ]
FitSin=AxusteSinusoidal
FitSin.Syntax=[ <Lista de Puntos (polo menos 4)> ]
Flatten=Aplana
Flatten.Syntax=[ <Lista> ]
Focus=Foco
Focus.Syntax=[ <Cónica> ]
FractionText=TextoFracción
FractionText.Syntax=[ <Número> ]\n[ <Punto> ]
Frequency=Frecuencia
Frequency.Syntax=[ <Lista de datos en bruto> ]\n[ <Acumula (booleana)>, <Lista de datos en bruto> ]\n[ <Lista de límites de clase>, <Lista de datos en bruto> ]\n[ <Lista de texto>, <Lista de texto> ]\n[ <Acumula (booleana)>, <Lista de límites de clase>, <Lista de datos en bruto> ]\n[ <Lista de límites de clase>, <Lista de datos en bruto>, <Usa densidade (booleana)>, <Factor de escala de densidade (opcional)> ]\n[ <Acumula (booleana)>, <Lista de límites de clase>, <Lista de datos en bruto>, <Usa densidade (booleana)>, <Factor de escala de densidade (opcional)> ]
FrequencyPolygon=PolígonoFrecuencia
FrequencyPolygon.Syntax=[ <Lista de límites de clase>, <Lista de alturas> ]\n[ <Lista de límites de clase>, <Lista de datos>, <Usa densidade (booleana)>, <Factor de escala de densidade (opcional)> ]\n[ <Acumula (booleana)>,  <Lista de límites de clase>, <Lista de datos>, <Usa densidade (booleana)>, <Factor de escala de densidade> (opcional)> ]
FrequencyTable=TáboaFrecuencia
FrequencyTable.Syntax=[ <Lista de datos en bruto>, <Factor de escala (opcional)> ]\n[ <Acumula (booleana)>, <Lista de datos en bruto> ]\n[ <Lista de límites de clase>, <Lista de datos en bruto> ]\n[ <Acumula (booleana)>, <Lista de límites de clase>, <Lista de datos en bruto> ]\n[ <Lista de límites de clase>, <Lista de datos en bruto>, <Usa densidade (booleana)>, <Factor de escala de densidade (opcional)> ]\n[ <Acumula (booleana)>, <Lista de límites de clase>, <Lista de datos en bruto>, <Usa densidade (booleana)>, <Factor de escala de densidade (opcional)>, <Factor de escala (optional)> ]
FromBase=DesdeBase
FromBase.Syntax=[ "<Número como texto>", <Base> ]
Function=Función
Function.Syntax=[ <Lista de números> ]\n[ <Función>, <Valor inicial de x>, <Valor final de x> ]
Function.Syntax3D=[ <Lista de números> ]\n[ <Función>, <Valor inicial>, <Valor final> ]\n[ <Expresión>, <Parámetro 1>, <Valor inicial>, <Valor final>, <Parámetro 2>, <Valor inicial>, <Valor final> ]
Function.SyntaxCAS=[ <Función>, <Valor inicial>, <Valor final> ]
FutureValue=ValorFuturo
FutureValue.Syntax=[ <Taxa>, <Número de períodos>, <Pagamento>, <Valor presente>, <Tipo (opcional)> ]
GCD=MCD
GCD.Syntax=[ <Número>, <Número> ]\n[ <Lista de números> ]
GCD.SyntaxCAS=[ <Número>, <Número> ]\n[ <Lista de números> ]\n[ <Polinomio>, <Polinomio> ]\n[ <Lista de polinomios> ]
Gamma=DistribuciónGamma
Gamma.Syntax=[ <Alfa>, <Beta>, x, <Acumula (booleana)> ]\n[ <Alfa>, <Beta>, <Valor da variable> ]
Gamma.SyntaxCAS=[ <Alfa>, <Beta>, <Valor da variable> ]
GeometricMean=MediaXeométrica
GeometricMean.Syntax=[ <Lista de números> ]
GetTime=TempoActual
GetTime.Syntax=[ ]\n[ "<Formato>" ]
GroebnerDegRevLex=GroebnerGraoRevLex
GroebnerDegRevLex.Syntax=[ <Lista de polinomios> ]\n[ <Lista de Polinomios>, <Lista de Variables> ]
GroebnerLex.Syntax=[ <Lista de Polinomios> ]\n[ <Lista de Polinomios>, <Lista de Variables> ]
GroebnerLexDeg=GroebnerLexGrao
GroebnerLexDeg.Syntax=[ <Lista de Polinomios> ]\n[ <Lista de Polinomios>, <Lista de Variables> ]
HarmonicMean=MediaHarmónica
HarmonicMean.Syntax=[ <Lista de números> ]
Height=Altura
Height.Syntax=[ <Sólido> ]
HideLayer=OcultaCapa
HideLayer.Syntax=[ <Número> ]
Histogram=Histograma
Histogram.Syntax=[ <Lista de límites de clases>, <Lista de alturas> ]\n[ <Lista de límites de clases>, <Lista de datos>, <Usa densidade (booleana)>, <Factor de escala de densidade (opcional)> ]\n[ <Acumula (booleana)>,  <Lista de límites de clase>, <Lista de datos>, <Usa densidade (booleana)>, <Factor de escala de densidade> (opcional)> ]
HistogramRight=HistogramaDereita
HistogramRight.Syntax=[ <Lista de límites de clases>, <Lista de alturas> ]\n[ <Lista de límites de clases>, <Lista de datos>, <Usa densidade (booleana)>, <Factor de escala de densidade (opcional)> ]\n[ <Acumula (booleana)>,  <Lista de límites de clase>, <Lista de datos>, <Usa densidade (booleana)>, <Factor de escala de densidade (opcional)> ]
HyperGeometric=DistribuciónHiperXeométrica
HyperGeometric.Syntax=[ <Tamaño da poboación>, <Número de éxitos>, <Tamaño da mostra> ]\n[ <Tamaño da poboación>, <Número de éxitos>, <Tamaño da mostra>, <Acumula (booleana)> ]\n[ <Tamaño da poboación>, <Número de éxitos>, <Tamaño da mostra>, <Valor da variable>, <Acumula (booleana)> ]
HyperGeometric.SyntaxCAS=[ <Tamaño da poboación>, <Número de éxitos>, <Tamaño da mostra>, <Valor da variable>, <Acumula (booleana)> ]
Hyperbola=Hipérbole
Hyperbola.Syntax=[ <Foco>, <Foco>, <Semieixe principal (lonxitude )> ]\n[ <Foco>, <Foco>, <Semieixe principal (segmento)> ]\n[ <Foco>, <Foco>, <Punto polo que pasa> ]
IFactor=FactorR
IFactor.Syntax=[ <Polinomio> ]
IFactor.SyntaxCAS=[ <Expresión> ]\n[ <Expresión>, <Variable> ]
Icosahedron=Icosaedro
Icosahedron.Syntax=[ <Triángulo equilátero> ]\n[ <Punto>, <Punto>, <Punto> ]\n[ <Punto>, <Punto>, <Dirección> ]
Identity=Identidade
Identity.Syntax=[ <Número> ]
If=Se
If.Syntax=[ <Condición>, <Entón> ]\n[ <Condición>, <Entón>, <Senón> ]
ImplicitCurve=CurvaImplícita
ImplicitCurve.Syntax=[ <Lista de puntos> ]\n[ <f(x, y)> ]
ImplicitDerivative=DerivadaImplícita
ImplicitDerivative.SyntaxCAS=[ <f(x, y)> ]\n[ <Expresión>, <Variable dependente>, <Variable independente> ]
Incircle=CircunferenciaInscrita
Incircle.Syntax=[ <Punto>, <Punto>, <Punto> ]
IndexOf=ÍndiceDe
IndexOf.Syntax=[ <Obxecto>, <Lista> ]\n[ <Obxecto>, <Lista>, <Índice inicial> ]\n[ <Texto>, <Texto> ]\n[ <Texto>, <Texto>, <Índice inicial> ]
Insert=Inserir
Insert.Syntax=[ <Lista>, <Lista>, <Posición> ]\n[ <Obxecto>, <Lista>, <Posición> ]
Integral.Syntax=[ <Función> ]\n[ <Función>, <Variable> ]\n[ <Función>, <Valor inicial x>, <Valor final x> ]\n[ <Función>, <Valor Inicial x>, <Valor final x>, <Avalía (booleana)> ]
Integral.SyntaxCAS=[ <Función> ]\n[ <Función>, <Variable> ]\n[ <Función>, <Valor inicial x>, <Valor final x> ]\n[ <Función>, <Variable> , <Valor inicial>, <Valor final> ]
IntegralBetween=IntegralEntre
IntegralBetween.Syntax=[ <Función>, <Función>, <Valor inicial x>, <Valor final x> ]\n[ <Función>, <Función>, <Valor Inicial x>, <Valor final x>, <Avalía (booleana)> ]
IntegralBetween.SyntaxCAS=[ <Función>, <Función>, <Valor inicial x>, <Valor final x> ]\n[ <Función>, <Función>, <Valor Inicial x>, <Valor final x>, <Avalía (booleana)> ]
IntegralSymbolic=IntegralSimbólica
IntegralSymbolic.Syntax=[ <Función> ]\n[ <Función>, <Variable> ]
InteriorAngles=ÁngulosInteriores
InteriorAngles.Syntax=[ <Polígono> ]
Intersect=Interseca
Intersect.Syntax=[ <Obxecto>, <Obxecto> ]\n[ <Obxecto>, <Obxecto>, <Número do punto de intersección> ]\n[ <Obxecto>, <Obxecto>, <Punto inicial> ]\n[ <Función>, <Función>, <Valor inicial x>, <Valor final x> ]\n[ <Curva 1>, <Curva 2>, <Parámetro 1>, <Parámetro 2> ]
Intersect.SyntaxCAS=[ <Función>, <Función> ]
IntersectConic=IntersecaCónica
IntersectConic.Syntax=[ <Plano>, <Cuádrica> ]\n[ <Cuádrica>, <Cuádrica> ]
IntersectPath=IntersecaPercorridos
IntersectPath.Syntax=[ <Recta>, <Polígono> ]\n[ <Polígono>, <Polígono> ]
IntersectPath.Syntax3D=[ <Recta>, <Polígono> ]\n[ <Polígono>, <Polígono> ]\n[ <Plano>, <Polígono> ]\n[ <Plano>, <Cuádrica> ]
Intersection=Intersección
Intersection.Syntax=[ <Lista>, <Lista> ]
InverseBinomial=DistribuciónBinomialInversa
InverseBinomial.Syntax=[ <Número de ensaios>, <Probabilidade de éxito>, <Probabilidade> ]
InverseCauchy=DistribuciónCauchyInversa
InverseCauchy.Syntax=[ <Mediana>, <Escala>, <Probabilidade> ]
InverseChiSquared=DistribuciónChiCuadradoInversa
InverseChiSquared.Syntax=[ <Graos de liberdade>, <Probabilidade> ]
InverseExponential=DistribuciónExponencialInversa
InverseExponential.Syntax=[ <Parámetro Lambda>, <Probabilidade> ]
InverseFDistribution=DistribuciónFInversa
InverseFDistribution.Syntax=[ <Graos de liberdade do numerador>, <Graos de liberdade do denominador>, <Probabilidade> ]
InverseGamma=GammaInversa
InverseGamma.Syntax=[ <Alfa>, <Beta>, <Probabilidade> ]
InverseHyperGeometric=DistribuciónHiperXeométricaInversa
InverseHyperGeometric.Syntax=[ <Tamaño da poboación>, <Número de éxitos>, <Tamaño da mostra>, <Probabilidade> ]
InverseLaplace=LaplaceInversa
InverseLaplace.Syntax=[ <Función> ]\n[ <Función>, <Variable> ]\n[ <Función>, <Variable>, <Variable> ]
InverseLogNormal=DistribuciónLogNormalInversa
InverseLogNormal.Syntax=[ <Media>, <Desviación típica>, <Probabilidade> ]
InverseLogistic=DistribuciónLoxísticaInversa
InverseLogistic.Syntax=[ <Media>, <Escala>, <Probabilidade> ]
InverseNormal=DistribuciónNormalInversa
InverseNormal.Syntax=[ <Media>, <Desviación estándar>, <Probabilidade> ]
InversePascal=DistribuciónPascalInversa
InversePascal.Syntax=[ <n>, <p>, <Probabilidade> ]
InversePoisson=DistribuciónPoissonInversa
InversePoisson.Syntax=[ <Media>, <Probabilidade> ]
InverseTDistribution=DistribuciónTInversa
InverseTDistribution.Syntax=[ <Graos de liberdade>, <Probabilidade> ]
InverseWeibull=DistribuciónWeibullInversa
InverseWeibull.Syntax=[ <Forma>, <Escala>, <Probabilidade> ]
InverseZipf=DistribuciónZipfInversa
InverseZipf.Syntax=[ <Número de elementos>, <Expoñente>, <Probabilidade> ]
Invert=Inverte
Invert.Syntax=[ <Matriz> ]\n[ <Función> ]
IsInRegion=EstáEnRexión
IsInRegion.Syntax=[ <Punto>, <Rexión> ]
IsInteger=ÉEnteiro
IsInteger.Syntax=[ <Número> ]
IsPrime=ÉPrimo
IsPrime.Syntax=[ <Número> ]
IsTangent=ÉTanxente
IsTangent.Syntax=[ <Recta>, <Cónica> ]
IsVertexForm=ÉCuadráticaCanónica
IsVertexForm.Syntax=[ <Función> ]
Iteration=Iteración
Iteration.Syntax=[ <Función>, <Valor inicial>, <Número de iteracións> ]\n[ <Expresión>, <Variables>, <Valores iniciais>, <Número de iteracións> ]
IterationList=ListaIteración
IterationList.Syntax=[ <Función>, <Valor inicial>, <Número de iteracións> ]\n[ <Expresión>, <Variables>, <Valores iniciais>, <Número de iteracións> ]
Join=Concatena
Join.Syntax=[ <Lista>, <Lista>, ... ]\n[ <Lista de listas> ]
JordanDiagonalization=CanónicaJordan
JordanDiagonalization.SyntaxCAS=[ <Matriz> ]
KeepIf=ManterSe
KeepIf.Syntax=[ <Condición>, <Lista> ]\n[ <Condición>, <Variable>, <Lista> ]
LCM=MCM
LCM.Syntax=[ <Número>, <Número> ]\n[ <Lista de números> ]
LCM.SyntaxCAS=[ <Número>, <Número> ]\n[ <Polinomio>, <Polinomio> ]\n[ <Lista de números> ]\n[ <Lista de polinomios> ]
LaTeX=FórmulaTexto
LaTeX.Syntax=[ <Obxecto> ]\n[ <Obxecto>, <Substitúe variables (booleana)> ]\n[ <Obxecto>, <Substitúe variables (booleana)>, <Mostra nome (booleana)> ]
Laplace.Syntax=[ <Función> ]\n[ <Función>, <Variable> ]\n[ <Función>, <Variable>, <Variable> ]
Last=Último
Last.Syntax=[ <Lista> ]\n[ <Lista>, <Número de elementos> ]\n[ <Texto> ]\n[ <Texto>, <Número de caracteres> ]
Last.SyntaxCAS=[ <Lista> ]\n[ <Lista>, <Número de elementos> ]
LeftSide=PrimeiroMembro
LeftSide.Syntax=[ <Ecuación> ]
LeftSide.SyntaxCAS=[ <Ecuación> ]\n[ <Lista de ecuacións> ]\n[ <Lista de ecuacións>, <Índice> ]
LeftSum=SumaEsquerda
LeftSum.Syntax=[ <Función>, <Valor inicial x>, <Valor final x>, <Número de rectángulos> ]
Length=Lonxitude
Length.Syntax=[ <Obxecto> ]\n[ <Función>, <Valor inicial x>, <Valor final x> ]\n[ <Función>, <Punto inicial>, <Punto final> ]\n[ <Curva>, <Valor inicial t>, <Valor final t> ]\n[ <Curva>, <Punto inicial>, <Punto final> ]
Length.SyntaxCAS=[ <Lista> ]\n[ <Función>, <Valor inicial x>, <Valor final x> ]\n[ <Función>, <Variable>, <Punto inicial>, <Punto final> ]
LetterToUnicode=CódigoDeCarácter
LetterToUnicode.Syntax=[ "<Carácter>" ]
Limit=Límite
Limit.Syntax=[ <Función>, <Valor> ]
Limit.SyntaxCAS=[ <Expresión>, <Valor> ]\n[ <Expresión>, <Variable>, <Valor> ]
LimitAbove=LímiteLateralDereito
LimitAbove.Syntax=[ <Función>, <Valor> ]
LimitAbove.SyntaxCAS=[ <Expresión>, <Valor> ]\n[ <Expresión>, <Variable>, <Valor> ]
LimitBelow=LímiteLateralEsquerdo
LimitBelow.Syntax=[ <Función>, <Valor> ]
LimitBelow.SyntaxCAS=[ <Expresión>, <Valor> ]\n[ <Expresión>, <Variable>, <Valor> ]
Line=Recta
Line.Syntax=[ <Punto>, <Punto> ]\n[ <Punto>, <Recta paralela> ]\n[ <Punto>, <Vector de dirección> ]
LineBisector=Mediatriz
LineBisector.Syntax=[ <Punto>, <Punto> ]\n[ <Segmento> ]
LineBisector.Syntax3D=[ <Segmento> ]\n[ <Punto>, <Punto> ]\n[ <Punto>, <Punto>, <Dirección> ]
LineGraph=GráficoPoligonal
LineGraph.Syntax=[ <Lista de  abscisas>, <Lista de ordenadas> ]
Locus=LugarXeométrico
Locus.Syntax=[ <Punto que crea o lugar>, <Punto> ]\n[ <Punto que crea o lugar>, <Esvarador> ]\n[ <Campo de direccións>, <Punto> ]\n[ <f(x, y)>, <Punto> ]
LocusEquation=EcuaciónLugar
LocusEquation.Syntax=[ <Lugar> ]\n[ <Punto lugar>, <Punto móvil> ]\n[ <Expresión Booleana>, <Punto libre> ]
LogNormal=DistribuciónLogNormal
LogNormal.Syntax=[ <Media>, <Desviación estándar>, x, <Acumula (booleana)> ]\n[ <Media>, <Desviación estándar>, <Valor da variable> ]
Logistic=DistribuciónLoxística
Logistic.Syntax=[ <Media>, <Escala>, x, <Acumula (booleana)> ]\n[ <Media>, <Escala>, <Valor da variable> ]
LowerSum=SumaInferior
LowerSum.Syntax=[ <Función>, <Valor inicial x>, <Valor final x>, <Número de rectángulos> ]
MAD=DM
MAD.Syntax=[ <Lista de datos en bruto> ]\n[ <Lista de números>, <Lista de frecuencias> ]
MatrixPlot=GráficoMatricial
MatrixRank=RangoMatriz
MatrixRank.Syntax=[ <Matriz> ]
Max=Máximo
Max.Syntax=[ <Intervalo> ]\n[ <Lista> ]\n[ <Número>, <Número> ]\n[ <Lista de Datos>, <Lista de Frecuencias> ]\n[ <Función>, <Valor-x Inicial>, <Valor-x Final> ]
Max.SyntaxCAS=[ <Lista> ]\n[ <Número>, <Número> ]
Maximize=Maximiza
Maximize.Syntax=[ <Número dependente>, <Número libre (esvarador)> ]\n[ <Número dependente>, <Punto en percorrido> ]
Mean=Media
Mean.Syntax=[ <Lista de datos en bruto> ]\n[ <Lista de números>, <Lista de frecuencias> ]
Mean.SyntaxCAS=[ <Lista de números> ]
MeanX=MediaX
MeanX.Syntax=[ <Lista de puntos> ]
MeanY=MediaY
MeanY.Syntax=[ <Lista de puntos> ]
Median=Mediana
Median.Syntax=[ <Lista de datos en bruto> ]\n[ <Lista de números>, <Lista de frecuencias> ]
Median.SyntaxCAS=[ <Lista de números> ]
Midpoint=PuntoMedio
Midpoint.Syntax=[ <Punto>, <Punto> ]\n[ <Segmento> ]\n[ <Cónica> ]\n[ <Intervalo> ]
Min=Mínimo
Min.Syntax=[ <Intervalo> ]\n[ <Lista> ]\n[ <Número>, <Número> ]\n[ <Lista de Datos>, <Lista de Frecuencias> ]\n[ <Función>, <Valor-x Inicial>, <Valor-x Final> ]
Min.SyntaxCAS=[ <Lista> ]\n[ <Número>, <Número> ]
Minimize=Minimiza
Minimize.Syntax=[ <Número dependente>, <Número libre (esvarador)> ]\n[ <Número dependente>, <Punto en percorrido> ]
MinimumSpanningTree=ÁrboreExpansiónMínima
MinimumSpanningTree.Syntax=[ <Lista de puntos> ]
Mirror=Reflexa
Mirror.Syntax=[ <Obxecto>, <Punto> ]\n[ <Obxecto>, <Recta> ]\n[ <Obxecto>, <Circunferencia> ]
Mirror.Syntax3D=[ <Obxecto>, <Punto> ]\n[ <Obxecto>, <Liña> ]\n[ <Obxecto>, <Plano> ]\n[ <Obxecto>, <Circunferencia> ]
MixedNumber=NúmeroMixto
MixedNumber.SyntaxCAS=[ <Número> ]
Mod=Resto
Mod.Syntax=[ <Dividendo>, <Divisor> ]\n[ <Polinomio dividendo>, <Polinomio divisor> ]
Mode=Moda
Mode.Syntax=[ <Lista de números> ]
NDerivative=DerivadaN
NDerivative.Syntax=[ <Función> ]\n[ <Función>, <Orde> ]
NIntegral=IntegralNum
NIntegral.Syntax=[ <Función> ]\n[ <Función>, <Valor inicial x>, <Valor final x> ]
NIntegral.SyntaxCAS=[ <Función>, <Valor inicial x>, <Valor final x> ]\n[ <Función>, <Variable>, <Valor inicial>, <Valor final> ]
NInvert=InversaN
NInvert.Syntax=[ <Función> ]
NSolutions=SoluciónsNum
NSolutions.Syntax=[ <Ecuación> ]
NSolutions.SyntaxCAS=[ <Ecuación> ]\n[ <Ecuación>, <Variable> ]\n[ <Ecuación>, <Variable = valor inicial> ]\n[ <Lista de ecuacións>, <Lista de variables> ]
NSolve=ResolveNum
NSolve.Syntax=[ <Ecuación> ]
NSolve.SyntaxCAS=[ <Ecuación> ]\n[ <Ecuación>, <Variable> ]\n[ <Ecuación>, <Variable = valor inicial> ]\n[ <Lista de ecuacións>, <Lista de variables> ]\n[ <Lista de ecuacións>, <Lista de   variables = valores iniciais> ]
NSolveODE=ResolveNEDO
NSolveODE.Syntax=[ <Lista de Derivadas>, <coordenada-x Inicial>, <Lista de coordenadas-y Iniciais>, <coordenada-x Final> ]
Name=Nome
Name.Syntax=[ <Obxecto> ]
Net=Desenvolvemento
Net.Syntax=[ <Poliedro>, <Número> ]\n[ <Poliedro>, <Número>, <Cara>, <Aresta>, <Aresta>, ... ]
NextPrime=PrimoSeguinte
NextPrime.Syntax=[ <Número> ]
Normal=DistribuciónNormal
Normal.Syntax=[ <Media>, <Desviación estándar>, <Valor da variable> ]\n[ <Media>, <Desviación estándar>, <Valor da variable>, <Acumula (booleana)>  ]\n[ <Media>, <Desviación estándar>, x, <Acumula (booleana)> ]
Normal.SyntaxCAS=[ <Media>, <Desviación estándar>, <Valor da variable> ]
NormalQuantilePlot=GráficoCuantilNormal
NormalQuantilePlot.Syntax=[ <lista de datos> ]
Normalize=Normalizar
Normalize.Syntax=[ <Lista de Números> ]\n[ <Lista de Puntos> ]
Numerator=Numerador
Numerator.Syntax=[ <Número> ]\n[ <Función> ]
Numerator.SyntaxCAS=[ <Expresión> ]
Numeric=ValorNumérico
Numeric.SyntaxCAS=[ <Expresion> ]\n[ <Expresion> , <Numéro de cifras significativas> ]
Object=Obxecto
Object.Syntax=[ <Nome do obxecto como texto> ]
Octahedron=Octaedro
Octahedron.Syntax=[ <Triángulo equilátero> ]\n[ <Punto>, <Punto>, <Punto> ]\n[ <Punto>, <Punto>, <Dirección> ]
Ordinal.Syntax=[ <Número positivo> ]
OrdinalRank=ListaOrdinal
OrdinalRank.Syntax=[ <Lista> ]
OrthogonalLine=Perpendicular
OrthogonalLine.Syntax=[ <Punto>, <Recta> ]\n[ <Punto>, <Segmento> ]\n[ <Punto>, <Vector> ]
OrthogonalLine.Syntax3D=[ <Punto>, <Liña> ]\n[ <Punto>, <Segmento> ]\n[ <Punto>, <Vector> ]\n[ <Punto>, <Plano> ]\n[ <Liña>, <Liña> ]\n[ <Punto>, <Liña>, <Liña> ]\n[ <Punto>, <Vector>, <Vector> ]\n[ <Punto>, <Liña>, <Contexto> ]
OrthogonalPlane=PlanoPerpendicular
OrthogonalPlane.Syntax=[ <Punto>, <Recta> ]\n[ <Punto>, <Vector> ]
OrthogonalVector=VectorPerpendicular
OrthogonalVector.Syntax=[ <Recta> ]\n[ <Segmento> ]\n[ <Vector> ]
OrthogonalVector.Syntax3D=[ <Recta> ]\n[ <Segmento> ]\n[ <Vector> ]\n[ <Plano> ]
OsculatingCircle=CírculoOsculador
OsculatingCircle.Syntax=[ <Punto>, <Obxecto> ]
PMCC=CoeficienteCorrelación
PMCC.Syntax=[ <Lista de puntos> ]\n[ <Lista de valores x>, <Lista de valores y> ]
Pan=DesprazaVista
Pan.Syntax=[ <desp x>, < desp y> ]
Parabola=Parábola
Parabola.Syntax=[ <Foco>, <Directriz> ]
Parameter=Parámetro
Parameter.Syntax=[ <Parábola> ]
ParametricDerivative=DerivadaParamétrica
ParametricDerivative.Syntax=[ <Curva> ]
ParseToFunction=AsignaFunción
ParseToFunction.Syntax=[ <Función (nome)>, <Cadea texto> ]
ParseToNumber=AsignaNúmero
ParseToNumber.Syntax=[ <Variable (nome)>, <Cadea texto co valor> ]
PartialFractions=FracciónsSimples
PartialFractions.Syntax=[ <Función> ]
PartialFractions.SyntaxCAS=[ <Función> ]\n[ <Función>, <Variable> ]
Pascal=DistribuciónPascal
Pascal.Syntax=[ <Número de éxitos>, <Probabilidade de éxito> ]\n[ <Número de éxitos>, <Probabilidade de éxito>, <Acumula (booleana)> ]\n[ <Número de éxitos>, <Probabilidade de éxito>, <Valor da variable>, <Acumula (booleana)> ]
Pascal.SyntaxCAS=[ <n>, <p>, <Valor da variable>, <Booleana acumula> ]
PathParameter=ParámetroNoPercorrido
PathParameter.Syntax=[ <Punto en percorrido> ]
Payment=Pagamento
Payment.Syntax=[ <Tasa>, <Número de períodos>, <Valor presente>, <Valor futuro (octional)>, <Tipo (opcional)> ]
Percentile=Percentil
Percentile.Syntax=[ <Lista de números>, <Tanto por un> ]
Perimeter=Perímetro
Perimeter.Syntax=[ <Polígono> ]\n[ <Cónica> ]\n[ <Lugar xeométrico> ]
Periods=Períodos
Periods.Syntax=[ <Taxa>, <Pago>, <Valor actual>, <Valor futuro(opcional)>, <Tipo (opcional)> ]
Plane=Plano
Plane.Syntax=[ <Polígono> ]\n[ <Cónica> ]\n[ <Punto>, <Plano> ]\n[ <Punto>, <Recta> ]\n[ <Recta>, <Recta> ]\n[ <Punto>, <Punto>, <Punto> ]
PlaneBisector=PlanoMedio
PlaneBisector.Syntax=[ <Segmento> ]\n[ <Punto>, <Punto> ]
PlaySound=TocaSon
PlaySound.Syntax=[ <URL> ]\n[ <Toca (booleana)> ]\n[ <Función>, <Valor mínimo>, <Valor máximo> ]\n[ <Función>, <Valor mínimo>, <Valor máximo>, <Taxa de mostraxe>, <Profundidade de mostraxe> ]
PlotSolve=ResolveGráfica
PlotSolve.Syntax=[ <Ecuación en x> ]
Point=Punto
Point.Syntax=[ <Obxecto> ]\n[ <Percorrido>, <Parámetro> ]\n[ <Punto>, <Vector> ]
PointIn=PuntoEn
PointIn.Syntax=[ <Rexión> ]
PointList=ListaPuntos
PointList.Syntax=[ <Lista> ]
Poisson=DistribuciónPoisson
Poisson.Syntax=[ <Media> ]\n[ <Media>, <Acumula (booleana)> ]\n[ <Media>, <Valor da variable>, <Acumula (booleana)> ]
Poisson.SyntaxCAS=[ <Media>, <Valor da variable>, <Acumula (booleana)> ]
Polar.Syntax=[ <Punto>, <Cónica> ]\n[ <Recta>, <Cónica> ]
PolyLine=Poligonal
PolyLine.Syntax=[ <Punto>, ..., <Punto> ]\n[ <Lista de puntos> ]
Polygon=Polígono
Polygon.Syntax=[ <Punto>, ..., <Punto> ]\n[ <Punto, <Punto>, <Número de vértices> ]\n[ <Lista de puntos> ]
Polygon.Syntax3D=[ <Lista de Puntos> ]\n[ <Punto>, ..., <Punto> ]\n[ <Punto>, <Punto>, <Número de Vértices> ]\n[ <Punto>, <Punto>, <Número de Vértices>, <Dirección> ]
Polynomial=Polinomio
Polynomial.Syntax=[ <Función> ]\n[ <Lista de puntos> ]
Polynomial.SyntaxCAS=[ <Función> ]\n[ <Función>, <Variable> ]
PresentValue=ValorActual
PresentValue.Syntax=[ <Taxa>, <Número de períodos>, <Pagamento>, <Valor futuro(opcional)>, <Tipo (opcional)> ]
PreviousPrime=PrimoAnterior
PreviousPrime.Syntax=[ <Número> ]
PrimeFactors=FactoresPrimos
PrimeFactors.Syntax=[ <Número> ]
Prism=Prisma
Prism.Syntax=[ <Punto>, <Punto>, ... ]\n[ <Polígono>, <Punto> ]\n[ <Polígono>, <Valor altura> ]
Product=Produto
Product.Syntax=[ <Lista de datos en bruto> ]\n[ <Lista de números>, <Número de elementos> ]\n[ <Lista de números>, <Lista de frecuencias> ]\n[ <Expresión>, <Variable>, <Valor inicial>, <Valor final> ]
Product.SyntaxCAS=[ <Lista de expresións> ]\n[ <Expresión>, <Variable>, <Índice inicial>, <Índice final> ]
Prove=Probar
Prove.Syntax=[ <Expresión booleana> ]
ProveDetails=ProbaDetallada
ProveDetails.Syntax=[ <Expresión booleana> ]
Pyramid=Pirámide
Pyramid.Syntax=[ <Punto>, <Punto>, ... ]
Q1=Q1
Q1.Syntax=[ <Lista de datos en bruto> ]\n[ <Lista de números>, <Lista de frecuencias> ]
Q3=Quartil3
Q3.Syntax=[ <Lista de datos en bruto> ]\n[ <Lista de números>, <Lista de frecuencias> ]
QuadricSide=Lado
QuadricSide.Syntax=[ <Cuádrica> ]
RSquare=RCadrado
RSquare.Syntax=[ <Lista de puntos>, <Función> ]
Radius=Raio
Radius.Syntax=[ <Cónica> ]
Random=AleatorioEntre
Random.Syntax=[ <Mínimo enteiro>, <Máximo enteiro> ]\n[ <Mínimo enteiro>, <Máximo enteiro>, <Fixado true|false> ]
Random.SyntaxCAS=[ <Mínimo enteiro>, <Máximo enteiro> ]
RandomBinomial=AleatorioBinomial
RandomBinomial.Syntax=[ <Número de intentos>, <Probabilidade> ]
RandomDiscrete=DiscretaAleatoria
RandomDiscrete.Syntax=[ <Lista>, <Lista> ]
RandomElement=ElementoAleatorio
RandomElement.Syntax=[ <Lista> ]
RandomNormal=AleatorioNormal
RandomNormal.Syntax=[ <Media>, <Desviación estándar> ]
RandomPointIn=PuntoAleatorioEn
RandomPointIn.Syntax=[ <Rexión> ]\n[ <Lista de Puntos> ]\n[ <xMin>, <xMax>, <yMin>, <yMax> ]
RandomPoisson=AleatorioPoisson
RandomPoisson.Syntax=[ <Media> ]
RandomPolynomial=PolinomioAleatorio
RandomPolynomial.Syntax=[ <Grao>, <Valor mínimo coeficientes>, <Valor máximo coeficientes> ]
RandomPolynomial.SyntaxCAS=[ <Grao>, <Valor mínimo coeficientes>, <Valor máximo coeficientes> ]\n[ <Variable>, <Grao>, <Valor mínimo coeficientes>, <Valor máximo coeficientes> ]
RandomUniform=AleatorioUniforme
RandomUniform.Syntax=[ <Mínimo>, <Máximo> ]\n[ <Mínimo>, <Máximo>, <Número de mostras> ]
Rate=Taxa
Rate.Syntax=[ <Número de períodos>, <Pagamento>, <Valor actual>, <Valor futuro(opcional)>, <Tipo (opcional)>, <Estimación (opcional)> ]
Rationalize=PasaAFracción
Rationalize.SyntaxCAS=[ <Número> ]
Ray=Semirrecta
Ray.Syntax=[ <Punto inicial>, <Punto> ]\n[ <Punto inicial>, <Vector de dirección> ]
ReadText=LeTexto
ReadText.Syntax=[ <Texto> ]
RectangleSum=SumaRectangular
RectangleSum.Syntax=[ <Función>, <Valor inicial x>, <Valor final x>, <Número de rectángulos>, <Posición altura do rectángulo> ]
ReducedRowEchelonForm=GraduadaReducida
ReducedRowEchelonForm.Syntax=[ <Matriz> ]
Relation=Relación
Relation.Syntax=[ <Lista> ]\n[ <Obxecto>, <Obxecto> ]
RemovableDiscontinuity=DescontinuidadeEvitábel
RemovableDiscontinuity.Syntax=[ <Función> ]
Remove=Borrar
Remove.Syntax=[ <Lista>, <Lista> ]
RemoveUndefined=EliminaIndefinidos
RemoveUndefined.Syntax=[ <Lista> ]
Rename=Renomea
Rename.Syntax=[ <Obxecto>, <Nome> ]
Repeat=Repetir
Repeat.Syntax=[ <Número>, <Comando script>, <Comando script>, ... ]
ResidualPlot=GraficoResidual
ResidualPlot.Syntax=[ <Lista de puntos>, <Función> ]
Reverse=Reverte
Reverse.Syntax=[ <Lista> ]
RightSide=SegundoMembro
RightSide.Syntax=[ <Ecuación> ]
RightSide.SyntaxCAS=[ <Ecuación> ]\n[ <Lista de ecuacións> ]\n[ <Lista de ecuacións>, <Índice> ]
RigidPolygon=PolígonoRíxido
RigidPolygon.Syntax=[ <Polígono> ]\n[ <Polígono>, <Deprazamento x>, <Deprazamento y> ]\n[ <Punto libre>, ..., <Punto libre> ]
Root=Raíz
Root.Syntax=[ <Polinomio> ]\n[ <Función>, <Valor inicial x> ]\n[ <Función>, <Valor inicial x>, <Valor final x> ]
Root.SyntaxCAS=[ <Polinomio> ]
RootList=ListaRaíces
RootList.Syntax=[ <Lista números> ]
RootMeanSquare=MediaCadrática
RootMeanSquare.Syntax=[ <Lista de números> ]
Roots=Raíces
Roots.Syntax=[ <Función>, <Valor inicial x>, <Valor final x> ]
Rotate=Rota
Rotate.Syntax=[ <Obxecto>, <Ángulo> ]\n[ <Obxecto>, <Ángulo>, <Punto> ]
Rotate.Syntax3D=[ <Obxecto>, <Ángulo> ]\n[ <Obxecto>, <Ángulo>, <Punto> ]\n[ <Obxecto>, <Ángulo>, <Eixe de Rotación> ]\n[ <Obxecto>, <Ángulo>, <Punto sobre Eixe>, <Dirección do Eixe ou Plano> ]
RotateText=RotaTexto
RotateText.Syntax=[ <Texto>, <Ángulo> ]
Row=Fila
Row.Syntax=[ <Cela de folla de cálculo> ]
RunClickScript=ExecutaAoClic
RunClickScript.Syntax=[ <Obxecto> ]
RunUpdateScript=ExecutaAoActualizar
RunUpdateScript.Syntax=[ <Obxecto> ]
SD=DT
SD.Syntax=[ <Lista de datos en bruto> ]\n[ <Lista de números>, <Lista de frecuencias> ]
SDX=DTx
SDX.Syntax=[ <Lista de puntos> ]
SDY=DTy
SDY.Syntax=[ <Lista de puntos> ]
SVD=DVS
SVD.Syntax=[ <Matriz> ]
SXX.Syntax=[ <Lista de números> ]\n[ <Lista de puntos> ]
SXY.Syntax=[ <Lista de números>, <Lista de números> ]\n[ <Lista de puntos> ]
SYY.Syntax=[ <Lista de puntos> ]
Sample=Mostra
Sample.Syntax=[ <Lista>, <Tamaño> ]\n[ <Lista>, <Tamaño>, <Con substitución> ]
SampleSD=DTMostra
SampleSD.Syntax=[ <Lista de datos en bruto> ]\n[ <Lista de números>, <Lista de frecuencias> ]
SampleSD.SyntaxCAS=[ <lista de números> ]
SampleSDX=DTxMostra
SampleSDX.Syntax=[ <Lista de puntos> ]
SampleSDY=DTyMostra
SampleSDY.Syntax=[ <Lista de puntos> ]
SampleVariance=VarianzaMostra
SampleVariance.Syntax=[ <Lista de datos en bruto> ]\n[ <Lista de números>, <Lista de frecuencias> ]
SampleVariance.SyntaxCAS=[ <Lista de números> ]
ScientificText=NotaciónCientíficaTexto
ScientificText.Syntax=[ <Número> ]\n[ <Número>, <Precisión> ]
SecondAxis=EixeSecundario
SecondAxis.Syntax=[ <Cónica> ]
SecondAxisLength=LonxitudeSemieixeSecundario
SecondAxisLength.Syntax=[ <Cónica> ]
Sector.Syntax=[ <Cónica>, <Punto>, <Punto> ]\n[ <Cónica>, <Valor parámetro>, <Valor parámetro> ]
Segment=Segmento
Segment.Syntax=[ <Punto>, <Punto> ]\n[ <Punto>, <Lonxitude> ]
SelectObjects=SeleccionarObxectos
SelectObjects.Syntax=[ ]\n[ <Obxecto>, <Obxecto>, ... ]
SelectedElement=ElementoSeleccionado
SelectedElement.Syntax=[ <Lista> ]
SelectedIndex=ÍndiceSeleccionado
SelectedIndex.Syntax=[ <Lista> ]
Semicircle=Semicircunferencia
Semicircle.Syntax=[ <Punto>, <Punto> ]
Sequence=Secuencia
Sequence.Syntax=[ <Valor final> ]\n[ <Valor inicial>, <Valor final> ]\n[ <Valor inicial>, <Valor final>, <Incremento> ]\n[ <Expresión>, <Variable>, <Valor inicial>, <Valor final> ]\n[ <Expresión>, <Variable>, <Valor inicial>, <Valor final>, <Incremento> ]
SetActiveView=VistaActiva
SetActiveView.Syntax=[ <Vista> ]\n[ <Plano> ]
SetAxesRatio=RazónEixes
SetAxesRatio.Syntax=[ <Número>, <Número> ]
SetAxesRatio.Syntax3D=[ <Número>, <Número> ]\n[ <Número>, <Número>, <Número> ]
SetBackgroundColor=CorFondo
SetBackgroundColor.Syntax=[ <Obxecto>, "<Cor>" ]\n[ <Obxecto>, <Vermello>, <Verde>, <Azul> ]
SetCaption=Subtítulo
SetCaption.Syntax=[ <Obxecto>, <Texto> ]
SetColor=Cor
SetColor.Syntax=[ <Obxecto>, "<Cor>" ]\n[ <Obxecto>, <Vermello>, <Verde>, <Azul> ]
SetConditionToShowObject=CondiciónParaMostrar
SetConditionToShowObject.Syntax=[ <Obxecto>, <Condición> ]
SetConstructionStep=EstablecerpasoConstrución
SetConstructionStep.Syntax=[ <Número> ]
SetCoords=EstablecerCoordenadas
SetCoords.Syntax=[ <Obxecto>, <x>, <y> ]\n[ <Obxecto>, <x>, <y>, <z> ]
SetDecoration=Decoración
SetDecoration.Syntax=[ <Obxecto>, <Número> ]
SetDynamicColor=CorDinámico
SetDynamicColor.Syntax=[ <Obxecto>, <Vermello>, <Verde>, <Azul> ]\n[ <Obxecto>, <Vermello>, <Verde>, <Azul>, <Opacidade> ]
SetFilling=Opacidade
SetFilling.Syntax=[ <Obxecto>, <Número> ]
SetFixed=Fixa
SetFixed.Syntax=[ <Obxecto>, <true | false> ]\n[ <Obxecto>, <true | false>, <true | false> ]
SetLabelMode=ModoRótulo
SetLabelMode.Syntax=[ <Obxecto>, <0 | 1 | 2 | 3> ]
SetLayer=Capa
SetLayer.Syntax=[ <Obxecto>, <Capa> ]
SetLevelOfDetail=NivelDeDetalle
SetLevelOfDetail.Syntax=[ <Superficie>, <Nivel de detalle> ]
SetLineStyle=EstiloLiña
SetLineStyle.Syntax=[ <Liña>, <Número> ]
SetLineThickness=GrosorLiña
SetLineThickness.Syntax=[ <Liña>, <Número> ]
SetPerspective=Disposición
SetPerspective.Syntax=[ <Texto> ]
SetPointSize=TamañoPunto
SetPointSize.Syntax=[ <Punto>, <Número> ]
SetPointStyle=EstiloPunto
SetPointStyle.Syntax=[ <Punto>, <Número> ]
SetSeed=Semente
SetSeed.Syntax=[ <Enteiro> ]
SetSpinSpeed=VelocidadeXiro
SetSpinSpeed.Syntax=[ <Número> ]
SetTooltipMode=ModoDescrición
SetTooltipMode.Syntax=[ <Obxecto>, <0|1|2|3|4> ]
SetTrace=Rastro
SetTrace.Syntax=[ <Obxecto>, <true | false> ]
SetValue=Valor
SetValue.Syntax=[ <Booleano>, <0|1> ]\n[ <Obxecto>, <Obxecto> ]\n[ <Lista>, <Índice>, <Obxecto> ]
SetViewDirection=FixaDirecciónVista
SetViewDirection.Syntax=[ ]\n[ <Dirección> ]\n[ <Direccíon>, <Booleana para animación> ]
SetVisibleInView=VisibleNaVista
SetVisibleInView.Syntax=[ <Obxecto>, <Número de vista 1|2>, <Booleana> ]
Shear=Cisalla
Shear.Syntax=[ <Obxecto>, <Sentido (vector, recta, semirrecta o segmento)>, <Razón> ]
ShortestDistance=CamiñoMínimo
ShortestDistance.Syntax=[ <Lista de segmentos>, <Punto inicial>, <Punto final>, <Ponderación (booleana)> ]
ShowAxes=MostraEixes
ShowAxes.Syntax=[ ]\n[ <Booleana> ]\n[ <Vista>, <Booleana> ]
ShowGrid=MostraCuadrícula
ShowGrid.Syntax=[ ]\n[ <Booleana> ]\n[ <Vista>, <Booleana> ]
ShowLabel=AmosaRótulo
ShowLabel.Syntax=[ <Obxecto>, <Booleana> ]
ShowLayer=AmosaCapa
ShowLayer.Syntax=[ <Número de capa> ]
Shuffle=Baralla
Shuffle.Syntax=[ <Lista> ]
SigmaXX.Syntax=[ <Lista de puntos> ]\n[ <Lista de datos en bruto> ]\n[ <Lista de números>, <Lista de frecuencias> ]
SigmaXY.Syntax=[ <Lista coordenadas x>, <Lista coordenadas y> ]\n[ <Lista de puntos> ]
SigmaYY.Syntax=[ <Lista de puntos> ]
Simplify=Simplifica
Simplify.Syntax=[ <Función> ]\n[ <Texto> ]
Simplify.SyntaxCAS=[ <Función> ]
Slider=Esvarador
Slider.Syntax=[ <Mín>, <Máx>, <Incremento>, <Velocidade>, <Ancho>, <É Ángulo>, <Horizontal>, <Animación>, <Aleatorio> ]
Slope=Pendente
Slope.Syntax=[ <Recta, semirrecta o segmento> ]
SlopeField=CampoDireccións
SlopeField.Syntax=[ <f(x, y)> ]\n[ <f(x, y)>, <Número n> ]\n[ <f(x, y)>, <Número n>, <Multiplicador lonxitude a> ]\n[ <f(x, y)>, <Número n>, <Multiplicador lonxitude a>, <Mín x>, <Mín y>, <Máx x>, <Máx y> ]
SlowPlot=GráficaAnimada
SlowPlot.Syntax=[ <Función> ]\n[ <Función>, <Booleana repetir> ]
Solutions=Solucións
Solutions.Syntax=[ <Ecuación> ]
Solutions.SyntaxCAS=[ <Ecuación> ]\n[ <Ecuación>, <Variable> ]\n[ <Lista de ecuacións>, <Lista de variables> ]
Solve=Resolve
Solve.Syntax=[ <Ecuación> ]
Solve.SyntaxCAS=[ <Ecuación en x> ]\n[ <Ecuación>, <Variable> ]\n[ <Lista de ecuacións>, <Lista de variables> ]
SolveCubic=ResolveCubic
SolveCubic.SyntaxCAS=[ <Polinomio cúbico> ]
SolveODE=ResolveODE
SolveODE.Syntax=[ <f'(x, y)> ]\n[ <f'(x, y)>, <Punto en f> ]\n[ <f'(x, y)>, <Valor x inicial>, <Valor y inicial>, <Valor x final>, <Paso> ]\n[ <y'>, <x'>, <Valor x inicial>, <Valor y inicial>, <Valor t final>, <Paso> ]\n[ <b(x)>, <c(x)>, <f(x)>, <Valor x inicial>, <Valor y inicial>, <Valor y' inicial>, <Valor x final>, <Paso> ]
SolveODE.SyntaxCAS=[ <Ecuación> ]\n[ <Ecuación>, <Variable dependente>, <Variable independente> ]
SolveQuartic=ResolveCuártica
SolveQuartic.SyntaxCAS=[ <Polinomio cuártico> ]
Sort=Ordena
Sort.Syntax=[ <Lista> ]\n[ <Valores>, <Claves> ]
Spearman=CoeficienteCorrelaciónSpearman
Spearman.Syntax=[ <Lista de puntos> ]\n[ <Lista de números>,  <Lista de números> ]
Sphere=Esfera
Sphere.Syntax=[ <Punto>, <Raio (número)> ]\n[ <Punto>, <Punto> ]
Spline.Syntax=[ <Lista de Puntos> ]\n[ <Lista de Puntos>, <Orde ≥ 3> ]
StartAnimation=IniciaAnimación
StartAnimation.Syntax=[ ]\n[ <Esvarador ou punto>, <Esvarador ou punto>, ... ]\n[ <Booleana> ]\n[ <Esvarador ou punto>, <Esvarador ou punto>, ... , <Booleana> ]
StartRecord=IniciaGravación
StartRecord.Syntax=[ ]\n[ <Booleana> ]
StemPlot=GráficoTaloFollas
StemPlot.Syntax=[ <lista> ]\n[ <Lista>, <Axuste -1|0|1> ]
StepGraph=GráficoEscaleira
StepGraph.Syntax=[ <Lista de puntos> ]\n[ <Lista de puntos>, <Unir (booleana)> ]\n[ <Lista de coordenadas x>, <Lista de coordenadas y> ]\n[ <Lista de puntos>, <Unir (booleana)>, <Estilo de punto> ]\n[ <Lista de coordenadas x>, <Lista de coordenadas y>, <Unir (booleana)> ]\n[ <Lista de coordenadas x>, <Lista de coordenadas y>, <Unir (booleana)>, <Estilo de punto> ]
StickGraph=GráficoLiñas
StickGraph.Syntax=[ <Lista de puntos> ]\n[ <Lista de puntos>, <Horizontal (booleana)> ]\n[ <Lista de coordenadas x>, <Lista de coordenadas y> ]\n[ <Lista de coordenadas x>, <Lista de coordenadas y>, <Horizontal (booleana)> ]
Stretch=Estira
Stretch.Syntax=[ <Obxecto>, <Dirección (vector, recta, semirrecta o segmento)>, <Razón> ]\n[ <Obxecto>, <Vector> ]
Substitute=Substitúe
Substitute.SyntaxCAS=[ <Expresión>, <Variable>, <por> ]\n[ <Expresión>, <Lista de substitucións> ]
Sum=Suma
Sum.Syntax=[ <Lista> ]\n[ <Lista>, <Número de elementos> ]\n[ <Lista>, <Lista de frecuencias> ]\n[ <Expresión>, <Variable>, <Valor inicial>, <Valor final> ]
Sum.SyntaxCAS=[ <Lista> ]\n[ <Expresión>, <Variable> < Valor inicial>, <Valor final> ]
SumSquaredErrors=SumaCadradoDiferenzas
SumSquaredErrors.Syntax=[ <Lista de puntos>, <Función> ]
SurdText=TextoFracciónRadical
SurdText.Syntax=[ <Número> ]\n[ <Punto> ]
Surface=Superficie
Surface.Syntax=[ <Función>, <Ángulo> ]\n[ <Curva>, <Ángulo>, <Línea> ]\n[ <Expresión>, <Expresión>, <Expresión>, <Parámetro 1>, <Valor inicial>, <Valor final>, <Parámetro 2>, <Valor inicial>, <Valor final> ]
TDistribution=DistribuciónT
TDistribution.Syntax=[ <Graos de liberdade>, x, <Acumula (booleana)> ]\n[ <Graos de liberdade>, <Valor da variable> ]
TDistribution.SyntaxCAS=[ <Graos de liberdade>, <Valor da variable> ]
TMean2Estimate=IntervaloT2
TMean2Estimate.Syntax=[ <Lista 1 de datos mostrais>, <Lista 2 de datos mostrais>, <Nivel>, <Composición (booleana)> ]\n[ <Media mostral 1>, <Desviación típica mostral 1>, <Tamaño mostral 1>, <Media mostral 2>, <Desviación típica mostral 2>, <Tamaño mostral 2>, <Nivel>, <Composición (booleana)> ]
TMeanEstimate=IntervaloT
TMeanEstimate.Syntax=[ <Lista de datos mostra>, <Nivel> ]\n[ <Media da mostra>, <Desviación típica da mostra>, <Tamaño da mostra>, <Nivel> ]
TTest=TestT
TTest.Syntax=[ <Lista de datos mostrais>, <Media hipotetizada>, <Cola> ]\n[ <Media mostral>, <Desviación típica mostral>, <Tamaño mostral>, <Media hipotetizada>, <Cola> ]
TTest2=TestT2
TTest2.Syntax=[ <Lista datos mostrais 1>, <Lista datos mostrais 2>, <Cola>, <Composición (booleana)> ]\n[ <Media mostral 1>, <Desviación típica mostral 1>, <Tamaño mostral 1>, <Media mostral 2>, <Desviación típica mostral 2 >, <Tamaño mostra 2>, <Cola>, <Composición (booleana)> ]
TTestPaired=TestTParellado
TTestPaired.Syntax=[ <Lista datos mostrais 1>, <Lista datos mostrais 2>, <Cola> ]
TableText=TáboaTexto
TableText.Syntax=[ <Lista>, <Lista>, ... ]\n[ <Lista>, <Lista>, ..., <Aliñamento do texto> ]
Take=Colle
Take.Syntax=[ <Lista>, <Posición inicial> ]\n[ <Texto>, <Posición inicial> ]\n[ <Lista>, <Posición inicial>, <Posición final> ]\n[ <Texto>, <Posición inicial>, <Posición final> ]
Take.SyntaxCAS=[ <Lista>, <Posición inicial> ]\n[ <Lista>, <Posición inicial>, <Posición final> ]
Tangent=Tanxente
Tangent.Syntax=[ <Punto>, <Cónica> ]\n[ <Punto>, <Curva> ]\n[ <Valor x>, <Función> ]\n[ <Punto na gráfica>, <Función> ]\n[ <Recta, semirrecta ou segmento paralelo>, <Cónica> ]\n[ <Circunferencia>, <Circunferencia> ]
Tangent.SyntaxCAS=[ <Número>, <Función> ]\n[ <Punto>, <Obxecto> ]
TaylorSeries=PolinomioTaylor
TaylorSeries.Syntax=[ <Función>, <Valor x>, <Orde> ]
TaylorSeries.SyntaxCAS=[ <Expresión>, <Valor x>, <Orde> ]\n[ <Expresión>, <Variable>, <Valor variable>, <Orde> ]
Tetrahedron=Tetraedro
Tetrahedron.Syntax=[ <Triángulo equilátero> ]\n[ <Punto>, <Punto>, <Punto> ]\n[ <Punto>, <Punto>, <Dirección> ]
Text=Texto
Text.Syntax=[ <Obxecto> ]\n[ <Obxecto>, <Substitución de variables (booleano)> ]\n[ <Obxecto>, <Punto> ]\n[ <Obxecto>, <Punto>, <Substitución de variables (booleano)> ]\n[ <Obxecto>, <Punto>, <Substitución de variables (booleano), <Fórmula LaTeX (booleano)> ]
TextToUnicode=TextoACódigo
TextToUnicode.Syntax=[ "<Texto>" ]
Textfield=CampoEntrada
Textfield.Syntax=[ <Obxecto vinculado> ]
TiedRank=RangoAxustado
TiedRank.Syntax=[ <Lista> ]
ToBase=CambiarABase
ToBase.Syntax=[ <Número>, <Base> ]
ToComplex=EnComplexo
ToComplex.Syntax=[ <Punto ou vector> ]
ToExponential=EnExponencial
ToExponential.SyntaxCAS=[ <Número complexo> ]
ToPoint=EnPunto
ToPoint.Syntax=[ <Número complexo> ]
ToPolar=EnPolar
ToPolar.Syntax=[ <Número complexo> ]\n[ <Vector> ]
ToolImage=ImaxenFerramenta
ToolImage.Syntax=[ <Número> ]\n[ <Número>, <Punto> ]\n[ <Número>, <Punto>, <Punto> ]
Top=Teito
Top.Syntax=[ <Cuádrica> ]
Translate=Translada
Translate.Syntax=[ <Obxecto>, <Vector> ]\n[ <Vector>, <Punto inicial> ]
Transpose=Traspón
Transpose.Syntax=[ <Matriz> ]
TrapezoidalSum=SumaTrapezoidal
TrapezoidalSum.Syntax=[ <Función>, <Valor inicial x>, <Valor final x>, <Número de trapecios> ]
TravelingSalesman=Viaxante
TravelingSalesman.Syntax=[ <lista de puntos> ]
TriangleCenter=CentroTriángulo
TriangleCenter.Syntax=[ <Punto>, <Punto>, <Punto>, <Número> ]
TriangleCurve=CurvaTriángular
TriangleCurve.Syntax=[ <Punto>, <Punto>, <Punto>, <Ecuaciòn> ]
Triangular=DistribuciónTriangular
Triangular.Syntax=[ <Límite inferior>, <Límite superior>, <Moda>, <Valor da variable> ]\n[ <Límite inferior>, <Límite superior>, <Moda>, x, <Acumula (booleana)> ]
TrigCombine=TrigoProdutoASuma
TrigCombine.Syntax=[ <Expresión> ]\n[ <Expresión>, <Función modelo> ]
TrigExpand=TrigoExpande
TrigExpand.Syntax=[ <Expresión> ]\n[ <Expresión>, <Función objetivo> ]
TrigExpand.SyntaxCAS=[ <Expresión> ]\n[ <Expresión>, <Función preferida> ]\n[ <Expresión>, <Función preferida>, <Variable preferida> ]\n[ <Expresión>, <Función preferida>, <Variable preferida>, <Variable preferida> ]
TrigSimplify=TrigoSimplifica
TrigSimplify.Syntax=[ <Expresión> ]
Trilinear=Trilineal
Trilinear.Syntax=[ <Punto>, <Punto>, <Punto>, <Número>, <Número>, <Número> ]
TurningPoint=PuntoInflexión
TurningPoint.Syntax=[ <Polinomio> ]
Turtle=Tartaruga
Turtle.Syntax=[ ]
TurtleBack=TartarugaRetrocede
TurtleBack.Syntax=[ <Tartaruga>, <Distancia> ]
TurtleDown=TartarugaDebuxa
TurtleDown.Syntax=[ <Tartaruga> ]
TurtleForward=TartarugaAvanza
TurtleForward.Syntax=[ <Tartaruga>, <Distancia> ]
TurtleLeft=TartarugaEsquerda
TurtleLeft.Syntax=[ <Tartaruga>, <Ángulo> ]
TurtleRight=TartarugaDereita
TurtleRight.Syntax=[ <Tartaruga>, <Ángulo> ]
TurtleUp=TartarugaEnriba
TurtleUp.Syntax=[ <Tartaruga> ]
UnicodeToLetter=CódigoALetra
UnicodeToLetter.Syntax=[ <Enteiro> ]
UnicodeToText=CódigoATexto
UnicodeToText.Syntax=[ <Lista de Enteiros> ]
Uniform=DistribuciónUniforme
Uniform.Syntax=[ <Límite inferior>, <Límite superior>, x, <Acumula (booleana)> ]\n[ <Límite inferior>, <Límite superior>, <Valor da variable> ]
Union=Unión
Union.Syntax=[ <Lista>, <Lista> ]\n[ <Polígono>, <Polígono> ]
Unique=Único
Unique.Syntax=[ <Lista> ]
UnitOrthogonalVector=VectorUnitarioPerpendicular
UnitOrthogonalVector.Syntax=[ <Recta, semirecta ou segmento> ]\n[ <Vector> ]
UnitOrthogonalVector.Syntax3D=[ <Recta> ]\n[ <Segmento> ]\n[ <Vector> ]\n[ <Plano> ]
UnitOrthogonalVector.SyntaxCAS=[ <Recta, semirecta ou segmento> ]\n[ <Vector> ]
UnitVector=VectorUnitario
UnitVector.Syntax=[ <Obxecto> ]
UpdateConstruction=ActualizaConstrución
UpdateConstruction.Syntax=[ ]\n[ <NNúmero de veces> ]
UpperSum=SumaSuperior
UpperSum.Syntax=[ <Función>, <Valor inicial x>, <Valor final x>, <Número de rectángulos> ]
Variance=Varianza
Variance.Syntax=[ <Lista de datos en bruto> ]\n[ <Lista de números>, <Lista de frecuencias> ]
Variance.SyntaxCAS=[ <Lista de números> ]
Vector.Syntax=[ <Punto extremo> ]\n[ <Punto orixe>, <Punto extremo> ]
Vertex=Vértice
Vertex.Syntax=[ <Cónica> ]\n[ <Desigualdade> ]\n[ <Polígono> ]\n[ <Polígono>, <Índice> ]
VerticalText=TextoVertical
VerticalText.Syntax=[ <Texto> ]\n[ <Texto>, <Punto> ]
Volume.Syntax=[ <Sólido> ]
Voronoi.Syntax=[ <lista de puntos> ]
Weibull=DistribuciónWeibull
Weibull.Syntax=[ <Forma (número)>, <Escala>, x, <Acumula (booleana)> ]\n[ <Forma (número)>, <Escala>, <Valor da variable> ]
Weibull.SyntaxCAS=[ <Forma (número)>, <Escala>, <Valor da variable> ]
ZMean2Estimate=IntervaloZ2
ZMean2Estimate.Syntax=[ <Lista de datos mostrais 1>, <Lista de datos mostrais 2>, <σ1>, <σ2>, <Nivel> ]\n[ <Media mostral 1>, <σ1>, <Tamaño mostral 1>, <Media mostral 2>, <σ2>, <Tamaño mostral 2>, <Nivel> ]
ZMean2Test=TestZMedia2
ZMean2Test.Syntax=[ <Lista de datos mostrais 1>, <σ1>, <Lista de datos mostrais 2>, <σ2>, <Cola> ]\n[ <Media mostral 1>, <σ1>, <Tamaño mostral 1>, <Media mostral 2>, <σ2>, <Tamaño mostral 2>, <Cola> ]
ZMeanEstimate=IntervaloZ
ZMeanEstimate.Syntax=[ <Lista de datos mostrais>, <σ>, <Nivel> ]\n[ <Media mostral>, <σ>, <Tamaño mostral>, <Nivel> ]
ZMeanTest=TestZMedia
ZMeanTest.Syntax=[ <Lista de datos mostrais>, <σ>, <Media hipotetizada>, <Cola> ]\n[ <Media mostral>, <σ>, <Tamaño mostral>, <Media hipotetizada>, <Cola> ]
ZProportion2Estimate=IntervaloZProporción2
ZProportion2Estimate.Syntax=[ <Proporción mostral 1>, <Tamaño mostral 1>, <Proporción mostral 2>, <Tamaño mostral 2>, <Nivel> ]
ZProportion2Test=TestZProporción2
ZProportion2Test.Syntax=[ <Proporción mostral 1>, <Tamaño mostral 1>, <Proporción mostral 2>, <Tamaño mostral 2>, <Cola> ]
ZProportionEstimate=IntervaloZProporción
ZProportionEstimate.Syntax=[ <Proporción mostral>, <Tamaño mostral>, <Nivel> ]
ZProportionTest=TestZProporción
ZProportionTest.Syntax=[ <Proporción mostral>, <Tamaño mostral>, <Proporción hipotetizada>, <Cola> ]
Zip=SubstitúeLista
Zip.Syntax=[ <Expresión>, <Variable1>, <Lista1>, <Variable2>, <Lista2>, ... ]
Zipf=DistribuciónZipf
Zipf.Syntax=[ <Número de elementos>, <Expoñente> ]\n[ <Número de elementos>, <Expoñente>, <Acumula (booleana)> ]\n[ <Número de elementos>, <Expoñente>, <Valor da variable>, <Acumula (booleana)> ]
Zipf.SyntaxCAS=[ <Número de elementos>, <Expoñente>, <Valor da variable>, <Acumula (booleana)> ]
ZoomIn=ZoomAchega
ZoomIn.Syntax=[ <Factor de escala> ]\n[ <Factor de escala>, <Centro> ]\n[ <Min x>, <Min y>, <Max x>, <Max y> ]
ZoomOut=ZoomAfasta
ZoomOut.Syntax=[ <Factor de escala> ]\n[ <Factor de escala>, <Centro> ]
mad=dm
mad.Syntax=[ <Lista de datos brutos> ]\n[ <Lista de valores>, <Lista de frecuencias> ]
mean=media
mean.Syntax=[ <Lista de datos en bruto> ]\n[ <Lista de números>, <Lista de frecuencias> ]
mean.SyntaxCAS=[ <Lista de números> ]
nCr.Syntax=[ <Número n>, <Número k> ]
stdev=dsvst
stdev.Syntax=[ <Lista de datos en bruto> ]\n[ <Lista de números>, <Lista de frecuencias> ]
stdevp=dsvstm
stdevp.Syntax=[ <Lista de datos en bruto> ]\n[ <Lista de números>, <Lista de frecuencias> ]
stdevp.SyntaxCAS=[ <lista de números> ]