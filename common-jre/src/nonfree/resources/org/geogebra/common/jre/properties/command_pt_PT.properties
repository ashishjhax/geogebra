# Copyright (c) GeoGebra Group, office@geogebra.org
# The GeoGebra language files are licensed to you under the terms of the
# Creative Commons Attribution-NonCommercial-ShareAlike licence (version 3.0 or later),
# the current text of which can be found via this link:
# https://creativecommons.org/licenses/by-nc-sa/3.0/legalcode.
# Attribution (as required by that Creative Commons license) should take the form of
# (at least) a mention of our name, an appropriate copyright notice and a link to our
# website located at https://www.geogebra.org.
# For further details, please see https://www.geogebra.org/license
Angle.Syntax=[ <Objeto> ]\n[ <Vetor>, <Vetor> ]\n[ <Reta>, <Reta> ]\n[ <Ponto>, <Vértice>, <Ponto> ]\n[ <Ponto>, <Vértice>, <Ângulo> ]
Angle.Syntax3D=[ <Objeto> ]\n[ <Vetor>, <Vetor> ]\n[ <Reta>, <Reta> ]\n[ <Reta>, <Plano> ]\n[ <Plano>, <Plano> ]\n[ <Ponto>, <Vértice>, <Ponto> ]\n[ <Ponto>, <Vértice>, <Ângulo> ]\n[ <Ponto>, <Ponto>, <Ângulo>, <Sentido> ]
Append=Juntar
Arc.Syntax=[ <Circunferência>, <Ponto>, <Ponto> ]\n[ <Elipse>, <Ponto>, <Ponto> ]\n[ <Circunferência>, <Parâmetro>, <Parâmetro> ]\n[ <Elipse>, <Parâmetro>, <Parâmetro> ]
AreConcyclic=EstãonaCircunferência
Area.Syntax=[ <Cónica> ]\n[ <Polígono> ]\n[ <Ponto>, ..., <Ponto> ]
Assume=Assume
Asymptote.Syntax=[ <Cónica> ]\n[ <Função> ]\n[ <Curva Implícita> ]
AttachCopyToView=VerEmAnexo
AttachCopyToView.Syntax=[ <Objeto>, <Vista 0|1|2> ]\n[ <Objeto>, <Vista 0|1|2>, <Ponto 1>, <Ponto 2>, <Ponto Ecrã 1>, <Ponto Ecrã 2> ]
Axes.Syntax=[ <Cónica> ]
Axes.Syntax3D=[ <Cónica> ]\n[ <Quádrica> ]
AxisStepX=PassoEixoOx
AxisStepY=PassoEixoOy
BarChart=GráficodeBarras
BarChart.Syntax=[ <Lista dos Dados Classificados>, <Lista de Frequências> ]\n[ <Lista dos Dados Não Classificados>, <Largura das Barras>, <Fator de Escala Vertical (opcional)> ]\n[ <Lista dos Dados Classificados>, <Lista de Frequências>, <Largura das Barras> ]\n[ <Valor inicial>, <Valor Final>, <Lista das Alturas> ]\n[ <Valor inicial>, <Valor Final>, <Expressão>, <Variável>, <Do Número>, <até  ao Número> ]\n[ <Valor inicial>, <Valor Final>, <Expressão>, <Variável>, <Do Número>, <até  ao Número>, <com Passo de> ]
BarCode.Syntax=[ ]\n[ <Imagem> ]\n[ <Texto ou Número>, "<Formato (opcional)>", "<Correção do Erro (opcional)>", <Largura (opcional)>, <Comprimento (opcional)> ]
Barycenter=CentrodeMassa
Bernoulli=Bernoulli
Bernoulli.Syntax=[ <Probabilidade>, <Acumulada (true|false))> ]
BinomialDist=Binomial
BinomialDist.Syntax=[ <Número de Provas>, <Probabilidade do Sucesso> ]\n[ <Número de Provas>, <Probabilidade do Sucesso>, <Acumulada (true|false)> ]\n[ <Número de Provas>, <Probabilidade do Sucesso>, <Valor da Variável>, <Acumulada ((true|false)> ]
BinomialDist.SyntaxCAS=[ <Número de Provas>, <Probabilidade do Sucesso>, <Valor da Variável>, <Acumulada (true|false))> ]
Bottom=BaseInferior
BoxPlot=DiagramadeExtremoseQuartis
BoxPlot.Syntax=[ <Ordenada>, <Semialtura>, <Lista de Dados não Classificados> ]\n[ <Ordenada>, <Semialtura>, <Lista de Dados não Classificados>, <Booleano Outliers> ]\n[ <Ordenada>, <Semialtura>, <Lista de Dados Classificados>, <Lista de Frequências>, <Booleano Outliers> ]\n[ <Ordenada>, <Semialtura>, <Valor Inicial>, <Q1>, <Mediana>, <Q3>, <Valor Final> ]
Button.Syntax=[ ]\n[ <Subtítulo> ]
CFactor=CFatorizar
CIFactor=FatorizaCI
CSolutions=CSoluções
CSolutions.SyntaxCAS=[ <Equação> ]\n[ <Equação>, <Variável> ]\n[ <Lista de equações>, <Lista de variáveis> ]
CSolve=CResolver
CSolve.SyntaxCAS=[ <Condição> ]\n[ <Condição>, <Variável> ]\n[ <Lista de Condições>, <Lista de Variáveis> ]
Cauchy=Cauchy
Cauchy.Syntax=[ <Mediana>, <Escala>, <Valor da Variável> ]\n[ <Mediana>, <Escala>, x, <Acumulada (true|false)> ]
Cauchy.SyntaxCAS=[ <Mediana>, <Escala>, <Valor da Variável> ]
CellRange=BlocodeCélulas
Center.Syntax=[ <Cónica> ]
Center.Syntax3D=[ <Cónica> ]\n[ <Quádrica> ]
CenterView=VistaCentral
CenterView.Syntax=[ <Ponto Central> ]
Centroid=Baricentro
Checkbox=CaixadeControlo
ChiSquared=QuiQuadrado
ChiSquared.Syntax=[ <Graus de Liberdade>, <Valor da Variável> ]\n[ <Graus de Liberdade>, <Valor da Variável>, <Booleana Cumulativa> ]\n[ <Graus de Liberdade>, x, <Acumulada (true|false)> ]
ChiSquaredTest=TesteQuiQuadrado
Circle=Circunferência
Circle.Syntax=[ <Ponto>, <Raio> ]\n[ <Ponto>, <Segmento de Reta> ]\n[ <Ponto>, <Ponto> ]\n[ <Ponto>, <Ponto>, <Ponto> ]
Circle.Syntax3D=[ <Ponto>, <Raio> ]\n[ <Ponto>, <Segmento de Reta> ]\n[ <Ponto>, <Ponto> ]\n[ <Reta>, <Ponto> ]\n[ <Ponto>, <Ponto>, <Ponto> ]\n[ <Ponto>, <Raio>, <Sentido> ]\n[ <Ponto>, <Ponto>, <Sentido> ]
CircumcircleSector=SetorCircunCircular
Circumference=Perímetrocircunferência
Classes.Syntax=[ <Lista de Dados>, <Número de Classes> ]\n[ <Lista de Dados>, <Início>, <Amplitude das Classes> ]
ClosestPointRegion=FecharPontoRegião
Coefficients.Syntax=[ <Polinómio> ]\n[ <Cónica> ]
Coefficients.SyntaxCAS=[ <Polinómio> ]\n[ <Polinómio>, <Variável> ]
Column.Syntax=[ <Célula> ]
ColumnName.Syntax=[ <Célula> ]
CompetitionRank=Classificação
CompleteSquare=CompletarQuadrado
ComplexRoot=RaizComplexa
ComplexRoot.Syntax=[ <Polinómio> ]
Cone.Syntax=[ <Circunferência>, <Altura> ]\n[ <Ponto>, <Ponto>, <Raio> ]\n[ <Ponto>, <Vetor>, <Ângulo> ]
Conic=Cónica
Conic.Syntax=[ <Lista> ]\n[ <Ponto>, <Ponto>, <Ponto>, <Ponto>, <Ponto> ]\n[ <Número>, <Número>, <Número>, <Número>, <Número> ]
ContingencyTable=TabeladeContingência
ContingencyTable.Syntax=[ <Lista de Texto>, <Lista de Texto> ]\n[ <Lista de Texto>, <Lista de Texto>, <Opções> ]\n[ <Lista dos Valores das linhas>, <Lista dos Valores das Colunas>, <Tabela de frequências> ]\n[ <Lista dos Valores das Linhas>, <Lista dos Valores das Colunas>, <Tabela de Frequências>, <Opções> ]
ContinuedFraction.Syntax=[ <Número> ]\n[ <Número>, <Nível> ]\n[ <Número>, <Nível>, <Simplificado(true|false)> ]
ConvexHull=EnvolventeConvexa
CopyFreeObject=CopiarObjetosLivres
Corner.Syntax=[ <Número do Canto> ]\n[ <Imagem>, <Número do Canto> ]\n[ <Texto>, <Número do Canto> ]\n[ <Folha>, <Número do Canto> ]
Cube.Syntax=[ <Ponto>, <Ponto> ]\n[ <Ponto>, <Ponto>, <Ponto> ]\n[ <Ponto>, <Ponto>, <Sentido> ]
Cubic=Cúbico
CurveCartesian.Syntax=[ <Expressão>, <Expressão>, <Parâmetro Variável>, <Valor Inicial>, <Valor Final> ]
CurveCartesian.Syntax3D=[ <Expressão>, <Expressão>, <Variável 1>, <Valor Inicial>, <Valor Final> ]\n[ <Expressão>, <Expressão>, <Expressão>, <Variável>, <Valor Inicial>, <Valor Final> ]
Cylinder.Syntax=[ <Circunferência>, <Altura> ]\n[ <Ponto>, <Ponto>, <Raio> ]
DataFunction=FunçãoData
Degree.Syntax=[ <Polinómio> ]
Degree.SyntaxCAS=[ <Polinómio> ]\n[ <Polinómio>, <Variável> ]
DelauneyTriangulation=TriangulaçãoDelaunay
DensityPlot=FunçãoDensidade
Derivative.Syntax=[ <Função> ]\n[ <Curva> ]\n[ <Função>, <Número> ]\n[ <Função>, <Variável> ]\n[ <Curva>, <Número> ]\n[ <Função>, <Variável>, <Número> ]
Diameter=Diametral
Diameter.Syntax=[ <Vetor>, <Cónica> ]\n[ <Reta>, <Cónica> ]
Direction=Sentido
Direction.Syntax=[ <Reta> ]
Directrix.Syntax=[ <Cónica> ]
Distance.Syntax=[ <Ponto>, <Objeto> ]\n[ <Reta>, <Reta> ]\n[ <Plano>, <Plano> ]
Div.Syntax=[ <Número Dividendo>, <Número Divisor> ]\n[ <Polinómio Dividendo>, <Polinómio Divisor> ]
Division=Divisão
Division.Syntax=[ <Número Dividendo>, <Número Divisor> ]\n[ <Polinómio Dividendo>, <Polinómio Divisor> ]
Divisors=Divisores
DivisorsList=ListaDivisores
DivisorsSum=SomaDivisores
Dodecahedron.Syntax=[ <Ponto>, <Ponto> ]\n[ <Ponto>, <Ponto>, <Ponto> ]\n[ <Ponto>, <Ponto>, <Sentido> ]
DotPlot=GráficodePontos
DotPlot.Syntax=[ <Lista de Dados Não Classificados>, <Empilhar Pontos Adjacentes(opcional)>, <Fator de Escala (opcional)> ]
DynamicCoordinates.Syntax=[ <Ponto>, <Número>, <Número> ]\n[ <Ponto>, <x-Coordenada>, <y-Coordenada>, <z-Coordenada> ]
Eccentricity.Syntax=[ <Cónica> ]
Element.Syntax=[ <Lista>, <Posição do Elemento> ]\n[ <Matriz>, <Linha>, <Coluna> ]\n[ <Lista>, <Index1>, <Index2>, ... ]
Eliminate=Eliminado
Eliminate.Syntax=[ <Lista de Polinómios>, <Lista de Variáveis> ]
Ellipse.Syntax=[ <Foco1>, <Foco2>, <Comprimento do Semieixo MaiorX> ]\n[ <Foco1>, <Foco2>, <Segmento> ]\n[ <Ponto>, <Ponto>, <Ponto> ]
Erlang=Erlang
Erlang.Syntax=[ <Forma>, <Taxa>, <Valor da Variável> ]\n[ <Forma>, <Taxa>, x, <Acumulada (true|false)> ]
Excentricity.Syntax=[ <Cónica> ]
Execute.Syntax=[ <Lista de Comandos Inseridos Entre Comas> ]\n[ <Lista de Comandos inseridos Entre Comas>, <Parâmetro>, <Parâmetro ...> ]
Expand.Syntax=[ <Expressão> ]
Exponential=Exponencial
Exponential.Syntax=[ <Lambda>, <Valor da Variável> ]\n[ <Lambda>, x, <Acumulada ((true|false))> ]
Exponential.SyntaxCAS=[ <Lambda>, <Valor da Variável> ]
ExportImage.Syntax=[ <Propriedade>, <Valor>, <Propriedade>, <Valor>, ... ]
Extremum.Syntax=[ <Polinómio> ]\n[ <Função>, <Valor Inicial-x>, <Valor Final-x> ]
FDistribution=FDistribuição
FDistribution.Syntax=[ <Graus de Liberdade do Numerador>, <Graus de Liberdade do Denominador>, <Valor da Variável> ]\n[ <Graus de Liberdade do Numerador>, <Graus de Liberdade do Denominador>, x, <Acumulada (true|false)> ]
FDistribution.SyntaxCAS=[ <Graus de Liberdade do Numerador>, <Graus de Liberdade do Denominador>, <Valor da Variável> ]
Factor=Fatorizar
Factor.Syntax=[ <Polinómio> ]
Factor.SyntaxCAS=[ <Número> ]\n[ <Polinómio> ]\n[ <Expressão>, <Variável> ]
Factors.Syntax=[ <Polinómio> ]\n[ <Número> ]
FirstAxis.Syntax=[ <Cónica> ]
FirstAxisLength=ComprimentoSemiEixoMaiorX
FirstAxisLength.Syntax=[ <Cónica> ]
FitGrowth=RegressãoExponencialGeral
FitImplicit=AjusteImplícito
FitLineY=RetadeRegressão
FitPoly.Syntax=[ <Lista de Pontos>, <Grau de Polinômio> ]\n[ <Funçao mão livre>, <Grau de Polinômio> ]
Flatten=Nivela
Focus.Syntax=[ <Cónica> ]
Frequency.Syntax=[ <Lista de Dados Não Classificados> ]\n[ <Acumulada (true | false)>, <Lista de Dados Não Classificados> ]\n[ <Lista dos intervalo das Classes>, <Lista de Dados Não Classificados> ]\n[ <Lista de Texto>, <Lista de Texto> ]\n[ <Acumulada (true | false)>, <Lista do intervalos da Classes>, <Lista de Dados Não Classificados> ]\n[ <Lista dos intervalo das Classes>, <Lista de Dados Brutos>, <Densidade>, <Fator de Escala (opcional)> ]\n[ <Acumulada (true | false)>, <Lista dos intervalo das Classes>, <Lista de Dados Brutos>, <Densidade>, <Fator de Escala (opcional> ]
FrequencyPolygon=PolígonodeFrequências
FrequencyPolygon.Syntax=[ <Lista dos Limites das Classes>, <Lista das Frequências> ]\n[ <Lista dos Limites das Classes>, <Lista de Dados Não Classificados>, <Densidade (true | false)>, <Escala ( opcional)> ]\n[ <Acumulada (true | false)>, <Lista dos Limites das Classes>, <Lista de Dados Não Classificados>, <Densidade (true | false)>, <Escala (opcional)> ]
FrequencyTable=TabeladeFrequências
FrequencyTable.Syntax=[ <Lista de Dados não Classificados>, <Fator de escala (opcional)> ]\n[ <Acumulada (true | false)>, <Lista de Dados não Classificados> ]\n[ <Lista de Limites das Classes>, <Lista de Dados não Classificados> ]\n[ <Acumulada (true | false))>, <Lista de Limites das Classes>, <Lista de Dados não Classificados> ]\n[ <Lista de Limites das Classes>, <Lista de Dados não Classificados>, <Densidade>, <Fator de escala de densidade (opional)> ]\n[ <Acumulada (true | false)>, <Lista de Limites das Classes>, <Lista de Dados não Classificados>, <Densidade>, <Lista de Dados não Classificados> ]
Function.Syntax=[ <Lista de Números> ]\n[ <Função>, <Valor Inicial-x>, <<Valor Final-x> ]
Function.Syntax3D=[ <Lista de Números> ]\n[ <Função>, <Valor de x Inicial>, <Valor de x Final> ]\n[ <Expressão>, <Variável 1>, <Valor Inicial>, <Valor Final>, <Variável2>, <Valor Inicial>, <Valor Final> ]
FutureValue.Syntax=[ <Razão>, <Número de Períodos>, <Pagamento>, <Valor Inicial>, <Tipo (opcional)> ]
GCD.SyntaxCAS=[ <Lista de Números> ]\n[ <Lista de Polinómios> ]\n[ <Número>, <Número> ]\n[ <Polinómio>, <Polinómio> ]
Gamma=Gama
Gamma.SyntaxCAS=[ <Alfa>, <Beta>, <Valor da variável> ]
GetTime=ObterTempo
GetTime.Syntax=[ ]\n[ <Configurar> ]
GroebnerDegRevLex=GroebnerDegRevLex
GroebnerDegRevLex.Syntax=[ <Lista de Polinómios> ]\n[ <Lista dee Polinómios>, <Lista de variáveis> ]
GroebnerLex.Syntax=[ <Lista de Polinómios> ]\n[ <Lista dee Polinómios>, <Lista de variáveis> ]
GroebnerLexDeg=GroebnerLexDeg
GroebnerLexDeg.Syntax=[ <Lista de Polinómios> ]\n[ <Lista de Polinómios>, <Lista de Variáveis> ]
HarmonicMean=MédiaHarmónica
Histogram.Syntax=[ <Lista dos Limites das Classes>, <Lista das Frequências> ]\n[ <Lista dos Limites das Classes>, <Lista de Dados Não Classificados>, <Densidade (true | false)>, <Escala (opcional)> ]\n[ <Acumulada (true|false)>, <Lista dos Limites das Classes>, <Lista de Dados Não Classificados>, <Densidade (true | false)>, <Escala (opcional)> ]
HistogramRight.Syntax=[ <Lista dos Limites das Classes>, <Lista das Alturas> ]\n[ <Lista dos Limites das Classes>, <Lista de Dados Brutos>, <Densidade (true | false)>, <Escala (opcional)> ]\n[ <Acumulada (true | false)>, <Lista dos Limites das Classes>, <Lista de Dados Brutos>, <Densidade (true | false)>, <Escala (opcional)> ]
HyperGeometric=HiperGeométrica
HyperGeometric.SyntaxCAS=[ <Tamanho da População>, <Número de Sucessos>, <Tamanho da Amostra>, <Valor da Variável>, <Acumulada ((true | false)> ]
Hyperbola.Syntax=[ <Foco>, <Foco>, <Medida do Semieixo Maior> ]\n[ <Foco>, <Foco>, <Semieixo Maior (Segmento)> ]\n[ <Foco>, <Foco>, <Ponto> ]
IFactor=FatorizaI
IFactor.Syntax=[ <Polinómio> ]
Icosahedron.Syntax=[ <Ponto>, <Ponto> ]\n[ <Ponto>, <Ponto>, <Ponto> ]\n[ <Ponto>, <Ponto>, <Sentido> ]
Identity=Identidade
ImplicitDerivative.SyntaxCAS=[ <f(x, y)> ]\n[ <Expressão>, <Variável Dependente>, <Variável Independente> ]
Incircle=CircunferênciaInscrita
IndexOf=Posição
IndexOf.Syntax=[ <Objeto>, <Lista> ]\n[ <Texto>, <Texto> ]\n[ <Objeto>, <Lista>, <Início> ]\n[ <Texto>, <Texto>, <Início> ]
Integral.Syntax=[ <Função> ]\n[ <Função>, <Variável> ]\n[ <Função>, <Valor Inicial-x>, <Valor Final-x> ]\n[ <Função>, <Valor Inicial-x>, <Valor Final-x>, <Calcular(true|false))> ]
Integral.SyntaxCAS=[ <Função> ]\n[ <Função>, <Variável> ]\n[ <Valor>, <Valor Inicial-x>, <Valor Final-x> ]\n[ <Função>, <Variável>, <x Inicial>, <x Final> ]
IntegralBetween.Syntax=[ <Função>, <Função>, <Valor Inicial-x>, <Valor Final-x> ]\n[ <Função>, <Função>, <Valor Inicial-x>, <Valor Final-x>, <Calcular(true|false)> ]
IntegralBetween.SyntaxCAS=[ <Função>, <Função>, <Valor Final-x>, <Valor Final-x> ]\n[ <Função>, <Função>, <Variável>, <x Inicial>, <x Final> ]
IntegralSymbolic=IntegralSimbólico
IntegralSymbolic.Syntax=[ <Função> ]\n[ <Função>, <Variável> ]
InteriorAngles=InteriorÂngulos
Intersect=Intersetar
Intersect.Syntax=[ <Objeto>, <Objeto> ]\n[ <Objeto>, <Objeto>, <Índice do Ponto de Interseção> ]\n[ <Objeto>, <Objeto>, <Ponto Inicial> ]\n[ <Função>, <Função>, <Valor Inicial-x>, <Valor Final-x> ]\n[ <Curva 1>, <Curva 2>, <Parâmetro 1>, <Parâmetro 2> ]
IntersectConic=InterseçãoCónica
IntersectConic.Syntax=[ <Plano>, <Quádrica> ]\n[ <Quádrica>, <Quádrica> ]
Intersection=Interseção
InverseBinomial=BinomialInversa
InverseBinomial.Syntax=[ <Número de Provas>, <Probabilidade do Sucesso>, <Probabilidade> ]
InverseCauchy=CauchyInversa
InverseChiSquared=QuiQuadradoInversa
InverseExponential=ExponencialInversa
InverseFDistribution=FInversa
InverseFDistribution.Syntax=[ <Graus de Liberdade do Numerador>, <Graus de Liberdade do Denominador>, <Probabilidade> ]
InverseGamma=GamaInversa
InverseHyperGeometric=HiperGeométricaInversa
InverseHyperGeometric.Syntax=[ <Dimensão da População>, <Número de Sucessos>, <Dimensão da Amostra>, <Probabilidade> ]
InverseLaplace=InversaLaplace
InverseLogNormal=InversoLogNormal
InverseLogNormal.Syntax=[ <Média>, <Desvio-Padrão>, <Probabilidade> ]
InverseLogistic=LogísticaInversa
InverseNormal=NormalInversa
InverseNormal.Syntax=[ <Média>, <Desvio-Padrão>, <Probabilidade> ]
InversePascal=Pascalnversa
InversePoisson=PoissonInversa
InverseWeibull=WeibullInversa
InverseZipf=ZipfInversa
Invert=Inversa
IsInRegion=EstánaRegião
IsTangent=éTangente
IsTangent.Syntax=[ <Linha>, <Cónica> ]
IsVertexForm=VérticeForma2grau
IsVertexForm.Syntax=[ <Função> ]
Iteration.Syntax=[ <Função>, <Valor Inicial>, <Número de Iterações> ]\n[ <Expressão>, <Variáveis>, <Valores Iniciais>, <Contar> ]
IterationList=ListaIteração
IterationList.Syntax=[ <Função>, <Valor Inicial>, <Número de Iterações> ]\n[ <Expressão>, <Variáveis>, <Valores Iniciais>, <Contar> ]
Join=Ligar
JordanDiagonalization=JordanDiagonalização
LCM.Syntax=[ <Lista de Números> ]\n[ <Número>, <Número> ]
LCM.SyntaxCAS=[ <Lista de Números> ]\n[ <Lista de Polinómios> ]\n[ <Número>, <Número> ]\n[ <Polinómio>, <Polinómio> ]
LaTeX.Syntax=[ <Objeto> ]\n[ <Objeto>, <Exibir Valor dos Parâmetros (true |false)> ]\n[ <Objeto>, <Exibir Valor dos Parâmetros (true |false)>, <Exibir Nome do Objeto (true |false)> ]
Laplace=Laplace
Last.Syntax=[ <Lista> ]\n[ <Texto> ]\n[ <Lista>, <Número de Elementos> ]\n[ <Texto>, <Número de Elementos> ]
LeftSide=MembroEsquerdo
LeftSide.SyntaxCAS=[ <Equação> ]\n[ <Lista de Equação> ]\n[ <Lista de Equação>, <Index> ]
LeftSum=SomaEsquerda
LeftSum.Syntax=[ <Função>, <Valor Inicial-x>, <Valor Final-x>, <Número de Retângulos> ]
Length.Syntax=[ <Objeto> ]\n[ <Função>, <x Inicial>, <x Final> ]\n[ <Função>, <Valor Inicial>, <Valor Final> ]\n[ <Curva>, <Valor Inicial-t>, <Valor Final-t> ]\n[ <Curva>, <Valor Inicial>, <Valor Final> ]
Length.SyntaxCAS=[ <Lista> ]\n[ <Função>, <x_Inicial>, <x_Final> ]\n[ <Função>, <Variável>, <Ponto Inicial>, <Ponto Final> ]
Limit.Syntax=[ <Função>, <Valor> ]
LimitAbove=LimiteàDireita
LimitBelow=LimiteàEsquerda
LineBisector.Syntax=[ <Segmento de Reta> ]\n[ <Ponto>, <Ponto> ]
LineBisector.Syntax3D=[ <Segmento> ]\n[ <Ponto>, <Ponto> ]\n[ <Ponto>, <Ponto>, <Sentido> ]
LineGraph=LinhaGráfico
LineGraph.Syntax=[ <Lista de x-coordenadas>, <Lista  y-coordenadas> ]
Locus.Syntax=[ <Ponto que define o Lugar Geométrico>, <Ponto> ]\n[ <Ponto que define o Lugar Geométrico>, <Seletor> ]\n[ <Gradiente>, <Ponto> ]\n[ <f(xy)>, <Ponto> ]
LocusEquation=EquaçãoLugarGeométrico
LocusEquation.Syntax=[ <Lugar Geométrico> ]\n[ <Lugar Geométrico>, <Ponto Móvel> ]\n[ <Expreessão Booleana>, <Ponto Móvel> ]
LogNormal=LogNormal
LogNormal.Syntax=[ <Média>, <Desvio-Padrão>, <Valor da variável> ]\n[ <Média>, <Desvio-Padrão>, <Valor da variável>, <Booleana Cumulativa> ]\n[ <Média>, <Desvio-Padrá>, x, <Booleana Cumulativa> ]
Logistic=Logística
LowerSum=SomaInferior
LowerSum.Syntax=[ <Função>, <Valor Inicial-x>, <Valor Final-x>, <Número de Retângulos> ]
MAD=MAD
MAD.Syntax=[ <Lista de Dados não Classificados> ]\n[ <Lista de Números>, <Lista de Frequências> ]
MatrixRank=Intervalo
MatrixRank.Syntax=[ <Matriz> ]
Max.Syntax=[ <Intervalo> ]\n[ <Lista> ]\n[ <Número>, <Número> ]\n[ <Lista de Dados>, <Lista de Frequências> ]\n[ <Função>, <Valor Incial-x>, <Valor Final-y> ]
Maximize.Syntax=[ <Número Dependente>, <Número Livre> ]\n[ <Número Dependente>, <Ponto no caminho> ]
Mean.Syntax=[ <Lista de Dados não Classificados> ]\n[ <Lista de Números>, <Lista de Frequências> ]
Median.Syntax=[ <Lista de Dados não Classificados> ]\n[ <Lista de Números>, <Lista de Frequências> ]
Midpoint.Syntax=[ <Segmento de reta> ]\n[ <Cónica> ]\n[ <Intervalo> ]\n[ <Ponto>, <Ponto> ]
Min.Syntax=[ <Intervalo> ]\n[ <Lista> ]\n[ <Número>, <Número> ]\n[ <Lista de Dados>, <Lista de Frequências> ]\n[ <Função>, <Valor Incial-x>, <Valor Final-x> ]
Min.SyntaxCAS=[ <Lista> ]\n[ <Número>, <Número> ]
Minimize.Syntax=[ <Número Dependente>, <Número Livre> ]\n[ <Número Dependente>, <Ponto no caminho> ]
MinimumSpanningTree=ÁrvoreAbrangentedeCustoMínimo
Mirror.Syntax=[ <Objeto>, <Ponto> ]\n[ <Objeto>, <Reta> ]\n[ <Objeto>, <Circunferência> ]
Mirror.Syntax3D=[ <Objeto>, <Ponto> ]\n[ <Objeto>, <Reta> ]\n[ <Objeto>, <Plano> ]\n[ <Objeto>, <Circunferência> ]
MixedNumber=FraçãoPrópia
Mod.Syntax=[ <Dividendo>, <Divisor> ]\n[ <Polinómio Dividendo>, <Polinómio Divisor> ]
NDerivative=NDerivative
NDerivative.Syntax=[ <Função> ]\n[ <Função>, <Ordem> ]
NIntegral=NIntegral
NIntegral.Syntax=[ <Função> ]\n[ <Função>, <Valor Inicial x>, <Valor Final x> ]
NIntegral.SyntaxCAS=[ <Função>, <Valor Inicial-x>, <Valor Final-x> ]\n[ <Função>, <Variável>, <x Inicial>, <x Final> ]
NInvert=NInversão
NInvert.Syntax=[ <Funcão> ]
NSolutions=NSoluções
NSolutions.SyntaxCAS=[ <Equação> ]\n[ <Equação>, <Variável> ]\n[ <Equação>, <Variável = Valor inicial> ]\n[ <Lista de Equações>, <Lista de Variáveis> ]
NSolve=NResolver
NSolve.SyntaxCAS=[ <Condição> ]\n[ <Condição>, <Variável> ]\n[ <Condição>, <Variável = Valor Inicial> ]\n[ <Lista de Condições>, <Lista de Variáveis)> ]
NSolveODE=NSolveODE
NSolveODE.Syntax=[ <Lista de Derivadas, <x Inicial>, <Lista de y Inicial>, <x Final> ]
Net.Syntax=[ <Poliedro>, <Número> ]\n[ <Poliedro>, <Número>, <Face>, <Aresta>, <Aresta>, ... ]
Normal=Normal
Normal.Syntax=[ <Média>, <Desvio-Padrão>, <Valor da Variável> ]\n[ <Média>, <Desvio-Padrão>, <Valor da Variável>, <Acumulado (true|false)>  ]\n[ <Média>, <Desvio-Padrão>, x, <Acumulado (true|false)> ]
Normal.SyntaxCAS=[ <Média>, <Desvio-Padrão>, <Valor da Variável> ]
NormalQuantilePlot=NormalQ_QPlot
NormalQuantilePlot.Syntax=[ <Lista dos Dados não Classificados> ]
Numeric.SyntaxCAS=[ <Expressão> ]\n[ <Expressão>, <Números Significativos> ]
Octahedron.Syntax=[ <Ponto>, <Ponto> ]\n[ <Ponto>, <Ponto>, <Ponto> ]\n[ <Ponto>, <Ponto>, <Sentido> ]
OrdinalRank=PosiçãoOrdinal
OrthogonalLine=RetaPerpendicular
OrthogonalLine.Syntax=[ <Ponto>, <Reta> ]\n[ <Ponto>, <Segmento de Reta> ]\n[ <Ponto>, <Vetor> ]
OrthogonalLine.Syntax3D=[ <Ponto>, <Reta> ]\n[ <Ponto>, <Segmento de reta> ]\n[ <Ponto>, <Vetor> ]\n[ <Ponto>, <Plano> ]\n[ <Reta>, <Reta> ]\n[ <Ponto>, <Sentido>, <Sentido> ]\n[ <Ponto>, <Reta>, <xOy ou 3D> ]
OrthogonalVector.Syntax=[ <Reta> ]\n[ <Segmento de Reta> ]\n[ <Vetor> ]
OrthogonalVector.Syntax3D=[ <Reta> ]\n[ <Segmento de Reta> ]\n[ <Vetor> ]\n[ <Plano> ]
OsculatingCircle=CircunferênciaOsculadora
PMCC=CoeficienteCorrelação
PMCC.Syntax=[ <Lista de Pontos> ]\n[ <Lista das Abcissas>, <Lista das Ordenadas> ]
Pan=Panorama
ParseToFunction=AnalisarParaFunção
ParseToFunction.Syntax=[ <Função>, <Cadeia de Carateres> ]
ParseToNumber=AnalisarParaNúmero
ParseToNumber.Syntax=[ <Número>, <Cadeia de Carateres> ]
Pascal=Pascal
Pascal.Syntax=[ <Número de Sucessos>, <Probabilidade do Sucesso> ]\n[ <Número de Sucessos>, <Probabilidade do Sucesso>, <Acumulada (true|false)> ]\n[ <Número de Sucessos>, <Probabilidade do Sucesso>, <Valor da Variável>, <Acumulada (true|false)> ]
Pascal.SyntaxCAS=[ <n>, <p>, <Valor da Variável>, <Acumulada ((true|false)> ]
PathParameter=ParâmetroDoPonto
PathParameter.Syntax=[ <Ponto no Caminho> ]
Payment.Syntax=[ <Razão>, <Número de Períodos>, <Valor de Hoje>, <Valor Futuro (opcional)>, <Tipo (opcional)> ]
Percentile.Syntax=[ <Lista de Números>, <Valor do Percentil> ]
Perimeter.Syntax=[ <Polígono> ]\n[ <Cónica> ]\n[ <Lugar Geométrico> ]
Periods.Syntax=[ <Razão>, <Pagamento>, <Valor de Hoje>, <Valor Futuro (opcional)>, <Tipo(opcional)> ]
PieChart=GráficodeSetores
PieChart.Syntax=[ <Lista de Frequências> ]\n[ <Lista de Frequências>, <Centro>, <Raio> ]
Plane.Syntax=[ <Polígono> ]\n[ <Cónica> ]\n[ <Ponto>, <Plano Paralelo> ]\n[ <Ponto>, <Reta> ]\n[ <Reta>, <Reta> ]\n[ <Ponto>, <Ponto>, <Ponto> ]\n[ <Ponto>, <Vetor>, <Vetor> ]
PlaneBisector.Syntax=[ <Segmento de reta> ]\n[ <Ponto>, <Ponto> ]
PlaySound.Syntax=[ <Ficheiro> ]\n[ <Tocar (tocar(true|false)> ]\n[ <Função>, <Valor Mínimo>, <Valor Máximo> ]\n[ <Função>, <Valor Mínimo>, <Valor Máximo>, <Amostra Simples>, <Profundidade da Amostra> ]
PlotSolve.Syntax=[ <Equação em x> ]
Point.Syntax=[ <Objeto> ]\n[ <Lista> ]\n[ <Objeto>, <Parâmetro> ]\n[ <Ponto>, <Vetor> ]
PointList=PontodaLista
Poisson=Poisson
Poisson.SyntaxCAS=[ <Média>, <Valor da Variável>, <Acumulada (true | false)> ]
Polar.Syntax=[ <Ponto>, <Cónica> ]\n[ <Reta>, <Cónica> ]
PolyLine=LinhaPoligonal
Polygon.Syntax3D=[ <Lista de Pontos> ]\n[ <Ponto>, ..., <Ponto> ]\n[ <Ponto>, <Ponto>, <Número de Vértices> ]\n[ <Ponto>, <Ponto>, <Número de Vértices>, <Sentido> ]
Polynomial=Polinómio
PresentValue=ValorInicial
PresentValue.Syntax=[ <Número de Períodos>, <Pagamento>, <Valor Futuro (opcional))>, <Tipo (opcional)> ]
Product.Syntax=[ <Lista de Dados não Classificados> ]\n[ <Lista de Números>, <Número de Elementos> ]\n[ <Lista de Números>, <Lista de Frequências> ]\n[ <Expressão>, <Variável>, <Valor Inicial>, <Valor Final> ]
Product.SyntaxCAS=[ <Lista de expressões> ]\n[ <Expressão>, <Variável>, <Valor Inicial>, <Valor Final> ]
Prove=Prove
ProveDetails=ProvaDetalhes
Q1.Syntax=[ <Lista de Dados não Classificados> ]\n[ <Lista de Números>, <Lista de Frequências> ]
Q3.Syntax=[ <Lista de Dados não Classificados> ]\n[ <Lista de Dados Classificados>, <Lista de Frequências> ]
QuadricSide=FaseLateral
Radius.Syntax=[ <Cónica> ]
Random=AleatórioInteiroEntre
Random.Syntax=[ <Mínimo Inteiro>, <Máximo Inteiro> ]\n[ <Mínimo Inteiro>, <Máximo Inteiro>, <Booleano Fixo> ]
Random.SyntaxCAS=[ <Mínimo Inteiro>, <Máximo Inteiro> ]
RandomBinomial=AleatórioBinomial
RandomBinomial.Syntax=[ <Número de Provas>, <Probabilidade> ]
RandomDiscrete=AleatórioDiscreto
RandomElement=AleatórioEscolherElemento
RandomNormal=AleatórioNormal
RandomNormal.Syntax=[ <Média>, <Desvio-Padrão> ]
RandomPointIn=NoPontoAleatório
RandomPointIn.Syntax=[ <Polígono> ]\n[ <Lista de Pontos> ]\n[ <xMin>, <xMax>, <yMin>, <yMax> ]
RandomPoisson=AleatórioPoisson
RandomPolynomial=PolinómioAleatório
RandomPolynomial.Syntax=[ <Grau>, <Mínimo para Coeficientes>, <Máximo para Coeficientes> ]
RandomPolynomial.SyntaxCAS=[ <Grau>, <Coeficiente Mínimo>, <Coeficiente Máximo> ]\n[ <Variável>, <Grau>, <Coeficiente Mínimo>, <Coeficiente Máximo> ]
RandomUniform=AleatórioUniforme
Rate=Razão
Rate.Syntax=[ <Número de Períodos>, <Pagamento>, <Valor Inicial>, <Valor Futuro (opcional)>, <Tipo (opcional)> ]
Rationalize=Racionalizar
Ray.Syntax=[ <Ponto Origem>, <Ponto> ]\n[ <Ponto Origem>, <Vetor Diretor> ]
RectangleSum.Syntax=[ <Função>, <Valor Inicial-x>, <Valor Final-x>, <Número de Retângulos>, <Posição do Retângulo Inicial> ]
ReducedRowEchelonForm=CanónicaReduzida
RemovableDiscontinuity=RemoverDescontinuidade
RemovableDiscontinuity.Syntax=[ <Função> ]
Remove=Elimine
Repeat.Syntax=[ <Número>, <Comando Script>, <Comando Script>, ... ]
ReplaceAll=SubstituirTodos
ReplaceAll.Syntax=[ <Texto>, <Texto a combinar>, <Texto a substituir> ]
ResidualPlot=PontosResiduais
RightSide.SyntaxCAS=[ <Equação> ]\n[ <Lista de Equação> ]\n[ <Lista de Equação>, <Index> ]
RigidPolygon.Syntax=[ <Poligono> ]\n[ <Polígono>, <Offset x>, <Offset y> ]\n[ <Ponto Livre>, ..., <Ponto Livre> ]
Root.Syntax=[ <Polinómio> ]\n[ <Função>, <x Inicial> ]\n[ <Função>, <Valor Inicial-x>, <Valor Final-x> ]
Root.SyntaxCAS=[ <Polinómio> ]
RootList=ListaRaízes
Roots.Syntax=[ <Função>, <Valor Inicial-x>, <Valor Final-x> ]
Rotate=Rotação
Rotate.Syntax3D=[ <Objeto>, <Ângulo> ]\n[ <Objeto>, <Ângulo>, <Ponto> ]\n[ <Objeto>, <Ângulo>, <Eixo de Rotação> ]\n[ <Objeto>, <Ângulo>, <Ponto no Eixo>, <Sentido do Eixo ou Plano> ]
RotateText=RodarTexto
Row.Syntax=[ <Célula> ]
RunClickScript=ExecutarCliqueEmScript
RunUpdateScript=ExecutarAtualizaçãoScript
SD.Syntax=[ <Lista de Dados não Classificados> ]\n[ <Lista de Números>, <Lista de Frequências> ]
Sample.Syntax=[ <Lista>, <Dimensão> ]\n[ <Lista>, <Dimensão>, <Com Substituição> ]
SampleSD=DesvioPadrãoAmostra
SampleSD.Syntax=[ <Lista de Dados não Classificados> ]\n[ <Lista de Números>, <Lista de Frequências> ]
SampleSDX=DesvioPadrãoAmostraX
SampleSDY=DesvioPadrãoAmostraY
SampleSDY.Syntax=[ <Lista de Números> ]
SampleVariance=VariânciaAmostra
SampleVariance.Syntax=[ <Lista de Dados não Classificados> ]\n[ <Lista de Números>, <Lista de Frequências> ]
ScientificText=TextoCientífico
SecondAxis.Syntax=[ <Cónica> ]
SecondAxisLength=ComprimentoSemiEixoMenorX
SecondAxisLength.Syntax=[ <Cónica> ]
Sector.Syntax=[ <Cónica>, <Ponto>, <Ponto> ]\n[ <Cónica>, <Parâmetro>, <Parâmetro> ]
Segment=SegmentodeReta
SelectedElement=SelecionarElemento
SelectedIndex=SelecionarPosição
Semicircle=Semicircunferência
SetActiveView=AtivarFolhaGráfica
SetActiveView.Syntax=[ <Vista> ]\n[ <Plano> ]
SetAxesRatio=RazãoEntreEixos
SetAxesRatio.Syntax=[ <Número (EixoOx)>, <Número (EixOy)> ]
SetAxesRatio.Syntax3D=[ <Número (EixoOx)>, <Número (EixoOy)> ]\n[ <Número (EixoOx)>, <Número (EixoOy)>, <Número (EixoOz)> ]
SetBackgroundColor=CorDeFundo
SetBackgroundColor.Syntax=[ <Objeto>, "<Cor>" ]\n[ <Objeto>, <Vermelho>, <Verde>, <Azul> ]
SetConditionToShowObject=CondiçãoParaExibir
SetConstructionStep=DefinirPassosConstrução
SetCoords.Syntax=[ <Ponto>, <x>, <y> ]\n[ <Ponto>, <x>, <y>, <z> ]
SetDecoration=ConfiguraçãoDecoração
SetDynamicColor=DefinirCoresDinâmicas
SetFilling=DefinirEnchimento
SetFixed=DefinirFixar
SetFixed.Syntax=[ <Objeto>, <true | false)> ]\n[ <Objeto>, <true | false>, <true | false> ]
SetLabelMode=DefinirRótulo
SetLevelOfDetail=ConfigurarNívelDetalhas
SetLineStyle=DefinirEstilodeReta
SetLineStyle.Syntax=[ <Reta>, <Número> ]
SetLineThickness=DefinirEspessuradaReta
SetLineThickness.Syntax=[ <Reta>, <Número> ]
SetPerspective=ConfigurarDisposições
SetPointSize=DefinirTamanhodoPonto
SetPointStyle=DefinirEstilodoPonto
SetSeed=DefineInícioAleatório
SetSpinSpeed=ConfiguraçãoVelocidadeRotação
SetTooltipMode=DefinirDescrição
SetValue.Syntax=[ <Booleano>, <0|1> ]\n[ <Objeto>, <Objeto> ]\n[ <Lista>, <Número>, <Objeto> ]
SetViewDirection=ConfigurarVistas
SetViewDirection.Syntax=[ ]\n[ <Sentido> ]\n[ <Sentido>, <animação Booleana> ]
SetVisibleInView.Syntax=[ <Objeto>, <Número da Vista 1|2>, <Booleano> ]
ShortestDistance.Syntax=[ <Lista de Segmentos de reta>, <Ponto Inicial>, <Ponto Final>, <Booleano Ponderado> ]
ShowAxes=MostrarEixos
ShowAxes.Syntax=[ ]\n[ <Booleano> ]\n[ <Vista>, <Booleano> ]
ShowGrid=MostrarGrelha
ShowGrid.Syntax=[ ]\n[ <Booleano> ]\n[ <Vista>, <Booleano> ]
ShowLabel=MostrarRótulo
ShowLabel.Syntax=[ <Objeto>, <Booleano> ]
ShowLayer=MostrarCamada
Shuffle=Baralhar
SigmaXX.Syntax=[ <Lista de Pontos> ]\n[ <Lista de Dados não Classificados> ]\n[ <Lista de Números>, <Lista de Frequências> ]
SigmaXY.Syntax=[ <Lista de Pontos> ]\n[ <Lista das Abcissas>, <Lista das Ordenadas> ]
Simplify.Syntax=[ <Expressão> ]\n[ <Texto> ]
Simplify.SyntaxCAS=[ <Expressão> ]
Slider=Seletor
Slider.Syntax=[ <Min>, <Max>, <Incremento>, <Velocidade>, <Largura>, <Ângulo>, <Horizontal>, <Animação>, <Aleatório> ]
Slope=Declive
SlopeField=Gradiente
SlowPlot=AnimarConstruçãoGráfico
SlowPlot.Syntax=[ <Função> ]\n[ <Função>, <Repetição Booleana> ]
Solve.SyntaxCAS=[ <Equação em x> ]\n[ <Equação>, <Variável> ]\n[ <Lista de Equações>, <Lista de Variáveis> ]\n[ <Lista de Equações Paramétricas>, <Lista de Variáveis> ]\n[ <Equação>, <Variável>, <Lista de suposições> ]
SolveCubic.SyntaxCAS=[ <Polinómio 3º Grau> ]
SolveODE.Syntax=[ <f(x, y)> ]\n[ <f(x, y)>, <Ponto em f> ]\n[ <f(x, y)>, <Início x>, <Início y>, <Fim x>, <Passso> ]\n[ <y'>, <x'>, <Início  x>, <Início  y>, <Fim t>, <Passo> ]\n[ <b(x)>, <c(x)>, <f(x)>, <Início  x>, <Início  y>, <Início  y'>, <Fim x>, <Passo> ]
SolveODE.SyntaxCAS=[ <Condição> ]\n[ <Condição>, <Ponto(s) em f> ]\n[ <Condição>, <Ponto(s) em f>, <Pontos(s) em f'> ]\n[ <Condição>, <Variável Dependente>, <Variável Independente>, <Ponto(s) em f> ]\n[ <Condição>, <Variável Dependente>, <Variável Independente>, <Ponto(s) em f>, <Ponto(s) em f'> ]
SolveQuartic=ResolverQuática
SolveQuartic.SyntaxCAS=[ <Polinómio 4ºGrau> ]
Spearman=CorrelaçãoSpearman
Spline.Syntax=[ <Lista de Pontos> ]\n[ <Lista de Pontos>, <Ordem ≥ 3> ]\n[ <Lista de Pontos>, <Ordem≥ 3>, <Peso Função> ]
Split=Dividir
Split.Syntax=[ <Texto>, <Lista de Textos a dividir em> ]
StartAnimation.Syntax=[ ]\n[ <true|false> ]\n[ <Seletor ou Ponto>, <Seletor ou Ponto>, ... ]\n[ <Seletor ou Ponto>, <Seletor ou Ponto>, ..., <true|false> ]
StartRecord.Syntax=[ ]\n[ <Booleano> ]
StemPlot=DiagramaCauleFolhas
StemPlot.Syntax=[ <Lista> ]\n[ <Lista>, <Ajustamento (-1 | 0 | 1)> ]
StepGraph=GráficoEmEscada
StepGraph.Syntax=[ <Lista de Pontos> ]\n[ <Lista de Pontos>, <Booleana Junção> ]\n[ <Lista de x-coordenadas>, <Lista de y-coordenadas> ]\n[ <Lista de Pontos>, <Booleana Junção>, <Estilo do Ponto> ]\n[ <Lista de x-coordenadas>, <Lista de y-coordenadas>, <Booleana Junção> ]\n[ <Lista de x-coordenadas>, <Lista de y-coordenadas>, <Boolean Junção>, <Estilo do Ponto> ]
StickGraph=GráficoDePalitos
StickGraph.Syntax=[ <Lista de Pontos> ]\n[ <Lista de Pontos>, <Booleana Horizontal> ]\n[ <Lista de x-coordenadas>, <Lista de y-coordenadas> ]\n[ <Lista de x-coordenadas>, <Lista de y-coordenadas>, <Booleana Horizontal> ]
Substitute.SyntaxCAS=[ <Expressão>, <Lista de Substituições> ]\n[ <Expressão>, <de>, <até> ]
SumSquaredErrors=SomaErrosQuadráticos
SumSquaredErrors.Syntax=[ <Lista de Pontos>, <Expressão> ]
SurdText=TextoRacionalIrracional
SurdText.Syntax=[ <Ponto> ]\n[ <Número> ]\n[ <Número>, <Lista> ]
Surface=SuperfícieLateral
Surface.Syntax=[ <Função>, <Ângulo> ]\n[ <Curva>, <Ângulo>, <Reta> ]\n[ <Expressão>, <Expressão>, <Expressão>, <Variável 1>, <Valor Inicial>, <Valor Final>, <Variável 2>, <Valor Inicial>, <Valor Final> ]
TDistribution=TDistribuição
TDistribution.Syntax=[ <Graus de Liberdade>, <Valor da Variável> ]\n[ <Graus de Liberdade>, x, <Acumulada (true|false)> ]
TDistribution.SyntaxCAS=[ <Graus de Liberdade>, <Valor da Variável> ]
TMean2Estimate.Syntax=[ <Amostra1 (Lista)>, <Amostra2 (Lista)>, <Nível>, <Agregada (true | false)> ]\n[ <Média da Amostra1>, <Desvio-Padrão da Amostra2>, <Tamanho da Amostra1>, <Média da Amostra2>, <Desvio-Padrão da Amostra2>, <Tamanho da Amostra2>, <Nível de Confiança>, <Agregada (true|false)> ]
TMeanEstimate.Syntax=[ <Amostra (Lista)>, <Nível de Confiança> ]\n[ <Média da Amostra>, <Desvio-Padrão da Amostra>, <Tamanho da Amostra>, <Nível de Confiança> ]
TTest.Syntax=[ <Amostra (Lista)>, <Média Hipotética>, <Cauda> ]\n[ <Média da Amostra>, <Desvio-Padrão da Amostra>, <Tamanho da Amostra>, <Média Hipotética>, <Cauda> ]
TTest2.Syntax=[ <Amostra1 (Lista)>, <Amostra2 (Lista)>, <Cauda>, <Agregada (true | false)> ]\n[ <Média da Amostra1>, <Desvio Padrão da Amostra1>, <Tamanho da Amostra 1>, <Média da Amostra2>, <Desvio-Padrão da Amostra2>, <Tamanho da Amostra 2>, <Cauda>, <Agregada (true|false)> ]
TTestPaired.Syntax=[ <Amostra1 (Lista)>, <Amostra2 (Lista)>, <Cauda> ]
TableText=Tabela
Take.Syntax=[ <Texto>, <Posição Inicial> ]\n[ <Lista>, <Posição Inicial> ]\n[ <Texto>, <Posição Inicial>, <Posição Final> ]\n[ <Lista>, <Posição Inicial>, <Posição Final> ]
Tangent.Syntax=[ <Ponto>, <Cónica> ]\n[ <Ponto>, <Função> ]\n[ <Ponto na Curva>, <Curva> ]\n[ <x_valor>, <Função> ]\n[ <Reta>, <Cónica> ]\n[ <Circunferência>, <Circunferência> ]
TaylorSeries=PolinómioTaylor
TaylorSeries.Syntax=[ <Função>, <Valor de x>, <Ordem> ]
TaylorSeries.SyntaxCAS=[ <Expressão>, <Valor de x>, <Ordem Numérica> ]\n[ <Expressão>, <Variável>, <Valor da Variável>, <Ordem Numérica> ]
Tetrahedron.Syntax=[ <Ponto>, <Ponto> ]\n[ <Ponto>, <Ponto>, <Ponto> ]\n[ <Ponto>, <Ponto>, <Sentido> ]
Text.Syntax=[ <Objeto> ]\n[ <Objeto>, <Booleano para Substituição de Variáveis> ]\n[ <Objeto>, <Ponto> ]\n[ <Objeto>, <Ponto> ]Booleano para Substituição de Variáveis> ]\n[ <Objeto>, <Ponto> ]Booleano para Substituição de Variáveis>, <Booleano para fórmula LaTeX> ]
TextToUnicode=TextoparaUnicode
TextToUnicode.Syntax=[ "<Texto>" ]
Textfield=CaixadeEntrada
ToolImage=ÍconeFerramenta
ToolImage.Syntax=[ <Número> ]\n[ <Número>, <Ponot> ]\n[ <Número>, <Ponto>, <Ponto> ]
Top=BaseSuperior
Translate=Translação
Transpose=Transposta
TrapezoidalSum.Syntax=[ <Função>, <Valor Inicial-x>, <Valor Final-x>, <Número de Trapézios> ]
TravelingSalesman=CaixeiroViajante
TriangleCenter=PontosNotáveisdoTriângulo
TriangleCurve=TriânguloCurva
Triangular=Triangular
Triangular.Syntax=[ <Limite Inferior>, <Limite Superior>, <Moda>, <Valor da Variável> ]\n[ <Limite Inferior>, <Limite Superior>, <Moda>, x, <Acumulada (verdadeiro|falso> ]
TrigCombine=CombinaçãoTrigonométrica
TrigExpand=ExpansãoTrigonométrica
TrigExpand.Syntax=[ <Expressão> ]\n[ <Expressão>, <Função Objetivo> ]
TrigExpand.SyntaxCAS=[ <Expressão> ]\n[ <Expressão>, <Função Alvo> ]\n[ <Expressão>, <Função Alvo>, <Função Alvo> ]\n[ <Expressão>, <Função Alvo>, <Variável Alvo>, <Variável Alvo> ]
TrigSimplify=SimplificaçãoTrigonométrica
TurningPoint=PontodeInflexão
TurningPoint.Syntax=[ <Polinómio> ]
TurtleDown=TartarugaIrParaBaixo
TurtleUp=TartarugaIrParaCima
UnicodeToLetter.Syntax=[ Número ]
UnicodeToText.Syntax=[ <Lista de números> ]
Uniform=Uniforme
Uniform.Syntax=[ <Limite Inferior>, <Limite Superior>, x, <Acumulada (verdadeiro|falso)> ]\n[ <Limite Inferior>, <Limite Superior>, x, <Valor da Variável)> ]\n[ <Limite Inferior>, <Limite Superior>, x, <Booleana Cumulativa> ]
Union=Reunião
Union.Syntax=[ <Lista>, <Lista> ]\n[ <Polígono>, <Polígono> ]
Unique=Único
UnitOrthogonalVector=VetorUnitárioPerpendicular
UnitOrthogonalVector.Syntax=[ <Reta> ]\n[ <Segmento de reta> ]\n[ <Vetor> ]
UnitOrthogonalVector.Syntax3D=[ <Reta> ]\n[ <Segmento de reta> ]\n[ <Vetor> ]\n[ <Plano> ]
UpperSum=SomaSuperior
UpperSum.Syntax=[ <Função>, <Valor Inicial-x>, <Valor Final-x>, <Número de Retângulos> ]
Variance.Syntax=[ <Lista de Dados não Classificados> ]\n[ <Lista de Números>, <Lista de Frequências> ]
Vector.Syntax=[ <Origem> ]\n[ <Origem>, <Extremidade> ]
Vertex.Syntax=[ <Cónica> ]\n[ <Inequação> ]\n[ <Polígono> ]\n[ <Polígono>, <Índice> ]
Voronoi=Voronoi
Weibull=Weibull
Weibull.Syntax=[ <Forma>, <Escala>, x, <Acumulada (true|false)> ]\n[ <Forma>, <Escala>, x, <Valor da Variável> ]
Weibull.SyntaxCAS=[ <Forma>, <Escala>, <Valor da Variável> ]
ZMean2Estimate=ZMédia2Estimativa
ZMean2Estimate.Syntax=[ <Lista de Dados 1>, <Lista de Dados 2>, <σ1>, <σ2>, <Nível> ]\n[ <Média 1>, <σ1>, <Dimensão 1>, <Média 2>, <σ2>, <Dimensão 2>, <Nível> ]
ZMean2Test=ZMédia2Teste
ZMean2Test.Syntax=[ <Lista de Dados 1>, <σ1>, <Lista de Dados 2>, <σ2>, <Cauda> ]\n[ <Média 1>, <σ1>, <Dimensão 1>, <Média 2>, <σ2>, <Dimensão 2>, <Cauda> ]
ZMeanEstimate=ZMédiaEstimativa
ZMeanEstimate.Syntax=[ <Lista de Dados>, <σ>, <Nível> ]\n[ <Média>, <σ>, <Dimensão>, <Nível> ]
ZMeanTest=ZMédiaTeste
ZMeanTest.Syntax=[ <Lista de Dados>, <σ>, <Dimensão da Média>, <Cauda> ]\n[ <Média>, <σ>, <Dimensão>, <Dimensão da Média>, <Cauda> ]
ZProportion2Estimate=ZProporcional2Estimado
ZProportion2Estimate.Syntax=[ <Proporção 1>, <Dimensão 1>, <Proporção 2>, <Dimensão 2>, <Nível> ]
ZProportion2Test=ZProporção2Teste
ZProportion2Test.Syntax=[ <Proporção 1>, <Dimensão 1>, <Proporção 2>, <Dimensão 2>, <Nível> ]
ZProportionEstimate=ZProporçãoEstimado
ZProportionEstimate.Syntax=[ <Proporção>, <Dimensão>, <Nível> ]
ZProportionTest=ZProporçãoTeste
ZProportionTest.Syntax=[ <Proporção>, <Dimensão>, <Hipótese da Proporção>, <Cauda> ]
Zip=Zip
Zip.Syntax=[ <Expressão>, <Variável1>, <Lista1>, <Variável2>, <Lista2>, ... ]
Zipf=Zipf
Zipf.Syntax=[ <Número de Elementos>, <Expoente> ]\n[ <Número de Elementos>, <Expoente>, <Booleano Cumulativo> ]\n[ <Número de Elementos>, <Expoente>, <Valor da Variável>, <Booleano Cumulativo> ]
Zipf.SyntaxCAS=[ <Número de Elementos>, <Expoente>, <Valor da Variável>, <Acumulado (true|false)> ]
ZoomIn.Syntax=[ ]\n[ <Fator de Escala> ]\n[ <Fator de Escala>, <Ponto Central> ]\n[ <x Mínimo>, <y Mínimo>, <x Máximo>, <y Máximo> ]\n[ <Min x>, <Min y>, <Min z>, <Max x>, <Max y>, <Max z> ]
ZoomOut.Syntax=[ <Fator de Escala> ]\n[ <Fator de Escala>, <Ponto Central> ]
mad=mad
mad.Syntax=[ <Lista de Dados não Classificados> ]\n[ <Lista de Números>, <Lista de Frequências> ]
mean.Syntax=[ <Lista de Dados não Classificados> ]\n[ <Lista de Números>, <Lista de Frequências> ]
stdev=DevStd
stdev.Syntax=[ <Lista de Dados não Classificados> ]\n[ <Lista de Números>, <Lista de Frequências> ]
stdevp=DesStd
stdevp.Syntax=[ <Lista de Dados não Classificados> ]\n[ <Lista de Números>, <Lista de Frequências> ]