# Copyright (c) GeoGebra Group, office@geogebra.org
# The GeoGebra language files are licensed to you under the terms of the
# Creative Commons Attribution-NonCommercial-ShareAlike licence (version 3.0 or later),
# the current text of which can be found via this link:
# https://creativecommons.org/licenses/by-nc-sa/3.0/legalcode.
# Attribution (as required by that Creative Commons license) should take the form of
# (at least) a mention of our name, an appropriate copyright notice and a link to our
# website located at https://www.geogebra.org.
# For further details, please see https://www.geogebra.org/license
ANOVA.Syntax=[ <სია>, <სია>, ... ]
AffineRatio=აფინურიფარდობა
AffineRatio.Syntax=[ <წერტილი>, <წერტილი>, <წერტილი> ]
Angle=კუთხე
Angle.Syntax=[ <ობიექტი> ]\n[ <ვექტორი>, <ვექტორი> ]\n[ <წრფე>, <წრფე> ]\n[ <წერტილი>, <აპექსი>, <წერტილი> ]\n[ <წერტილი>, <აპექსი>, <კუთხე> ]
Angle.Syntax3D=[ <ობიექტი> ]\n[ <ვექტორი>, <ვექტორი> ]\n[ <წრფე>, <წრფე> ]\n[ <წრფე>, <სიბრტყე> ]\n[ <სიბრტყე>, <სიბრტყე> ]\n[ <წერტილი>, <წვერო>, <წერტილი> ]\n[ <წერტილი>, <წვერო>, <კუთხე> ]
AngularBisector=კუთხისბისექტრისა
AngularBisector.Syntax=[ <წრფე>, <წრფე> ]\n[ <წერტილი>, <წერტილი>, <წერტილი> ]
Append=დაამატე
Append.Syntax=[ <სია>, <ობიექტი> ]\n[ <ობიექტი>, <სია> ]
ApplyMatrix=გარდაქმენიმატრიცით
ApplyMatrix.Syntax=[ <მატრიცა>, <ობიექტი> ]
Arc=რკალი
Arc.Syntax=[ <წრეწირი>, <წერტილი>, <წერტილი> ]\n[ <ელიფსი>, <წერტილი>, <წერტილი> ]\n[ <წრეწირი>, <პრამეტრის მნიშვნელობა>, <პრამეტრის მნიშვნელობა> ]\n[ <ელიფსი>, <პრამეტრის მნიშვნელობა>, <პრამეტრის მნიშვნელობა> ]
AreCollinear=კოლინეარულებია
AreCollinear.Syntax=[ <წერტილი>, <წერტილი>, <წერტილი> ]
AreConcurrent=იკვეთებიან
AreConcurrent.Syntax=[ <წრფე>, <წრფე>, <წრფე> ]
AreConcyclic=ერთწრეწირზეა
AreConcyclic.Syntax=[ <წერტილი>, <წერტილი>, <წერტილი>, <წერტილი> ]
AreEqual=ტოლდიდებია
AreEqual.Syntax=[ <ობიექტი>, <ობიექტი> ]
AreParallel=პარალელურებია
AreParallel.Syntax=[ <წრფე>, <წრფე> ]
ArePerpendicular=მართობულებია
ArePerpendicular.Syntax=[ <წრფე>, <წრფე> ]
Area=ფართობი
Area.Syntax=[ <კონუსურიკვეთა> ]\n[ <მრავალკუთხედი> ]\n[ <წერტილი>, ..., <წერტილი> ]
Asymptote=ასიმპტოტი
Asymptote.Syntax=[ <კონუსურიკვეთა> ]\n[ <ფუნქცია> ]\n[ <წირი არაცხადი სახით> ]
AttachCopyToView=შექმენიასლი
AttachCopyToView.Syntax=[ <ობიექტი>, <ჩვენება 0|1|2> ]\n[ <ობიექტი>, <ჩვენება 0|1|2>, <წერტილი 1>, <წერტილი 2>, <ეკრანის წერტილი 1>, <ეკრანის წერტილი 2> ]
Axes=ღერძები
Axes.Syntax=[ <კონუსური კვეთა> ]
Axes.Syntax3D=[ <კონუსური კვეთა> ]\n[ <კვადრიქსი> ]
AxisStepX=ბიჯიXღერძზე
AxisStepY=ბიჯიYღერძზე
BarChart=სვეტოვანიდიაგრამა
BarChart.Syntax=[ <მონაცემების სია>, <სიხშირეების სია> ]\n[ <დაუმუშავებელ მონაცემთა სია>, <სვეტების სიგანე>, <ვერტიკალური მასშტაბის კოეფიციენტი (არ არის აუცილებელი)> ]\n[ <მონაცემების სია>, <სიხშირეების სია>, <სვეტების სიგანე> ]\n[ <საწყისი მნიშვნელობა>, <ბოლო მნიშვნელობა>, <სიმაღლეების სია> ]\n[ <საწყისი მნიშვნელობა>, <ბოლო მნიშვნელობა>, <გამოსახულება>, <ცვლადი>, <რიცხვიდან>, <რიცხვამდე> ]\n[ <საწყისი მნიშვნელობა>, <ბოლო მნიშვნელობა>, <გამოსახულება>, <ცვლადი>, <რიცხვიდან>, <რიცხვამდე>, <ბიჯის სიგრძე> ]
BarCode=ზოლისკოდი
BarCode.Syntax=[ ]\n[ <სურათი> ]\n[ <ტექსტი ან რიცხვი>, "<ფორმატი(არ არის აუცილებელი)>", "<შეცდომის შესწორება (არ არის აუცილებელი)>", <სიგანე(არ არის აუცილებელი)>, <სიმაღლე(არ არის აუცილებელი)> ]
Barycenter=სიმძიმისცენტრი
Barycenter.Syntax=[ <წერტილების სია>, <სიმაღლეების სია> ]
Bernoulli=ბერნულის
Bernoulli.Syntax=[ <ალბათობა>, <ლოგიკური_ კუმულატიური?> ]
Binomial=ბინომიალურიკოეფიციენტი
Binomial.Syntax=[ <რიცხვი n>, <რიცხვი r> ]
BinomialDist=ბინომიალურიგანაწილება
BinomialDist.Syntax=[ <ცდების რაოდენობა>, <წარმატების ალბათობა> ]\n[ <ცდების რაოდენობა>, <წარმატების ალბათობა>, <ლოგიკური_ კუმულატიური?> ]\n[ <ცდების რაოდენობა>, <წარმატების ალბათობა>, <ცვლადის მნიშვნელობა>, <ლოგიკური_ კუმულატიური?> ]
BinomialDist.SyntaxCAS=[ <ცდის რაოდენობა>, <წარმატების ალბათობა>, <ცვლადის მნიშვნელობა>, <ლოგიკური_ კუმულატიური?> ]
Bottom=ფუძე
Bottom.Syntax=[ <კვადრიქსი> ]
BoxPlot=ბოქსპლოტი
BoxPlot.Syntax=[ <y-ოფსეტი>, <y-მასშტაბი>, <დაუმუშავებელ მონაცემთა სია> ]\n[ <y-ოფსეტი>, <y-მასშტაბი>, <დამუშავებელ მონაცემთა სია>, <ლოგიკური_ ამოვარდნილი დაკვირვებები?> ]\n[ <y-ოფსეტი>, <y-მასშტაბი>, <მონაცემთა სია>, <სიხშირეთა სია>, <ლოგიკური_ამოვარდნილი დაკვირვებები> ]\n[ <y-ოფსეტი>, <y-მასშტაბი>, <Min>, <პირველიQ>, <მედიანა>, <მესამეQ>, <Max> ]
Button=ღილაკი
Button.Syntax=[ ]\n[ <წარწერა> ]
CFactor=Cმამრავლებად
CFactor.SyntaxCAS=[ <გამოსახულება> ]\n[ <გამოსახულება>, <ცვლადი> ]
CIFactor=CIმამრავლებად
CIFactor.SyntaxCAS=[ <გამოსახულება> ]\n[ <გამოსახულება>, <ცვლადი> ]
CSolutions=Cფესვები
CSolutions.SyntaxCAS=[ <განტოლება> ]\n[ <განტოლება>, <ცვლადი> ]\n[ <განტოლებების სია>, <ცვლადების სია> ]
CSolve=Cამოხსენი
CSolve.SyntaxCAS=[ <განტოლება> ]\n[ <განტოლება>, <ცვლადი> ]\n[ <განტოლებების სია>, <ცვლადების სია> ]
Cauchy=კოშის
Cauchy.Syntax=[ <მედიანა>, <მასშტაბი>, <ცვლადის სახელწოდება> ]\n[ <მედიანა>, <მასშტაბი>, x, <ლოგიკური_ კომულუატიური?> ]
Cauchy.SyntaxCAS=[ <მედიანა>, <მასშტაბი>, <ცვლადის მნიშვნელობა> ]
Cell=უჯრა
Cell.Syntax=[ <სვეტი>, <სტრიქონი> ]
CellRange=უჯრებისდიაპაზონი
CellRange.Syntax=[ <საწყისი უჯრა>, <ბოლო უჯრა> ]
Center=ცენტრი
Center.Syntax=[ <კონუსურიკვეთა> ]
Center.Syntax3D=[ <კონუსუი კვეთა> ]\n[ <მე-2 რიგის ზედაპირი> ]
CenterView=ცენტრისნახვა
CenterView.Syntax=[ <ცენტრის წერტილი> ]
Centroid=ცენტროიდი
Centroid.Syntax=[ <მრავალკუთხედი> ]
Checkbox=ყუთინიშნულა
Checkbox.Syntax=[ ]\n[ <წაეწერა> ]\n[ <სია> ]\n[ <წარწერა>, <სია> ]
ChiSquared=Chiკვადრატის
ChiSquared.Syntax=[ <თავისუფლების ხარისხი>, <ცვლადი> ]\n[ <თავისუფლების ხარისხი>, x, <ლოგიკური_ კუმულატიური?> ]
ChiSquared.SyntaxCAS=[ <თავისუფლების ხარისხი>, <ცვლადი> ]
ChiSquaredTest=Chiკვადრატტესტი
ChiSquaredTest.Syntax=[ <მატრიცა> ]\n[ <სია>, <სია> ]\n[ <მატრიცა>, <მატრიცა> ]
Circle=წრეწირი
Circle.Syntax=[ <წერტილი>, <რადიუსის რიცხვითი მნიშვნელობა> ]\n[ <წერტილი>, <მონაკვეთი> ]\n[ <წერტილი>, <წერტილი> ]\n[ <წერტილი>, <წერტილი>, <წერტილი> ]
Circle.Syntax3D=[ <წერტილი>, <რადიუსის რიცხვითი მნიშვნელობა> ]\n[ <წერტილი>, <მონაკვეთი> ]\n[ <წერტილი>, <წერტილი> ]\n[ <წრფე>, <წერტილი> ]\n[ <წერტილი>, <წერტილი>, <წერტილი> ]\n[ <წერტილი>, <რადიუსი>, <მიმართულება> ]\n[ <წერტილი>, <წერტილი>, <მიმართულება> ]
CircleArc=წრიულირკალი
CircleArc.Syntax=[ <წერტილი>, <წერტილი>, <წერტილი> ]
CircleSector=წრისსექტორი
CircleSector.Syntax=[ <წერტილი>, <წერტილი>, <წერტილი> ]
CircumcircleArc=რკალისდამატება
CircumcircleArc.Syntax=[ <წერტილი>, <წერტილი>, <წერტილი> ]
CircumcircleSector=სექტორისდამატება
CircumcircleSector.Syntax=[ <წერტილი>, <წერტილი>, <წერტილი> ]
Circumference=გარშემოწერილობა
Circumference.Syntax=[ <კონუსურიკვეთა> ]
Classes=კლასები
Classes.Syntax=[ <მონაცემთა სია>, <კლასების რაოდენობა> ]\n[ <მონაცემთა სია>, <დასაწყისი>, <კლასების სიგანე> ]
ClosestPoint=უახლოესიწერტილი
ClosestPoint.Syntax=[ <ტრაექტორია>, <წერტილი> ]\n[ <წრფე>, <წრფე> ]
Coefficients=კოეფიციენტები
Coefficients.Syntax=[ <მრავალწევრი> ]\n[ <კონუსური კვეთა> ]
Coefficients.SyntaxCAS=[ <მრავალწევრი> ]\n[ <მრავალწევრი>, <ცვლადი> ]
Column=სვეტი
Column.Syntax=[ <უჯრის სახელწოდება> ]
ColumnName=სვეტისსახელწოდება
ColumnName.Syntax=[ <უჯრა> ]
Command=ბრძანება
CommonDenominator=საერთოგამყოფი
CommonDenominator.Syntax=[ <გამოსახულება>, <გამოსახულება> ]
CompetitionRank=კონკურენტულობისრანგი
CompetitionRank.Syntax=[ <სია> ]
CompleteSquare=სრულიკვადრატი
CompleteSquare.Syntax=[ <კვადრატული ფუნქცია> ]
ComplexRoot=კომპლექსურიფესვი
ComplexRoot.Syntax=[ <მრავალწევრი> ]
Cone=კონუსი
Cone.Syntax=[ <წრე>, <სიმაღლე> ]\n[ <წერტილი>, <წერტილი>, <რადიუსი> ]\n[ <წერტილი>, <ვექტორი>, <კუთხე> ]
ConeInfinite=უსასრულოკონუსი
ConeInfinite.Syntax=[ <წერტილი>, <ვექტორი>, <კუთხე> ]\n[ <წერტილი>, <წერტილი>, <კუთხე> ]\n[ <წერტილი>, <წრფე>, <კუთხე> ]
Conic=კონუსური
Conic.Syntax=[ <წერტილი1>, <წერტილი2>, <წერტილი3>, <წერტილი4>, <წერტილი5> ]
ConstructionStep=აგებისბიჯი
ConstructionStep.Syntax=[ ]\n[ <ობიექტი> ]
ContingencyTable=ფაქტორულიცხრილ
ContingencyTable.Syntax=[ <ტექსტის სია>, <ტექსტების სია> ]\n[ <ტექსტის სია>, <ტექსტის სია>, <ოფციები> ]\n[ <სტრიქონული მონაცემების სია>, <სვეტოვანი მონაცემების სია>, <სიხშირული ცხრილი> ]\n[ <სტრიქონული მონაცემების სია>, <სვეტოვანი მონაცემების სია>, <სიხშირული ცხრილი>, <ოფციები> ]
ContinuedFraction=გაგრძელებულიწილადი
ContinuedFraction.Syntax=[ <რიცხვი> ]\n[ <რიცხვი>, <დონე> ]\n[ <რიცხვი>, <დონე>, <შემოკლება ჭეშმარიტი|მცდარი> ]
ConvexHull=უმცირესიამოზნექილი
ConvexHull.Syntax=[ <წერტილების სია> ]
CopyFreeObject=თავისუაფალშიკოპირება
CopyFreeObject.Syntax=[ <ობიექტი> ]
Corner=კუთხისწვერო
Corner.Syntax=[ <რიცხვი> ]\n[ <სურათი>, <რიცხვი> ]\n[ <ტექსტი>, <რიცხვი> ]\n[ <გრაფიკული სცენა>, <რიცხვი> ]
CountIf=თვლაპირობით
CountIf.Syntax=[ <პირობა>, <სია> ]\n[ <პირობა>, <ცვლადი>, <სია> ]
Covariance=კოვარიაცია
Covariance.Syntax=[ <წერტილების სია> ]\n[ <სია>, <სია> ]
Cross=ჯვარედინი
Cross.Syntax=[ <ვექტორი>, <ვექტორი> ]
CrossRatio=ჯვარედინიფარდობა
CrossRatio.Syntax=[ <წერტილი>, <წერტილი>, <წერტილი>, <წერტილი> ]
Cube=კუბი
Cube.Syntax=[ <წერტილი>, <წერტილი> ]\n[ <წერტილი>, <წერტილი>, <მიმართულება> ]
Cubic=კუბური
Cubic.Syntax=[ <წერტილი>, <წერტილი>, <წერტილი>, <რიცხვი> ]
Curvature=სიმრუდე
Curvature.Syntax=[ <წერტილი>, <ობიექტი> ]
CurvatureVector=სიმრუდისვექტორი
CurvatureVector.Syntax=[ <წერტილი>, <ობიექტი> ]
CurveCartesian=წირი
CurveCartesian.Syntax=[ <გამოსახულება>, <გამოსახულება>, <ცვლადი>, <ქვედასაზღვარი>, <ზედასაზღვარი> ]
CurveCartesian.Syntax3D=[ <გამოსახულება>, <გამოსახულება>, <პარამეტრული ცვლადი>, <საწყისი მნიშვნელობა>, <ბოლო მნიშვნელობა> ]\n[ <გამოსახულება>, <გამოსახულება>, <გამოსახულება>, <პარამეტრული ცვლადი>, <საწყისი მნიშვნელობა>, <ბოლო მნიშვნელობა> ]
Cylinder=ცილინდრი
Cylinder.Syntax=[ <წრე>, <სიმაღლე> ]\n[ <წერტილი>, <წერტილი>, <რადიუსი> ]
CylinderInfinite=უსასრულოცილინდრი
CylinderInfinite.Syntax=[ <წრფე>, <რადიუსი> ]\n[ <წერტილი>, <ვექტორი>, <რადიუსი> ]\n[ <წერტილი>, <წერტილი>, <რადიუსი> ]
Defined=განსაზღვრულია
Defined.Syntax=[ <ობიექტი> ]
Degree=რიგი
Degree.Syntax=[ <მრავალწევრი> ]
Degree.SyntaxCAS=[ <მრავალწევრი> ]\n[ <მრავალწევრი>, <ცვლადი> ]
DelauneyTriangulation.Syntax=[ <წერტილების სია> ]
Delete=წაშალე
Delete.Syntax=[ <ობიექტი> ]
Denominator=გამყოფი
Denominator.Syntax=[ <ფუნქცია> ]
Denominator.SyntaxCAS=[ <გამოსახულება> ]
Derivative=წარმოებული
Derivative.Syntax=[ <ფუნქცია> ]\n[ <წირი> ]\n[ <წარმოებული>, <რიცხვი> ]\n[ <წირი>, <რიცხვი> ]
Derivative.SyntaxCAS=[ <გამოსახულება> ]\n[ <გამოსახულება>, <ცვლადი> ]\n[ <გამოსახულება>, <ცვლადი>, <რიცხვი> ]
Determinant=დეტერმინანტი
Determinant.Syntax=[ <მატრიცა> ]
Diameter=შეუღლებულიდიამეტრი
Diameter.Syntax=[ <ვექტორი>, <კონუსურიკვეთა> ]\n[ <წრფე>, <კონუსურიკვეთა> ]
Difference=სხვაობა
Dilate=გაჭიმვა
Dilate.Syntax=[ <წერტილი>, <რიცხვი>, <წერტილი> ]\n[ <წრფე>, <რიცხვი>, <წერტილი> ]\n[ <კონუსურიკვეთა>, <რიცხვი>, <წერტილი> ]\n[ <მრავალკუთხედი>, <რიცხვი>, <წერტილი> ]\n[ <ანასახი>, <რიცხვი>, <წერტილი> ]
Dimension=განზომილება
Dimension.Syntax=[ <ობიექტი> ]
Direction=მიმართულება
Direction.Syntax=[ <წრფე> ]
Directrix=დირექტრისა
Directrix.Syntax=[ <კონუსურიკვეთა> ]
Distance=მანძილი
Distance.Syntax=[ <წერტილი>, <წერტილი> ]\n[ <წერტილი>, <წრფე> ]\n[ <წრფე>, <წერტილი> ]
Div.Syntax=[ <რიცხვი>, <რიცხვი> ]
Division=გაყოფა
Division.Syntax=[ <გასაყოფი რიცხვი>, <გამყოფი რიცხვი> ]\n[ <გასაყოფი მრავალწევრი>, <გამყოფი მრავალწევრი> ]
Divisors=გამყოფები
Divisors.Syntax=[ <რიცხვი> ]
DivisorsList=გამყოფებისსია
DivisorsList.Syntax=[ <რიცხვი> ]
DivisorsSum=გამყოფებისჯამი
DivisorsSum.Syntax=[ <რიცხვი> ]
Dodecahedron=დოდეკაედრონი
Dodecahedron.Syntax=[ <წერტილი>, <წერტილი> ]\n[ <წერტილი>, <წერტილი>, <მიმართულება> ]
Dot=წერტილოვანი
Dot.Syntax=[ <ვექტორი>, <ვექტორი> ]
DotPlot=წერტილოვანიდიაგრამა
DotPlot.Syntax=[ <დაუმუშავებელ მონაცემთა სია>, <მიმდებარე წერტილები ერთად(ლოგიკური - არ არის აუცილებელი)>, <მასშტაბის კოეფიციენტი(არ არის აუცილებელი)> ]
DynamicCoordinates=დინამიურიკოორდინატები
DynamicCoordinates.Syntax=[ <წერტილი>, <რიცხვი>, <რიცხვი> ]
Eccentricity=ექსცენტრულობა
Eccentricity.Syntax=[ <კონუსური კვეთა> ]
Element=ელემენტი
Element.Syntax=[ <სია>, <რიცხვი> ]
Element.SyntaxCAS=[ <სია>, <ელემენტის პოზიცია> ]\n[ <მატრიცი>, <სტრიქონი>, <სვეტი> ]
Eliminate=გამორიცხე
Eliminate.Syntax=[ <მრავალწევრების სია>, <ცვლადების სია> ]
Ellipse=ელიფსი
Ellipse.Syntax=[ <წერტილი>, <წერტილი>, <რიცხვი> ]\n[ <წერტილი>, <წერტილი>, <მონაკვეთი> ]
Ends=სრულდება
Ends.Syntax=[ <კვადრიქსი> ]
Envelope=კონვერტი
Envelope.Syntax=[ <ტრაეტორია>, <წერტილი> ]
Erlang.Syntax=[ <ნაკვთი>, <სიჩქარე>, <ცვლადის მნიშვნელობა> ]\n[ <ნაკვთი>, <სიჩქარე>, x, <ლოგიკური_კუმულატიური> ]
Evaluate=დაადგინე
Excentricity=წრფივიექსცენტრულობა
Excentricity.Syntax=[ <კონუსურიკვეთა> ]
Execute=შეასრულე
Execute.Syntax=[ <ტექსტის სია> ]\n[ <ტექსტის სია>, <პარამეტრი>, <პარამეტრი>, ... ]
Expand=გააფართოე
Expand.Syntax=[ <ფუნქცია> ]
Exponential=ქსპონენციალური
Exponential.Syntax=[ <ლამბდა>, <ცვლადის მნიშვნელობა> ]\n[ <ლამბდა>, x, <ლოგიკური_ კუმულატიური?> ]
Exponential.SyntaxCAS=[ <ლამბდა>, <ცვლადის მნიშვნელობა> ]
Extremum=ექსტრემუმი
Extremum.Syntax=[ <მრავალწევრი> ]
FDistribution=Fგანაწილება
FDistribution.Syntax=[ <მრიცხველის თავისუფლების ხარისხი, <მნიშვნელის თავისუფლების ხარისხი>, <ცვლადის მნიშვნელობა> ]\n[ <მრიცხველის თავისუფლების ხარისხი>, <მნიშვნელის თავისუფლების ხარისხი>, x, <ლოგიკური_ კუმულატიური?> ]
FDistribution.SyntaxCAS=[ <მრიცხველის თავისუფლების ხარისხი>, <მნიშვნელის თავისუფლების ხარისხი>, <ცვლადის მნიშვნელობა> ]
Factor=მამრავლებად
Factor.Syntax=[ <ფუნქცია> ]
Factor.SyntaxCAS=[ <მრავალწევრი> ]\n[ <გამოსახულება>, <ცვლადი> ]
Factors=მამრავლები
Factors.Syntax=[ <მრავლწევრი> ]\n[ <რიცხვი> ]
FillCells=შეავსეუჯრები
FillCells.Syntax=[ <უჯრების დიაპაზონი>, <ობიექტი> ]\n[ <უჯრა>, <სია> ]\n[ <უჯრა>, <მტრიცი> ]
FillColumn=შეავსესვეტი
FillColumn.Syntax=[ <სვეტი>, <სია> ]
FillRow=შეავსესტრიქონი
FillRow.Syntax=[ <სტრიქონი>, <სია> ]
First=პირველი
First.Syntax=[ <სია>, <რიცხვი> ]
First.SyntaxCAS=[ <სია> ]\n[ <სია>, <ელემენტების რაოდენობა> ]
FirstAxis=მთავარიღერძი
FirstAxis.Syntax=[ <კონუსურიკვეთა> ]
FirstAxisLength=მთავარინახევარღერძი
FirstAxisLength.Syntax=[ <კონუსურიკვეთა> ]
Fit=მიუსადაგე
Fit.Syntax=[ <წერტილების სია>, <ფუნქციების სია> ]\n[ <წერტილების სია>, <ფუნქცია> ]
FitExp=მიუსადაგეExp
FitExp.Syntax=[ <წერტილების სია> ]
FitGrowth.Syntax=[ <წერტილების სია> ]
FitImplicit.Syntax=[ <წერტილების სია>, <თანმიმდევრობა> ]
FitLineX.Syntax=[ <წერტილების სია> ]
FitLineY.Syntax=[ <წერტილების სია> ]
FitLog.Syntax=[ <წერტილების სია> ]
FitLogistic.Syntax=[ <წერტილების სია> ]
FitPoly.Syntax=[ <წერტილების სია>, <ხარისხი> ]
FitPow.Syntax=[ <წერტილების სია> ]
FitSin.Syntax=[ <წერტილების სია> ]
Flatten=გააბრტყელე
Flatten.Syntax=[ <სია> ]
Focus=ფოკუსი
Focus.Syntax=[ <კონუსურიკვეთა> ]
FractionText=წილადისტექსი
FractionText.Syntax=[ <რიცხვი> ]\n[ <წერტილი> ]
Frequency=სიხშირე
Frequency.Syntax=[ <დამუშავებელ მონაცემთა სია> ]\n[ <ლოგიკური_ კომუმლატიური?>, <დამუშავებელ მონაცემთა სია> ]\n[ <კლასის საზღვრების სია>, <დამუშავებელ მონაცემთა სია> ]\n[ <ტექსტის სია>, <ტექსტის სია> ]\n[ <ლოგიკური_ კომუმლატიური?>, <კლასის საზღვრების სია>, <დამუშავებელ მონაცემთა სია> ]\n[ <კლასის საზღვრების სია>, <მონაცემების სია>, <ლოგიკრი_ სიმკვრივე?>, <სიმკვრივის მასშტაბის კოეფციენტი (არასავალდებულოა)> ]\n[ <ლოგიკური_კუმუმლატიური?>, <კლასის საზღვრების სია>, <დამუშავებელ მონაცემთა სია>, <ლოგიკური_ სიმკვრივე?>, <სიმკვრივის მასშტაბის კოეფციენტი (არასავალდებულოა)> ]
FrequencyPolygon=სიხშირულიმრავალკუთხედი
FrequencyPolygon.Syntax=[ <კლასის საზღვრების სია>, <სიმაღლეების სია> ]\n[ <კლასის საზღვრების სია>, <მონაცემების სია>, <ლოგიკური_ გამოიყენე სიმკვრივე>, <სიმკვრივის მასშტაბის კოეფციენტი (არ არის აუცილებელი)> ]\n[ <ლოგიკური_ კომულატიური>, <კლასის საზღვრების სია>, <დამუშავებელ მონაცემთა სია>, <ლოგიკური_ სიმკვრივე?>, <სიმკვრივის მასშტაბის კოეფციენტი (არ არის აუცილებელი)> ]
FrequencyTable=სიხშირულიცხრილი
FrequencyTable.Syntax=[ <დაუმუშავებელ მონაცემთა სია>, <მასშტაბის კოეფიციენტი(არ არის აუცილებელი)> ]\n[ <ლოგიკური - კუმულატიური>, <დაუმუშავებელ მონაცემთა სია> ]\n[ <კლასთა საზღვრების სია>, <დაუმუშავებელ მონაცემთა სია> ]\n[ <ლოგიკური - კუმულატიური>, <კლასთა საზღვრების სია>, <დაუმუშავებელ მონაცემთა სია> ]\n[ <კლასთა საზღვრების სია>, <დაუმუშავებელ მონაცემთა სია>, <სიმკვრივე>, <სიმკვრივის მასშტაბის კოეფიციენტი(არ არის აუცილებელი)> ]\n[ <ლოგიკური - კუმულატიური>, <კლასთა საზღვრების სია>, <დაუმუშავებელ მონაცემთა სია>, <სიმკვრივე>, <სიმკვრივის მასშტაბის კოეფიციენტი(არ არის აუცილებელი)> ]
FromBase=ფუძიდან
FromBase.Syntax=[ "<რიცხვი როგორც ტექსტი>", <ფუძე> ]
Function=ფუნქცია
Function.Syntax=[ <რიცხვების სია> ]\n[ <ფუნქცია>, <x-ის საწყისი მნიშვნელობა>, <x-ის საბოლოო მნიშვნელობა> ]
Function.Syntax3D=[ <რიცხვების სია> ]\n[ <გამოსახულება>, <პარამეტრული ცვლადი 1>, <საწყისი მნიშვნელობა>, <ბოლო მნიშვნელობა>, <პარამეტრული ცვლადი 2>, <საწყისი მნიშვნელობა>, <ბოლო მნიშვნელობა> ]
FutureValue=მომავალიმნიშვნელობა
FutureValue.Syntax=[ <საპროცენტო განაკვეთი>, <პერიოდების რაოდენობა>, <ინტერესი>, <მიმდინარე მნიშვნელობა (არ არის აუცილებელი)>, <ტიპი (არ არის აუცილებელი)> ]
GCD=უსგ
GCD.Syntax=[ <სია> ]\n[ <რიცხვი>, <რიცხვი> ]
GCD.SyntaxCAS=[ <რიცხვების სია> ]\n[ <მრავალწევრების სია> ]\n[ <რიცხვი>, <რიცხვი> ]\n[ <მრავალწევრი>, <მრავალწევრი> ]
Gamma=გამა
Gamma.Syntax=[ <ალფა>, <ბეტა>, <ცვლადის მნიშვნელობა> ]\n[ <ალფა>, <ბეტა>, x, <ლოგიკური_ კუმულატიური?> ]
Gamma.SyntaxCAS=[ <ალფა>, <ბეტა>, <ცვლადის სახელი> ]
GeometricMean=მეომეტრიულისაშუალო
GeometricMean.Syntax=[ <რიცხვების სია> ]
GetTime.Syntax=[ ]\n[ "<ფორმატი>" ]
GroebnerDegRevLex.Syntax=[ <მრავალწევრების სია> ]\n[ <მრავალწევრების სია>, <ცვლადების სია> ]
GroebnerLex.Syntax=[ <მრავალწევრების სია> ]\n[ <მრავალწევრების სია>, <ცვლადების სია> ]
GroebnerLexDeg.Syntax=[ <მრავალწევრების სია> ]\n[ <მრავალწევრების სია>, <ცვლადების სია> ]
HarmonicMean=საშუალოჰარმონიული
HarmonicMean.Syntax=[ <რიცხვების სია> ]
Height=სიმაღლე
Height.Syntax=[ <სივრცითი ფიგურა> ]
HideLayer=შრისდამალვა
HideLayer.Syntax=[ <რიცხვი> ]
Histogram=ჰისტოგრამა
Histogram.Syntax=[ <კლასებს შორის ინტერვალები>, <სიმაღლეები> ]\n[ <კლასებს შორის ინტერვალები>, <დაუმუშავებელ მონაცემთა სია>, <ლოგიკური_ გამოვიყენო სიმკვრივე?>, <სიმკვირივის მასშტაბი (არ არის აუცილებელი)> ]\n[ <ლოგიკური_ კუმულატიური?>, <კლასის საზღვართა სია>, <დაუმუშავებელ მონაცემთა სია>, <ლოგიკური_ გამოვიყენო სიმკვრივე?>, <სიმკვირივის მასშტაბი (არ არის აუცილებელი)> ]
HistogramRight=ჰისტოგრამამარჯვენა
HistogramRight.Syntax=[ <კლასის საზღვრების სია>, <სიმაღლეების სია> ]\n[ <კლასის საზღვრების სია>, <დაუმუშავებელ მონაცემთა სია>, <ლოგიკური_ გამოვიყენო სიმკვრივე?>, <სიმკვრივის მასშტაბის კოეფციენტი (არ არის აუცილებელი)> ]\n[ <ლოგიკური_ კუმულატიური?>, <კლასის საზღვრების სია>, <დაუმუშავებელ მონაცემთა სია>, <ლოგიკური_ გამოვიყენო სიმკვრივე?>, <სიმკვრივის მასშტაბის კოეფციენტი (არ არის აუცილებელი)> ]
HyperGeometric=ჰიპერგეომეტრიული
HyperGeometric.Syntax=[ <პოპულაციის ზომა>, <წარმატებების რაოდენობა>, <შერჩევის ზომა> ]\n[ <პოპულაციის ზომა>, <წარმატებების რაოდენობა>, <შერჩევის ზომა>, <ლოგიკური_ კუმულატიური?> ]\n[ <პოპულაციის ზომა>, <წარმატებების რაოდენობა>, <შერჩევის ზომა>, <ცვლადის მნიშვნელობა>, <ლოგიკური_ კუმულატიური?> ]
HyperGeometric.SyntaxCAS=[ <პოპულაციის ზომა>, <წარმატებების რაოდენობა>, <შერჩევის ზომა>, <ცვლადის მნიშვნელობა>, <ლოგიკური_ კუმულატიური?> ]
Hyperbola=ჰიპერბოლა
Hyperbola.Syntax=[ <ფოკუსი>, <ფოკუსი>, <მთავარი ნახევარღერძი> ]\n[ <ფოკუსი>, <ფოკუსი>, <მონაკვეთი> ]\n[ <ფოკუსი>, <ფოკუსი>, <წერტილი> ]
IFactor=Iმამარავლებად
IFactor.Syntax=[ <მრავალწევრი> ]
IFactor.SyntaxCAS=[ <გამოსახულება> ]\n[ <გამოსახულება>, <ცვლადი> ]
Icosahedron=ისოკაედრონი
Icosahedron.Syntax=[ <წერტილი>, <წერტილი> ]\n[ <წერტილი>, <წერტილი>, <მიმართულება> ]
Identity=ერთეულოვანი
Identity.Syntax=[ <განზომილება> ]
If=თუ
If.Syntax=[ <პირობა>, <თუ ჭეშმარიტია მაშინ> ]\n[ <პირობა>, <თუ ჭეშმარიტია მაშინ>, <თუ მცდარია მაშინ> ]
ImplicitCurve=წირიარაცხადად
ImplicitCurve.Syntax=[ <წერტილების სია> ]\n[ <f(x, y)> ]
ImplicitDerivative=არაცხადისგაწარმოება
ImplicitDerivative.SyntaxCAS=[ <f(x, y)> ]\n[ <გამოსახულება>, <დამოკიდებული ცვლადი>, <დამოუკიდებელი ცვლადი> ]
Incircle=ჩახაზულიწრე
Incircle.Syntax=[ <წერტილი>, <წერტილი>, <წერტილი> ]
IndexOf=ინდექსი
IndexOf.Syntax=[ <ობიექტი>, <სია> ]\n[ <ტექსტი>, <ტექსტი> ]\n[ <ობიექტი>, <სია>, <საწყისი ინდექსი> ]\n[ <ტექსტი>, <ტექსტი>, <საწყისი ინდექსი> ]
Insert=ჩასვი
Insert.Syntax=[ <სია>, <სია>, <რიცხვი> ]\n[ <ობიექტი>, <სია>, <რიცხვი> ]
Integral=ინტეგრალი
Integral.Syntax=[ <ფუნქცია> ]\n[ <ფუნქცია>, <ცვლადი> ]\n[ <ფუნქცია>, <x-ის საწყისი მნიშვნელობა>, <x-ის ბოლო მნიშვნელობა> ]\n[ <ფუნქცია>, <x-ის საწყისი მნიშვნელობა>, <x-ის ბოლო მნიშვნელობა>, <ლოგიკური> ]
Integral.SyntaxCAS=[ <ფუნქცია> ]\n[ <ფუნქცია>, <ცვლადი> ]\n[ <ფუნქცია>, <x-ის საწყისი მნიშვნელობა>, <x-ის ბოლო მნიშვნელობა> ]\n[ <ფუნქცია>, <ცვლადი>, <საწყისი მნიშვნელობა>, <ბოლო მნიშვნელობა> ]
IntegralBetween=ინტეგრალიშორის
IntegralBetween.Syntax=[ <ფუნქცია>, <ფუნქცია>, <საწყისი x-მნიშვნელობა>, <ბოლო x-მნიშვნელობა> ]\n[ <ფუნქცია>, <ფუნქცია>, <საწყისი x-მნიშვნელობა>, <ბოლო x-მნიშვნელობა>, <ლოგიკური_ გამოთვლა> ]
IntegralBetween.SyntaxCAS=[ <ფუნქცია>, <ფუნქცია>, <საწყისი x-მნიშვნელობა>, <ბოლო x-მნიშვნელობა> ]\n[ <ფუნქცია>, <ფუნქცია>, <ცვლადი>, <საწყისი მნიშვნელობა>, <ბოლო მნიშვნელობა> ]
Intersect=გრაფიკებისგადაკვეთა
Intersect.Syntax=[ <ობიექტი>, <ობიექტი> ]\n[ <ობიექტი>, <ობიექტი>, <გადაკვეთის წერტილის ინდექსი> ]\n[ <ობიექტი>, <ობიექტი>, <საწყისი წერტილი> ]\n[ <ფუნქცია>, <ფუნქცია>, <საწყისი x>, <ბოლო x> ]\n[ <წირი>, <წირი>, <პარამეტრი1>, <პარამეტრი2> ]
Intersect.SyntaxCAS=[ <ფუნქცია>, <ფუნქცია> ]
IntersectConic=ორისკონუსურიკვეთა
IntersectConic.Syntax=[ <სიბრტყე>, <მე-2 რიგის ზედაპირი> ]\n[ <მე-2 რიგის ზედაპირი>, <მე-2 რიგის ზედაპირი> ]
IntersectPath=გადაკვეთისტრაექტორია
IntersectPath.Syntax=[ <წრფე>, <მრავალკუთხედი> ]\n[ <მრავალკუთხედი>, <მრავალკუთხედი> ]
IntersectPath.Syntax3D=[ <წრფე>, <მრავალკუთხედი> ]\n[ <მრავალკუთხედი>, <მრავალკუთხედი> ]\n[ <სიბრტყე>, <მრავალკუთხედი> ]\n[ <სიბრტყე>, <მე-2 რიგის ზედაპირი> ]
Intersection=გადაკვეთა
Intersection.Syntax=[ <სია>, <სია> ]
InverseBinomial=შებრუნებულიბინომიალური
InverseBinomial.Syntax=[ <კუდების რაოდენობა>, <წარმატების ალბატობა>, <ალბათობა> ]
InverseCauchy=შებრუნებულიკოშის
InverseCauchy.Syntax=[ <მედიანა>, <მასშტაბი>, <ალბათობა> ]
InverseChiSquared=შებრუნებულიChiკვადრატის
InverseChiSquared.Syntax=[ <თავისუფლების ხარისხი>, <ალბათობა> ]
InverseExponential=შებრუნებულიექსპონენციალური
InverseExponential.Syntax=[ <ლამბდა>, <ალბათობა> ]
InverseFDistribution=შებრუნებულიFგანაწილება
InverseFDistribution.Syntax=[ <მრიცხველის თავისუფლების ხარისხი>, <მნიშვნელის თავისუფლების ხარისხი>, <ალბათობა> ]
InverseGamma=შებრუნებულიგამა
InverseGamma.Syntax=[ <ალფა>, <ბეტა>, <ალბათობა> ]
InverseHyperGeometric=შებრუნებულიჰიპერგეომეტრიულის
InverseHyperGeometric.Syntax=[ <პოლულაციის ზომა>, <წარმატებების რაოდენობა>, <შერჩევის ზომა>, <ალბათობა> ]
InverseLaplace=ლაპლასისშებრუნდებული
InverseLaplace.Syntax=[ <ფუნქცია> ]\n[ <ფუნქცია>, <ცვლადი> ]
InverseLogNormal=შებრუნებულილოგნორმალური
InverseLogNormal.Syntax=[ <საშუალო>, <სტანდარტული გადახრა>, <ალბათობა> ]
InverseLogistic=შებრუნებულილოგისტიკური
InverseLogistic.Syntax=[ <საშუალო>, <მასშტაბი>, <ალბათობა> ]
InverseNormal=შებრუნებულინორმალური
InverseNormal.Syntax=[ <საშუალო>, <სტანდარტული გადახრა>, <ალბათობა> ]
InversePascal=შებრუნებულიპასკალის
InversePascal.Syntax=[ <წარმატებების რაოდენობა>, <წარმატების ალბათობა>, <ალბათობა> ]
InversePoisson=შებრუნებულიპუასონის
InversePoisson.Syntax=[ <საშუალო>, <ალბათობა> ]
InverseTDistribution=შებრუნებულიTგანაწილება
InverseTDistribution.Syntax=[ <თავისუფლების ხარისხი>, <ალბათობა> ]
InverseWeibull=შებრუნებულივეიბულის
InverseWeibull.Syntax=[ <ნაკვტი>, <მასშტაბი>, <ალბათობა> ]
InverseZipf=შებრუნებულიZipf
InverseZipf.Syntax=[ <ელემენტების რაოდენობა>, <ექსპონენტა>, <ალბათობა> ]
Invert=შეაბრუნე
Invert.Syntax=[ <მატრიცი> ]\n[ <ფუნქცია> ]
IsInRegion=არისშიგნითა
IsInRegion.Syntax=[ <წერტილი>, <არე> ]
IsInteger=მთელია
IsInteger.Syntax=[ <რიცხვი> ]
IsPrime=მარტივია
IsPrime.Syntax=[ <რიცხვი> ]
Iteration=იტერაცია
Iteration.Syntax=[ <ფუნქცია>, <საწყისი მნიშვნელობა>, <იტერაციების რაოდენობა> ]
IterationList=იტერაციისსია
IterationList.Syntax=[ <ფუნქცია>, <საწყისი_მნიშვნელობა>, <იტერაციების რაოდენობა> ]
Join=შეაერთე
Join.Syntax=[ <სიების სია> ]\n[ <სია>, <სია>, ... ]
KeepIf=შეინარჩუნეთუ
KeepIf.Syntax=[ <პირობა>, <სია> ]\n[ <პირობა>, <ცვლადი>, <სია> ]
LCM=უსჯ
LCM.Syntax=[ <სია> ]\n[ <რიცხვი>, <რიცხვი> ]
LCM.SyntaxCAS=[ <რიცხვების სია> ]\n[ <მრავალწევრების სია> ]\n[ <რიცხვი>, <რიცხვი> ]\n[ <მრავალწევრი>, <მრავალწევრი> ]
LaTeX=ფორმულატექსტი
LaTeX.Syntax=[ <ობიექტი> ]\n[ <ობიექტი>, <ლოგიკური_ ცვლადის გარდაქმნა?> ]\n[ <ობიექტი>, <ლოგიკური_ ცვლადის გარდაქმნა?>, <ლოგიკური_ სახელწოდების ჩვენება?> ]
Laplace=ლაპლასის
Laplace.Syntax=[ <ფუნქცია> ]\n[ <ფუნქცია>, <ცვლადი> ]
Last=ბოლო
Last.Syntax=[ <ტექსტი> ]\n[ <სია>, <რიცხვი> ]\n[ <სია>, <ელემენტების რაოდენობა> ]\n[ <ტექსტი>, <ელემენტების რაოდენობა> ]
Last.SyntaxCAS=[ <სია> ]\n[ <სია>, <ელემენტების რაოდენობა> ]
LeftSide=მარცხენამხარე
LeftSide.Syntax=[ <განტოლება> ]
LeftSide.SyntaxCAS=[ <განტოლება> ]\n[ <განოლებების სია> ]\n[ <განტოლებების სია>, <ინდექსი> ]
LeftSum=მარცხენაჯამი
LeftSum.Syntax=[ <ფუნქცია>, <x-ის საწყისი მნიშვნელობა>, <x-ის ბოლო მნიშვნელობა>, <დანაწილების რაოდენობა> ]
Length=სიგრძე
Length.Syntax=[ <ობიექტი> ]\n[ <ფუნქცია>, <x-ის საწყისი მნიშვნელობა>, <x-ის ბოლო მნიშვნელობა> ]\n[ <ფუნქცია>, <საწყისი წერტილი>, <ბოლო წერტილი> ]\n[ <წირი>, <t-ს საწყისი მნიშვნელობა>, <t-ს ბოლო მნიშვნელობა> ]\n[ <წირი>, <საწყისი წერტილი>, <ბოლო წერტილი> ]
Length.SyntaxCAS=[ <ფუნქცია>, <x-ის საწყისი მნიშვნელობა>, <x-ის ბოლო მნიშვნელობა> ]\n[ <ფუნქცია>, <ცვლადი>, <საწყისი წერტილი>, <ბოლო წერტილი> ]
LetterToUnicode=Unicodeში
LetterToUnicode.Syntax=[ "<ასო>" ]
Limit=ზღვარი
Limit.Syntax=[ <ფუნქცია>, <მნიშვნელობა> ]
Limit.SyntaxCAS=[ <გამოსახულება>, <მნიშვნეობა> ]\n[ <გამოსახულება>, <ცვლადი>, <მნიშვნელობა> ]
LimitAbove=ზედაზღვარი
LimitAbove.Syntax=[ <ფუნქცია>, <მნიშვნელობა> ]
LimitAbove.SyntaxCAS=[ <გამოსახულება>, <მნიშვნელობა> ]\n[ <გამოსახულება>, <ცვლადი>, <ცვლადი> ]
LimitBelow=ქვედაზღვარი
LimitBelow.Syntax=[ <ფუნქცია>, <მნიშვნელობა> ]
LimitBelow.SyntaxCAS=[ <გამოსახულება>, <ცვლადი> ]\n[ <გამოსახულება>, <ცვლადი>, <მნიშვნელობა> ]
Line=წრფე
Line.Syntax=[ <წერტილი>, <წერტილი> ]\n[ <წერტილი>, <პარალელური წრფე> ]\n[ <წერტილი>, <ვექტორი> ]
LineBisector=შუამართობი
LineBisector.Syntax=[ <მონაკვეთი> ]\n[ <წერტილი>, <წერტილი> ]
LineBisector.Syntax3D=[ <სეგმენტი> ]\n[ <წერტილი>, <წერტილი> ]\n[ <წერტილი>, <წერტილი>, <მიმართულება> ]
Locus=გეოადგილი
Locus.Syntax=[ <გეოადგილის წრფის შემქმნელი წერტილი>, <წერტილი> ]\n[ <გეოადგილის წრფის შემქმნელი წერტილი>, <სრიალა> ]\n[ <მხებიველი>, <წერტილი> ]\n[ <f(x, y)>, <წერტილი> ]
LocusEquation=გეოადგილისგანტოლება
LocusEquation.Syntax=[ <გეოადგილი> ]\n[ <გეოადგილის წერტილი>, <მოძრავი წერტილი> ]
LogNormal=ლოგნორმალური
LogNormal.Syntax=[ <საშუალო>, <სტანდარტული გადახრა>, <ცვლადის მნიშვნელობა> ]\n[ <საშუალო>, <სტანდარტული გადახრა>, x, <ლოგიკური_ კუმულატიური?> ]
Logistic=ლოგისტიკური
Logistic.Syntax=[ <საშუალო>, <მასშტაბი>, <ცვლადის მნიშვნელობა> ]\n[ <საშუალო>, <მასშტაბი>, x, <ლოგიკური_ კუმულატიური?> ]
LowerSum=ქვედაჯამი
LowerSum.Syntax=[ <ფუნქცია>, <x-ის საწყისი მნიშვნელობა>, <x-ის ბოლო მნიშვნელობა>, <დანაწილების რაოდენობა> ]
MAD.Syntax=[ <დაუმუშავებელ მონაცემთა სია> ]\n[ <რიცხვების სია>, <სიხშირეების სია> ]
MatrixPlot=მატრიცისპლოტი
MatrixRank=მატრიცისრანგი
MatrixRank.Syntax=[ <მატრიცა> ]
Max.Syntax=[ <ინტერვალი> ]\n[ <სია> ]\n[ <რიცხვი>, <რიცხვი> ]\n[ <მონაცემების სია>, <სიხშირეების სია> ]\n[ <ფუნქცია>, <საწყისი x-მნიშვნელობა>, <ბოლო x-მნიშვნელობა> ]
Max.SyntaxCAS=[ <სია> ]\n[ <რიცხვი>, <რიცხვი> ]
Maximize=მაქსიმიზაცია
Maximize.Syntax=[ <დამოკიდებული რიცხვი>, <თავისუფალი რიცხვი> ]
Mean=საშუალო
Mean.Syntax=[ <დაუმუშავებელ მონაცემთა სია> ]\n[ <რიცხვების სია>, <სიხშირეების სია> ]
Mean.SyntaxCAS=[ <რიცხვების სია> ]
MeanX=საშუალოX
MeanX.Syntax=[ <წერტილების სია> ]
MeanY=საშუალოY
MeanY.Syntax=[ <წერტილების სია> ]
Median=მედიანა
Median.Syntax=[ <დაუმუშავებელ მონაცემთა სია> ]\n[ <რიცხვების სია>, <სიხშირეების სია> ]
Median.SyntaxCAS=[ <რიცხვების სია> ]
Midpoint=შუაწერტილი
Midpoint.Syntax=[ <მონაკვეთი> ]\n[ <კონუსურიკვეთა> ]\n[ <ინტერვალი> ]\n[ <წერტილი>, <წერტილი> ]
Min.Syntax=[ <ინტერვალი> ]\n[ <სია> ]\n[ <რიცხვი>, <რიცხვი> ]\n[ <მონაცემების სია>, <სიხშირეების სია> ]\n[ <ფუნქცია>, <საწყისი x-მნიშვნელობა>, <ბოლო x-მნიშვნელობა> ]
Min.SyntaxCAS=[ <სია> ]\n[ <რიცხვი>, <რიცხვი> ]
Minimize=მინიმიზაცია
Minimize.Syntax=[ <დამოკიდებული რიცხვი>, <თავისუფალი რიცხვი> ]
MinimumSpanningTree=ხემინიმალურიდაფარვის
MinimumSpanningTree.Syntax=[ <წერტილების სია> ]
Mirror=არეკლე
Mirror.Syntax=[ <წერტილი>, <წერტილი> ]\n[ <წრფე>, <წერტილი> ]\n[ <კონუსურიკვეთა>, <წერტილი> ]\n[ <მრავალკუთხედი>, <წერტილი> ]\n[ <სურათი>, <წერტილი> ]\n[ <წერტილი>, <წრფე> ]\n[ <წრფე>, <წრფე> ]\n[ <კონუსურიკვეთა>, <წრფე> ]\n[ <მრავალკუთხედი>, <წრფე> ]\n[ <სურათი>, <წრფე> ]\n[ <წერტილი>, <წრე> ]
Mirror.Syntax3D=[ <ობიექტი>, <წერტილი> ]\n[ <ობიექტი>, <წრფე> ]\n[ <ობიექტი>, <სიბრტყე> ]\n[ <ობიექტი>, <წრეწირი> ]
MixedNumber=შერეულირიცხვი
MixedNumber.SyntaxCAS=[ <რიცხვი> ]
Mod.Syntax=[ <გასაყოფი რიცხვი>, <გამყოფი რიცხვი> ]\n[ <გასაყოფი მრავალწევრი>, <გამყოფი მრავალაწევრი> ]
Mode=მოდა
Mode.Syntax=[ <რიცხვების სია> ]
NIntegral=Nინტეგრალი
NIntegral.SyntaxCAS=[ <ფუნქცია>, <x-ის საწყისი მნიშვნელობა>, <x-ის ბოლო მნიშვნელობა> ]\n[ <ფუნქცია>, <ცვლადი>, <საწყისი მნიშვნელობა>, <ბოლო მნიშვნელობა> ]
NSolutions=Nამონახსნი
NSolutions.SyntaxCAS=[ <განტოლება> ]\n[ <განტოლება>, <ცვლადი> ]\n[ <განტოლება>, <ცვლადი = საწყისი მნიშვნელობა> ]\n[ <განტოლებების სია>, <ცვლადების სია> ]
NSolve=Nამოხსენი
NSolve.SyntaxCAS=[ <განტოლება> ]\n[ <განტოლება>, <ცვლადი> ]\n[ <განტოლება>, <ცვლადი = საწყისი მნიშვნელობა> ]\n[ <განტოლებების სია>, <ცვლადების სია> ]
NSolveODE=NამოხსენიODE
NSolveODE.Syntax=[ <წარმოებულების სია>, <საწყისი x-კოორდინატი>, <საწყისი y-კოორდინატების სია>, <ბოლო  x-კოორდინატი> ]
Name=სახელი
Name.Syntax=[ <ობიექტი> ]
Net=ქსელი
Net.Syntax=[ <მრავალწახნაგა>, <რიცხვი> ]\n[ <მრავალწახნაგა>, <რიცხვი>, <წახნაგი>, <წიბო>, <წიბო>, ... ]
NextPrime=შედეგიმარტივი
NextPrime.Syntax=[ <რიცხვი> ]
Normal=ნორმალური
Normal.Syntax=[ <საშუალო>, <სტანდარტული გადახრა>, <ცვლადის სახელი> ]\n[ <საშუალო>, <სტანდარტული გადახრა>, <ცვლადის სახელი>, <ლოგიკური_ კუმულატიური?> ]\n[ <საშუალო>, <სტანდარტული გადახრა>, <x>, <ლოგიკური_ კუმულატიური?> ]
Normal.SyntaxCAS=[ <საშუალო>, <სტანდარტული გადახრა>, <ცვლადის მნიშვნელობა> ]
NormalQuantilePlot=ნორმალურიQQპლოტი
NormalQuantilePlot.Syntax=[ <დაუმუშავებელ მონაცემთა სია> ]
Numerator=მრიცხველი
Numerator.Syntax=[ <ფუნქცია> ]
Numerator.SyntaxCAS=[ <გამოსახულება> ]
Numeric=რიცხვითი
Numeric.SyntaxCAS=[ <გამოსახულება> ]\n[ <გამოსახულება>, <ათწილადის ნიშნის შემდეგ ციფრთა რაოდენობა> ]
Object=ობიექტი
Object.Syntax=[ <ობიექტის სახელწოდება, როგორც ტექსტი> ]
Octahedron=ოქტაედრი
Octahedron.Syntax=[ <წერტილი>, <წერტილი> ]\n[ <წერტილი>, <წერტილი>, <მიმართულება> ]
Ordinal=ორდინალურირიცხვი
Ordinal.Syntax=[ <მთელი> ]
OrdinalRank=ორდინალურირანგი
OrdinalRank.Syntax=[ <სია> ]
OrthogonalLine=მართობი
OrthogonalLine.Syntax=[ <წერტილი>, <წრფე> ]\n[ <წერტილი>, <მონაკვეთი> ]\n[ <წერტილი>, <ვექტორი> ]
OrthogonalLine.Syntax3D=[ <წერტილი>, <წრფე> ]\n[ <წერტილი>, <სეგმენტი> ]\n[ <წერტილი>, <ვექტორი> ]\n[ <წერტილი>, <სიბრტყე> ]\n[ <წრფე>, <წრფე> ]\n[ <წერტილი>, <წრფე>, <წრფე> ]\n[ <წერტილი>, <ვექტორი>, <ვექტორი> ]\n[ <წერტილი>, <წრფე>, <კონტექსტი> ]
OrthogonalPlane=მართისიბრტყე
OrthogonalPlane.Syntax=[ <წერტილი>, <წრფე> ]\n[ <წერტილი>, <ვექტორი> ]
OrthogonalVector=მარტობულივექტორი
OrthogonalVector.Syntax=[ <წრფე> ]\n[ <მონაკვეთი> ]\n[ <ვექტორი> ]
OrthogonalVector.Syntax3D=[ <წრფე> ]\n[ <სეგმენტი> ]\n[ <ვექტორი> ]\n[ <სიბრტყე> ]
OrthogonalVector.SyntaxCAS=[ <ვექტორი> ]
OsculatingCircle=მხებიწრეწირი
OsculatingCircle.Syntax=[ <წერტილი>, <ობიექტი> ]
PMCC=კორელაციისკოეფიცენტები
PMCC.Syntax=[ <წერტილების სია> ]\n[ <x-კოორდინატების სია>, <y-კოორდინატების სია> ]
Pan=მარცხნივდაზემოთ
Pan.Syntax3D=[ <x>, <y>, <z> ]
Parabola=პარაბოლა
Parabola.Syntax=[ <წერტილი>, <წრფე> ]
Parameter=პარამეტრი
Parameter.Syntax=[ <პარაბოლა> ]
ParametricDerivative=პარამეტრულიწარმოებული
ParametricDerivative.Syntax=[ <წირი> ]
ParseToFunction=აქციეფუნქციად
ParseToFunction.Syntax=[ <ფუნქცია>, <სტრინგი> ]
ParseToNumber=აქციერიცხვად
ParseToNumber.Syntax=[ <რიცხვი>, <სტრინგი> ]
PartialFractions=რაციონალურიშესაკრებები
PartialFractions.Syntax=[ <ფუნქცია> ]
PartialFractions.SyntaxCAS=[ <ფუნქცია> ]\n[ <ფუნქცია>, <ცვლადი> ]
Pascal=პასკალის
Pascal.Syntax=[ <წარმატებების რაოდენობა>, <წარმატების ალბათობა> ]\n[ <წარმატებების რაოდენობა>, <წარმატების ალბათობა>, <ლოგიკური_ კომულატიური?> ]\n[ <წარმატებების რაოდენობა>, <წარმატების ალბათობა>, <ცვლადის მნიშვნელობა>, <ლოგიკური_ კომულატიური?> ]
Pascal.SyntaxCAS=[ <წარმატებების რაოდენობა>, <წარმატების ალბათობა>, <ცვლადის მნიშვნელობა>, <ლოგიკური_ კომულატიური?> ]
PathParameter=გზისპარამეტრი
PathParameter.Syntax=[ <ტრაექტორიის წერტილი> ]
Payment=ინტერესი
Payment.Syntax=[ <საპროცენტო განაკვეთი>, <პერიოდების რაოდენობა>, <მიმდინარე მნიშვნელობა>, <მომავალი მნიშვნელობა(არ არის აუცილებელი)>, <ტიპი(არ არის აუცილებელი)> ]
Percentile=პროცენტილი
Percentile.Syntax=[ <რიცხვების სია>, <პროცენტი> ]
Perimeter=პერიმეტრი
Perimeter.Syntax=[ <მრავალკუთხედი> ]\n[ <კონუსურიკვეთა> ]\n[ <გემეტრიული ადგილი> ]
Periods=პერიოდები
Periods.Syntax=[ <საპროცენტო განაკვეთი>, <ინტერესი>, <მიმდინარე მნიშვნელობა>, <მომავალი მნიშვნეობა (არ არის აუცილებელი)>, <ტიპი (არ არის აუცილებელი)> ]
Plane=სიბრტყე
Plane.Syntax=[ <მრავალკუთხედი> ]\n[ <კონუსური კვეთა> ]\n[ <წერტილი>, <სიბრტყე> ]\n[ <წერტილი>, <წრფე> ]\n[ <წრფე>, <წრფე> ]\n[ <წერტილი>, <წერტილი>, <წერტილი> ]
PlaneBisector=შიბრტყისშუამართობი
PlaneBisector.Syntax=[ <მონაკვეთი> ]\n[ <წერტილი>, <წერტილი> ]
PlaySound=ხმისჩართვა
PlaySound.Syntax=[ <ფაილი> ]\n[ <ლოგიკური_ ხმისგაშვება?> ]\n[ <ფუნქცია>, <Min-მნიშვნელობა>, <Max-მნიშვნელობა> ]\n[ <ფუნქცია>, <Min-მნიშვნელობა>, <Max-მნიშვნელობა>, <სიხშირე>, <სიღრმე> ]
Point=წერტილი
Point.Syntax=[ <ობიექტი> ]\n[ <სია> ]\n[ <ობიექტი>, <პარამეტრი> ]\n[ <წერტილი>, <ვექტორი> ]
PointIn=შიდაწერტილი
PointIn.Syntax=[ <არე> ]
PointList=წერტილებისსია
PointList.Syntax=[ <სია> ]
Poisson=პუასონის
Poisson.Syntax=[ <საშუალო> ]\n[ <საშუალო>, <ლოგიკური_ კომულატიური?> ]\n[ <საშუალო>, <ცვლადის მნიშვნელობა>, <ლოგიკური_ კომულატიური?> ]
Poisson.SyntaxCAS=[ <საშუალო>, <ცვლადის მნიშვნელობა>, <ლოგიკური_ კომულატიური?> ]
Polar=პოლარული
Polar.Syntax=[ <წერტილი>, <კონუსური კვეთა> ]
PolyLine=ტეხილიწირი
PolyLine.Syntax=[ <წერტილების სია> ]\n[ <წერტილი>, ..., <წერტილი> ]
Polygon=მრავალკუთხედი
Polygon.Syntax=[ <წერტილების სია> ]\n[ <წერტილი>, ..., <წერტილი> ]\n[ <წერტილი>, <წერტილი>, <წვეროების რაოდენობა> ]
Polygon.Syntax3D=[ <წერტილების სია> ]\n[ <წერტილი>, ..., <წერტილი> ]\n[ <წერტილი>, <წერტილი>, <წვეროების რაოდენობა> ]\n[ <წერტილი>, <წერტილი>, <წვეროების რაოდენობა>, <მომართულება> ]
Polynomial=მრავალწევრი
Polynomial.Syntax=[ <ფუნქცია> ]\n[ <წერტილების სია> ]
Polynomial.SyntaxCAS=[ <ფუნქცია> ]\n[ <ფუნქცია>, <ცვლადი> ]
PresentValue=მიმდინარემნიშვნელობა
PresentValue.Syntax=[ <საპროცენტო განაკვეთი>, <დროის ინტერვალების რაოდენობა>, <ინტერესი>, <მომავალი მნიშვნელობა (არ არის აუცილებელი)>, <ტიპი (არ არის აუცილებელი)> ]
PreviousPrime=წინამარტივი
PreviousPrime.Syntax=[ <რიცხვი> ]
PrimeFactors=მარტივიმამრავლებად
PrimeFactors.Syntax=[ <რიცხვი> ]
Prism=პრიზმა
Prism.Syntax=[ <მრავალკუთხედი>, <წერტილი> ]\n[ <მრავალკუთხედი>, <სიმაღლის რიცხვითი მნიშვნელობა> ]\n[ <წერტილი>, <წერტილი>, ... ]
Product=ნამრავლი
Product.Syntax=[ <დაუმუშავებელ მონაცემთა სია> ]\n[ <რიცხვების სია>, <ელემენტების რაოდენობა> ]\n[ <რიცხვების სია>, <სიხშირეების სია> ]
Product.SyntaxCAS=[ <გამოსახულებების სია> ]\n[ <გამოსახულება>, <ცვლადი>, <საწყისი ინექსი>, <ბოლო ინდექსი> ]
Prove=დაამტკიცე
Prove.Syntax=[ <ლოგიკური გამოსახულება> ]
ProveDetails=დამტიკებისნაბიჯები
ProveDetails.Syntax=[ <ლოგიკური გამოსახულება> ]
Pyramid=პირამიდა
Pyramid.Syntax=[ <მრავალკუთხედი>, <წვეროს წერტილი> ]\n[ <მრავალკუთხედი>, <სიმაღლე> ]\n[ <წერტილი>, <წერტილი>, <წერტილი>, <წერტილი>, ... ]
Q1=პირველიQ
Q1.Syntax=[ <დაუმუშავებელ მონაცემთა სია> ]\n[ <რიცხვების სია>, <სიხშირეების სია> ]
Q3=მესამეQ
Q3.Syntax=[ <დაუმუშავებელ მონაცემთა სია> ]\n[ <რიცხვების სია>, <სიხშირეების სია> ]
QuadricSide=კვადრიქსისგვერდი
QuadricSide.Syntax=[ <კვადრიქსი> ]
RSquare=Rკვადრატი
RSquare.Syntax=[ <წერტილების სია>, <ფუნქცია> ]
Radius=რადიუსი
Radius.Syntax=[ <კონუსური კვეთა> ]
Random=შემთხვევითიმონაკვეთიდან
Random.Syntax=[ <Min მთელი>, <Max მთელი> ]\n[ <Min მთელი>, <Max მთელი>, <ლოგიკური ფიქსირებული> ]
Random.SyntaxCAS=[ <Min მთელი>, <Max მთელი> ]
RandomBinomial=შემთხვევითიბინომიალური
RandomBinomial.Syntax=[ <ცდის რაოდენობა>, <ალბათობა> ]
RandomElement=შემთხვევითიელემენტი
RandomElement.Syntax=[ <სია> ]
RandomNormal=შემთხვევითინორმალური
RandomNormal.Syntax=[ <საშუალო>, <სტანდარტული გადახრა> ]
RandomPoisson=შემთხვევითიპუასონის
RandomPoisson.Syntax=[ <საშუალო> ]
RandomPolynomial=შემთხვევითიპოლინომიალური
RandomPolynomial.Syntax=[ <რიგი>, <Min კოეფიციენტების>, <Max კოეფიციენტების> ]
RandomPolynomial.SyntaxCAS=[ <რიგი>, <Min კოეფიციენტების>, <Max კოეფიციენტების> ]\n[ <ცვლადი>, <რიგი>, <Min კოეფიციენტების>, <Max კოეფიციენტების> ]
RandomUniform=შემთხვევითითანაბარი
RandomUniform.Syntax=[ <Min>, <Max> ]\n[ <Min>, <Max>, <რაოდენობა> ]
Rate.Syntax=[ <ინტერვალების რაოდენობა>, <ინტერესი>, <მიმდინარე მნიშვნელობა>, <მომავალი მნიშვნეობა (არ არის აუცილებელი)>, <ტიპი (არ არის აუცილებელი)>, <გამოცნობილი (არ არის აუცილებელი)> ]
Rationalize=რაციონალურად
Rationalize.SyntaxCAS=[ <რიცხვი> ]
Ray=სხივი
Ray.Syntax=[ <საწყისი წერტილი>, <წერტილი> ]\n[ <საწყისი წერტილი>, <მიმართულების ვექტორი> ]
RectangleSum=დანაწილებითჯამი
RectangleSum.Syntax=[ <ფუნქცია>, <x-ის საწყისი მნიშვნელობა>, <x-ის ბოლო მნიშვნელობა>, <დანაწილების რაოდენობა>, <საწყისი მართკუთხედის მდებარეობა> ]
ReducedRowEchelonForm=გაუსისელიმინერებასტრიქონზე
ReducedRowEchelonForm.Syntax=[ <მატრიცა> ]
Relation=დამოკიდებულება
Relation.Syntax=[ <ობიექტი>, <ობიექტი> ]
Remove=მოაცილე
Remove.Syntax=[ <სია>, <სია> ]
RemoveUndefined=მოაცილეგანუსაზვრელი
RemoveUndefined.Syntax=[ <სია> ]
Rename=გადაარქვი
Rename.Syntax=[ <ობიექტი>, <სახელი> ]
ResidualPlot=რეზიდუალპლოტი
ResidualPlot.Syntax=[ <წერტილების სია>, <ფუნქცია> ]
Reverse=შებრუნებით
Reverse.Syntax=[ <სია> ]
RightSide=მარჯვენამხარე
RightSide.Syntax=[ <განტოლება> ]
RightSide.SyntaxCAS=[ <განტოლება> ]\n[ <განტოლებების სია> ]\n[ <განტოლებების სია>, <ინდექსი> ]
RigidPolygon=მყარიმრავალკუთხედი
RigidPolygon.Syntax=[ <მრავალკუთხედი> ]\n[ <მრავალკუთხედი>, <ოფსეტი x>, <ოფესტი y> ]\n[ <თავისუფალი წერტილი>, ..., <თავისუფალი წერტილი> ]
Root=ფესვი
Root.Syntax=[ <მრავალწევრი> ]\n[ <ფუნქცია>, <x-ის საწყისი მნიშვნელობა> ]\n[ <ფუნქცია>, <x-ის საწყისი მნიშვნელობა>, <x-ის საბოლოო მნიშვნელობა> ]
Root.SyntaxCAS=[ <მრავალწევრი> ]
RootList=ფესვებისსია
RootList.Syntax=[ <სია> ]
RootMeanSquare=საშუალოკვადრატული
RootMeanSquare.Syntax=[ <რიცხვების სია> ]
Roots=ფესვები
Roots.Syntax=[ <ფუნქცია>, <x-ის საწყისი მნიშვნელობა>, <x-ის ბოლო მნიშვნელობა> ]
Rotate=მოაბრუნე
Rotate.Syntax=[ <ობიექტი>, <კუთხე> ]\n[ <ობიექტი>, <კუთხე>, <წერტილი> ]
Rotate.Syntax3D=[ <ობიექტი>, <კუთხე> ]\n[ <ობიექტი>, <კუთხე>, <წერტილი> ]\n[ <ობიექტი>, <კუთხე>, <მობრუნების ღერძი> ]\n[ <ობიექტი>, <კუთხე>, <წერტილი ღერძზე>, <სიბრტყის ღერძის მიმართულება> ]
RotateText=მოაბრუნეტექსტი
RotateText.Syntax=[ <ტექსტი>, <კუთხე> ]
Row=სტრიქონი
Row.Syntax=[ <უჯრის სახელწოდება> ]
RunClickScript=სკრიპტისგაშვება
RunClickScript.Syntax=[ <ობიექტი> ]
RunUpdateScript=სკრიპტისგანახლება
RunUpdateScript.Syntax=[ <ობიექტი> ]
SD.Syntax=[ <დაუმუშავებელ მონაცემთა სია> ]\n[ <რიცხვების სია>, <სიხშირეების სია> ]
SDX.Syntax=[ <წერტილების სია> ]
SDY.Syntax=[ <წერტილების სია> ]
SXX.Syntax=[ <რიცხვების სია> ]\n[ <წერტილების სია> ]
SXY.Syntax=[ <წერტილების სია> ]\n[ <რიცხვების სია>, <რიცხვების სია> ]
SYY.Syntax=[ <წერტილების სია> ]
Sample=შერჩევა
Sample.Syntax=[ <სია>, <ზომა> ]\n[ <სია>, <ზომა>, <შერჩევა უკანდაბრუნებით> ]
SampleSD=შერჩევისSD
SampleSD.Syntax=[ <დაუმუშავებელ მონაცემთა სია> ]\n[ <რიცხვების სია>, <სიხშირეების სია> ]
SampleSD.SyntaxCAS=[ <რიცხვების სია> ]
SampleSDX=შერჩევისSDX
SampleSDX.Syntax=[ <წერტილების სია> ]
SampleSDY=შერჩევისSDY
SampleSDY.Syntax=[ <წერტილების სია> ]
SampleVariance=სერჩევისდისპერსია
SampleVariance.Syntax=[ <დაუმუშავებელ მონაცემთა სია> ]\n[ <რიცხვების სია>, <სიხშირეების სია> ]
SampleVariance.SyntaxCAS=[ <რიცხვების სია> ]
ScientificText=ათწილადიექსპონენციალურად
ScientificText.Syntax=[ <რიცხვი> ]\n[ <რიცხვი>, <სიზუსტე> ]
SecondAxis=მცირეღერძი
SecondAxis.Syntax=[ <კონუსური კვეთა> ]
SecondAxisLength=მეორადინეხევარღერძისსიგრძე
SecondAxisLength.Syntax=[ <კონუსური კვეთა> ]
Sector=სექტორი
Sector.Syntax=[ <კონუსურიკვეთა>, <წერტილი>, <წერტილი> ]\n[ <კონუსურიკვეთა>, <პარამეტრის მნიშვნელობა>, <პარამეტრის მნიშვნელობა> ]
Segment=სეგმენტი
Segment.Syntax=[ <წერტილი>, <წერტილი> ]\n[ <წერტილი>, <სიგრძე> ]
SelectObjects=ბიექტებისმონიშვნა
SelectObjects.Syntax=[ ]\n[ <ობიექტი>, <ობიექტი>, ... ]
SelectedElement=არჩეულიელემენტი
SelectedElement.Syntax=[ <სია> ]
SelectedIndex=არჩეულიინდექსი
SelectedIndex.Syntax=[ <სია> ]
Semicircle=ნახევარწრე
Semicircle.Syntax=[ <წერტილი>, <წერტილი> ]
Sequence=მიმდევრობა
Sequence.Syntax=[ <საბოლოო_მნიშვნელობა> ]\n[ <გამოსახულება>, <ცვლადი>, <საწყისი მნიშვნელობა>, <საბოლოო მნიშვნელობა> ]\n[ <გამოსახულება>, <ცვლადი>, <საწყის მნიშვნელობა>, <საბოლოო მნიშვნელობა>, <ბიჯი> ]
SetActiveView=გააქტიურესცენა
SetActiveView.Syntax=[ <ჩვენება> ]
SetAxesRatio=ღერძებისმასშტაბირება
SetAxesRatio.Syntax=[ <რიცხვი>, <რიცვი> ]
SetAxesRatio.Syntax3D=[ <რიცხვი>, <რიცხვი> ]\n[ <რიცხვი>, <რიცხვი>, <რიცხვი> ]
SetBackgroundColor=ფონისფერი
SetBackgroundColor.Syntax=[ <ობიექტი>, "<ფერი>" ]\n[ <ობიექტი>, <წითელი>, <მწვანე>, <ლურჯი> ]
SetCaption=დაასათაურე
SetCaption.Syntax=[ <ობიექტი>, <ტექსტი> ]
SetColor=ფერი
SetColor.Syntax=[ <ობიექტი>, "<ფერი>" ]\n[ <ობიექტი>, <წითელი>, <მწვანე>, <ლურჯი> ]
SetConditionToShowObject=ობიექტისჩვენებისპირობა
SetConditionToShowObject.Syntax=[ <ობიექტი>, <პირობა> ]
SetCoords=კოორდინატებისარჩევა
SetCoords.Syntax=[ <ობიექტი>, <x>, <y> ]
SetDynamicColor=დინამიურიფერი
SetDynamicColor.Syntax=[ <ობიექტი>, <წითელი>, <მწვანე>, <ცისფერი> ]\n[ <ობიექტი>, <წიტელი>, <მწვანე>, <ცისფერი>, <გამჭვირვალეობა> ]
SetFilling=შევსებადირეჟიმი
SetFilling.Syntax=[ <ობიექტი>, <რიცხვი> ]
SetFixed=ფიქსირებულირეჟიმი
SetFixed.Syntax=[ <ობიექტი>, <ჭეშმარიტი | მცდარი> ]
SetLabelMode=ჭდისრეჯიმისარჩევა
SetLabelMode.Syntax=[ <ობიექტი>, <რიცხვი> ]
SetLayer=დაამატეშრე
SetLayer.Syntax=[ <ობიექტი>, <შრე> ]
SetLineStyle=წრფისსტილი
SetLineStyle.Syntax=[ <წრფე>, <რიცხვი> ]
SetLineThickness=აირჩიეწრფისსისქე
SetLineThickness.Syntax=[ <წრფე>, <რიცხვი> ]
SetPerspective=აირჩიეპერსპექტივა
SetPerspective.Syntax=[ <ტექსტი> ]
SetPointSize=წერტილისზომა
SetPointSize.Syntax=[ <წერტილი>, <რიცხვი> ]
SetPointStyle=წერტილისსტილი
SetPointStyle.Syntax=[ <წერტილი>, <რიცხვი> ]
SetSeed=საწყისი
SetSeed.Syntax=[ <მთელი> ]
SetTooltipMode=ხელსაწყოზემინიშნებისრეჟიმი
SetTooltipMode.Syntax=[ <ობიექტი>, <რიცხვი> ]
SetTrace=კვალისარჩევა
SetTrace.Syntax=[ <ობიექტი>, <ჭეშმარიტი | მცდარი> ]
SetValue=მნიშვნელობისარჩევა
SetValue.Syntax=[ <ლოგიკური>, <0|1> ]\n[ <ობიექტი>, <ობიექტი> ]\n[ <სია>, <რიცხვი>, <ობიექტი> ]
SetViewDirection=ხედისმიმართულება
SetViewDirection.Syntax=[ <მამართულება> ]
SetVisibleInView=გამოაჩინეხედვისრეჟიმში
SetVisibleInView.Syntax=[ <ობიექტი>, <ჩვენება რიცხვი 1|2>, <ლოგიკური> ]
Shear=გადაადგილე
Shear.Syntax=[ <ობიექტი>, <წრფე>, <შეფარდება> ]
ShortestDistance=უმოკლესიმანძილი
ShortestDistance.Syntax=[ <სეგმენტების სია>, <საწყისი წერტილი>, <ბოლო წერტილი>, <ლოგიკური_ შეწონილი> ]
ShowAxes=აჩვენეღერძები
ShowAxes.Syntax=[ ]\n[ <ბულის> ]\n[ <ჩვენება>, <ბულის> ]
ShowGrid=აჩვენებადე
ShowGrid.Syntax=[ ]\n[ <ბულის> ]\n[ <ჩვენება>, <ბულის> ]
ShowLabel=აჩვენეჭდე
ShowLabel.Syntax=[ <ობიექტი>, <ლოგიკური> ]
ShowLayer=აჩვენეშრე
ShowLayer.Syntax=[ <რიცხვი> ]
Shuffle=აურიე
Shuffle.Syntax=[ <სია> ]
SigmaXX.Syntax=[ <წერტილების სია> ]\n[ <დაუმუშავებელ მონაცემთა სია> ]\n[ <რიცხვების სია>, <სიხშირეების სია> ]
SigmaXY.Syntax=[ <წერტილების სია> ]\n[ <x-კოორდინატების სია>, <y-კოორდინატების სია> ]
SigmaYY.Syntax=[ <წერტილების სია> ]
Simplify=გაამარტივე
Simplify.Syntax=[ <ფუნქცია> ]\n[ <ტექსტი> ]
Simplify.SyntaxCAS=[ <ფუნქცია> ]
Slider=სრიალა
Slider.Syntax=[ <Min>, <Max>, <ნაზრდი>, <სიჩარე>, <სიგანე>, <კუთხეა>, <ჰორიზონტალური>, <ანიმაცია>, <შემთხვევითი> ]
Slope.Syntax=[ <წრფე> ]
SlopeField=მხებიველი
SlopeField.Syntax=[ <f(x, y)> ]\n[ <f(x, y)>, <რიცხვი n> ]\n[ <f(x, y)>, <რიცხვი n>, <სიგრძის მამრავლი a> ]\n[ <f(x, y)>, <რიცხვი n>, <სიგრძის მამრავლი a>, <Min x>, <Min y>, <Max x>, <Max y> ]
SlowPlot=აჩვენედიაგრამა
SlowPlot.Syntax=[ <ფუნქცია> ]
Solutions=ამოხსნები
Solutions.SyntaxCAS=[ <განტოლება> ]\n[ <განტოლება>, <ცვლადი> ]\n[ <განტოლებების სია>, <ცვლადების სია> ]
Solve=ამოხსენი
Solve.SyntaxCAS=[ <განტოლება x-ის მიმართ> ]\n[ <განტოლება>, <ცვლადი> ]\n[ <განტოლებების სია>, <ცვლადების სია> ]
SolveCubic=ამოხსენიკუბური
SolveCubic.SyntaxCAS=[ <კუბური მრავალწვრი> ]
SolveODE=ამოხსენიODE
SolveODE.Syntax=[ <f'(x, y)> ]\n[ <f'(x, y)>, <წერტილი f-ის გრაფიკზე> ]\n[ <f'(x, y)>, <საწყისი x>, <საწყისი y>, <ბოლო x>, <ბიჯი> ]\n[ <y'>, <x'>, <საწყისი x>, <სწყისი y>, <ბოლო t>, <ბიჯი> ]\n[ <b(x)>, <c(x)>, <f(x)>, <სწყისი x>, <საწყისი y>, <საწყისი y'>, <ბოლო x>, <ბიჯი> ]
SolveODE.SyntaxCAS=[ <განტოლება> ]\n[ <განტოლება>, <წერტილ(ებ)ი f-ის გრაფიკზე> ]\n[ <განტოლება>, <წერტილ(ებ)ი f-ის გრაფიკზე>, <წერტილ(ებ)ი f'-ის გრაფიკზე> ]\n[ <განტოლება>, <დამოკიდებული ცვლადი>, <დამოუკიდებელი ცვლადი>, <განტოლება> ]\n[ <განტოლება>, <დამოკიდებული ცვლადი>, <დამოუკიდებელი ცვლადი>, <წერტილ(ებ)ი f-ის გრაფიკზე>, <წერტილ(ებ)ი f'-ის გრაფიკზე> ]
SolveQuartic=ამოხსენიკვადრატული
SolveQuartic.SyntaxCAS=[ <კვადრატული მრავალწევრი> ]
Sort=დაალაგე
Sort.Syntax=[ <სია> ]\n[ <მნიშვნელობები>, <კრიტერიუმები> ]
Spearman.Syntax=[ <წერტილების სია> ]\n[ <რიცხვების სია>, <რიცხვების სია> ]
Sphere=სფერო
Sphere.Syntax=[ <წერტილი>, <რადიუსი> ]\n[ <წერტილი>, <წერტილი> ]
Spline=სპლაინი
Spline.Syntax=[ <წერტილების სია> ]\n[ <წერტილების სია>, <რიგი ≥ 3> ]
StartAnimation=ანიმაციისდაწყება
StartAnimation.Syntax=[ ]\n[ <ლოგიკური> ]\n[ <წერტილის სრიალა>, <წერტილის სრიალა>, ... ]\n[ <წერტილის სრიალა>, <წერტილის სრიალა>, ..., <ლოგიკური> ]
StemPlot=ღეროებიანიდიაგრამა
StemPlot.Syntax=[ <სია> ]\n[ <სია>, <შესწორება -1|0|1> ]
StepGraph=საფეხურაფუნქცია
StepGraph.Syntax=[ <წერტილების სია> ]\n[ <წერტილების სია, <ლოგიკური_ შეერთებული?> ]\n[ <x-კოორდინატების სია>, <y-კოორდინატების სია> ]\n[ <წერტილების სია>, <ლოგიკური_ შეერთებული?>, <წერტილების სილი> ]\n[ <x-კოორდინატების სია>, <y-კოორდინატების სია>, <ლოგიკური_ შეერთებული?> ]\n[ <x-კოორდინატების სია>, <y-კოორდინატების სია>, <ლოგიკური_ შეერთებული?>, <ლოგიკური_ სტილი?> ]
StickGraph=შეწებებულიგრაფიკი
StickGraph.Syntax=[ <წერტილების სია> ]\n[ <წერტილების სია>, <ლოგიკური_ ჰორიზოლნტალი?> ]\n[ <x-კოორდინატების სია>, <y-კოორდინატების სია> ]\n[ <x-კოორდინატების სია>, <y-კოორდინატების სია>, <ლოგიკური_ ჰორიზოლნტალი?> ]
Stretch=გაჭიმე
Stretch.Syntax=[ <ობეიქტი>, <ვექტორი> ]\n[ <ობიექტი>, <წრფე>, <კოეფიციენტი> ]
Substitute=ცვლადისგარდაქმნა
Substitute.SyntaxCAS=[ <გამოსახულება>, <გარდაქმნის სია> ]\n[ <გამოსახულება>, <იდან->, <-მდე> ]
Sum=ჯამი
Sum.Syntax=[ <სია> ]\n[ <სია>, <ელემენტების რაოდენობა> ]\n[ <სია>, <ელემენტების რაოდენობა> ]
Sum.SyntaxCAS=[ <სია> ]\n[ <გამოსახულება>, <ცვლადი>, <საწყისი მნიშვნელობა>, <ბოლო მნიშვნელობა> ]
SumSquaredErrors=SSE
SumSquaredErrors.Syntax=[ <წერტილების სია>, <ფუნქცია> ]
SurdText=ირაციუნალურში
SurdText.Syntax=[ <წერტილი> ]\n[ <რიცხვი> ]\n[ <რიცხვი>, <სია> ]
Surface=ზედაპირი
Surface.Syntax=[ <გამოსახულება>, <გამოსახულება>, <გამოსახულება>, <პარამეტრული ცვლადი 1>, <საწყისი მნიშვნელობა>, <ბოლო მნიშვნელობა>, <პარამტრული ცვლადი 2>, <საწყისი მნიშვნელობა>, <ბოლო მნიშვნელობა> ]
TDistribution=Tგანაწილება
TDistribution.Syntax=[ <თავისუფლების ხარისხი>, <ცვლადი> ]\n[ <თავისუფლების ხარისხი>, x, <ლოგიკური_ კუმულატიური?> ]
TDistribution.SyntaxCAS=[ <თავისუფლების ხარისხი>, <ცვლადი> ]
TMean2Estimate=ორისაშუალოსTშეფასება
TMean2Estimate.Syntax=[ <შერჩევა1-ის მონაცემების სია>, <შერჩევა2-ის მონაცემების სია>, <დონე>, <ლოგიკური_ ერთობლივი(Pooled)?> ]\n[ <შერჩევა1-ის საშუალო>, <შერჩევა1-ის სტანდარტული გადახრა>, <შერჩევა1 ზომა>, <შერჩევა2-ის საშუალო>, <შერჩევა2-ის სტანდარტული გადახრა>, <შერჩევა2-ის ზომა>, <დონე>, <ლოგიკური_ ერთობლივი(Pooled)?> ]
TMeanEstimate=საშუალოსTშეფასება
TMeanEstimate.Syntax=[ <შერჩევის მონაცემების სია>, <დონე> ]\n[ <შერჩევის საშუალო>, <სტანდარტული გადახრა>, <შერჩევის ზომა>, <დონე> ]
TTest=Tტესტი
TTest.Syntax=[ <შერჩევის მონაცემების სია>, <ჰიპოტეთიზირებული საშუალო>, <კუდი> ]\n[ <შერჩევის საშუალო>, <სტანდარტული გადახრა>, <შერჩევის ზომა>, <ჰიპოტეთიზირებული საშუალო>, <კუდი> ]
TTest2=ორიშერჩევისTტესტი
TTest2.Syntax=[ <შერჩევა1-ის მონაცემების სია>, <შერჩევა2-ის მონაცემების სია>, <კუდი>, <ლოგიკური_ ერთობლივი(Pooled)?> ]\n[ <შერჩევა1-ის საშუალო>, <შერჩევა1-ის სტანდარტული გადახრა>, <შერჩევა1 ზომა>, <შერჩევა2-ის საშუალო>, <შერჩევა2-ის სტანდარტული გადახრა>, <შერჩევა2-ის ზომა>, <კუდი>, <ლოგიკური_ ერთობლივი(Pooled)?> ]
TTestPaired=დაწყვილებულებისTტესტი
TTestPaired.Syntax=[ <შერჩევა 1>, <სერჩევა 2>, <კუდი> ]
TableText=ცხრილისტექსტი
TableText.Syntax=[ <სია>, <სია>, ... ]\n[ <სია>, <სია>, ..., <ტექსტის განლაგება> ]
Take=ამოიღე
Take.Syntax=[ <სია>, <საწყისი პოზიცია> ]\n[ <ტექსტი>, <საწყისი მდებარეობა> ]\n[ <სია>, <საწყისი პოზიცია>, <ბოლო პოზიცია> ]\n[ <ტექსტი>, <საწყისი პოზიცია>, <ბოლო პოზიცია> ]
Take.SyntaxCAS=[ <სია>, <საწყისი პოზიცია>, <ბოლო პოზიცია> ]
Tangent=მხებიწრფე
Tangent.Syntax=[ <წერტილი>, <კონუსური კვეთა> ]\n[ <წერტილი>, <ფუნქცია> ]\n[ <წირის_წერტილი>, <წირი> ]\n[ <x-ის მნიშვნელობა>, <ფუნქცია> ]\n[ <წრფე>, <კონუსური კვეთა> ]\n[ <წრეწირი>, <წრეწირი> ]
TaylorSeries=ტეილორისმრავალწევრი
TaylorSeries.Syntax=[ <ფუნქცია>, <x-ის მნიშვნელობა>, <ხარისხი> ]
TaylorSeries.SyntaxCAS=[ <გამოსახულება>, <x-ის მნიშვნელობა>, <რიგი> ]\n[ <გამოსახულება>, <ცვლადი>, <ცვლადის მნიშვნელობა>, <რიგი> ]
Tetrahedron=ტეტრაედრი
Tetrahedron.Syntax=[ <წერტილი>, <წერტილი> ]\n[ <წერტილი>, <წერტილი>, <მიმართულება> ]
Text=ტექსტი
Text.Syntax=[ <ობიექტი> ]\n[ <ობიექტი>, <ბულის_მნიშვნელობა ცვლადის გარდაქმნისთვის> ]\n[ <ობიექტი>, <წერტილი> ]\n[ <ობიექტი>, <წერტილი>, <ბულის_მნიშვნელობა ცვლადის გარდაქმნისთვის> ]\n[ <ობიექტი>, <წერტილი>, <ბულის_მნიშვნელობა ცვლადის გარდაქმნისთვის>, <ლოგიკური_მნიშვნელობა LaTeX-ის ფორმულისთვის> ]
TextToUnicode=ტექსტისUnicodeში
TextToUnicode.Syntax=[ "<ტქსტი>" ]
Textfield=შეტანისყუთი
Textfield.Syntax=[ <დაკავშირებული ობიექტები> ]
TiedRank=ბულობისრანგი
TiedRank.Syntax=[ <სია> ]
ToBase=წარმოადგინერიცხვითსისტემაში
ToBase.Syntax=[ <რიცხვი>, <ფუძე> ]
ToComplex=კომპლექსურში
ToComplex.Syntax=[ <ვექტორი> ]
ToExponential=ექსპონენციალურში
ToExponential.SyntaxCAS=[ <კომპლექსური რიცხვი> ]
ToPoint=წერტილად
ToPoint.Syntax=[ <კომპლექსური რიცხვი> ]
ToPolar=პოლარულში
ToPolar.Syntax=[ <კომპლექსური> ]\n[ <ვექტორი> ]
ToolImage=ხელსაწყოსსურთი
ToolImage.Syntax=[ <რიცხვი> ]
Top=ზედა
Top.Syntax=[ <კვადრიქსი> ]
Translate=გადაიტანე
Translate.Syntax=[ <ობიექტი>, <ვექტორი> ]\n[ <ვექტორი>, <საწყისი წერტილი> ]
Transpose=ტრანსპონირებული
Transpose.Syntax=[ <მატრიცა> ]
TrapezoidalSum=ჯამიტრაპეციული
TrapezoidalSum.Syntax=[ <ფუნქცია>, <x-ის საწყისი მნიშვნელობა>, <x-ის საბოლოო მნიშვნელობა>, <დანაწილების რაოდენობა> ]
TravelingSalesman.Syntax=[ <წერტილების სია> ]
TriangleCenter=სამკუთხედისცენტრი
TriangleCenter.Syntax=[ <წერტილი>, <წერტილი>, <წერტილი>, <რიცხვი> ]
TriangleCurve=სამკუთხედწირი
TriangleCurve.Syntax=[ <წერტილი>, <წერტილი>, <წერტილი>, <განტოლება> ]
Triangular=ტრიანგულარული
Triangular.Syntax=[ <ქვედა საზღვარი>, <ქედა საზღვარი>, <მოდა>, <ცვლადის მნიშვნელობა> ]\n[ <ქვედა საზღვარი>, <ქედა საზღვარი>, <მოდა>, x, <ლოგიკური_ კუმულატიური?> ]
TrigCombine=შეაერთეტრიგონომეტრიული
TrigCombine.Syntax=[ <გამოსახულება> ]\n[ <გამოსახულება>, <მიზნობრივი ფუნქცია> ]
TrigExpand=გაშალეტრიგონომეტრიული
TrigExpand.Syntax=[ <გამოსახულება> ]\n[ <გამოსახულება>, <მიზნობრივი ფუნქცია> ]
TrigExpand.SyntaxCAS=[ <გამოსახულება> ]\n[ <გამოსახულება>, <მიზნობრივი ფუნქცია> ]\n[ <გამოსახულება>, <მიზნობრივი ფუნქცია>, <მიზნობირვი ცვლადი> ]\n[ <გამოსახულება>, <მიზნობრივი ფუნქცია>, <მიზნობირვი ცვლადი1>, <მიზნობირვი ცვლადი2> ]
TrigSimplify=გაამარტივეტრიგონომეტრიული
TrigSimplify.Syntax=[ <გამოსახულება> ]
Trilinear=ტრილინეარული
Trilinear.Syntax=[ <წერტილი>, <წერტილი>, <წერტილი>, <რიცხვი>, <რიცხვი>, <რიცხვი> ]
TurningPoint=გადაღუნვისწერტილი
TurningPoint.Syntax=[ <მრავალწევრი> ]
Turtle=ლუპიკაკუ
Turtle.Syntax=[ ]
TurtleBack=ლუპიკაუკან
TurtleBack.Syntax=[ <კუ>, <მანძილი> ]
TurtleForward=ლუპიკაწინ
TurtleForward.Syntax=[ <კუ>, <მანძილი> ]
TurtleLeft=ლუპიკამარცხნივ
TurtleLeft.Syntax=[ <კუ>, <კუთხე> ]
TurtleRight=ლუპიკამარჯვნივ
TurtleRight.Syntax=[ <კუ>, <კუთხე> ]
UnicodeToLetter=Unicodeასოდ
UnicodeToLetter.Syntax=[ <რიცხვი> ]
UnicodeToText=Unicodeტექსტად
UnicodeToText.Syntax=[ <სია> ]
Uniform=თანაბარი
Uniform.Syntax=[ <ქვედა საზღვარი>, <ზედა საზღვარი>, <ცვლადი> ]\n[ <ქვედა საზღვარი>, <ზედა საზღვარი>, x, <ლოგიკური კომულატიურისთვის> ]
Union=გაერთიანება
Union.Syntax=[ <სია>, <სია> ]\n[ <მრავალკუთხედი>, <მრავალკუთხედი> ]
Unique=ერთხელ
Unique.Syntax=[ <სია> ]
UnitOrthogonalVector=ერთეულოვანიმართობულივექტორი
UnitOrthogonalVector.Syntax=[ <წრფე> ]\n[ <მონაკვეთი> ]\n[ <ვექტორი> ]
UnitOrthogonalVector.Syntax3D=[ <წრფე> ]\n[ <მონაკვეთი> ]\n[ <ვექტორი> ]\n[ <სიბრტყე> ]
UnitOrthogonalVector.SyntaxCAS=[ <ვექტორი> ]
UnitVector=ერთეულოვანივექტორი
UnitVector.Syntax=[ <ობიექტი> ]
UnitVector.SyntaxCAS=[ <ვექტორი> ]
UpdateConstruction=აგებისგანახლება
UpdateConstruction.Syntax=[ ]\n[ <რამდენჯერ> ]
UpperSum=ზედაჯამი
UpperSum.Syntax=[ <ფუნქცია>, <x-ის საწყისი მნიშვნელობა>, <x-ის საბოლოო მნიშვნელობა>, <დანაწილების რაოდენობა> ]
Variance=დისპერსია
Variance.Syntax=[ <დაუმუშავებელ მონაცემთა სია> ]\n[ <რიცხვების სია>, <სიხშირეების სია> ]
Variance.SyntaxCAS=[ <რიცხვების სია> ]
Vector=ვექტორი
Vector.Syntax=[ <წერტილი> ]\n[ <საწყისი წერტილი>, <ბოლო წერტილი> ]
Vertex=წვერო
Vertex.Syntax=[ <კონუსური კვეთა> ]\n[ <უტოლობა> ]\n[ <მრავალკუთხედი> ]\n[ <მრავალკუთხედი>, <ინდექსი> ]
VerticalText=ვერტიკალურიტექსტი
VerticalText.Syntax=[ <ტექსტი> ]\n[ <ტექსტი>, <წერტილი> ]
Volume=მოცულობა
Volume.Syntax=[ <3D ფიგურა> ]
Voronoi=ვორონოის
Voronoi.Syntax=[ <წერტილების სია> ]
Weibull=ვეიბულის
Weibull.Syntax=[ <ნაკვთი>, <მასშტაბი>, <ცვლადის მნიშვნელობა> ]\n[ <ნაკვთი>, <მაშტაბი>, x, <ლოგიკური_კუმლატიურის> ]
Weibull.SyntaxCAS=[ <ნაკვთი>, <მასშტაბი>, <ცვლადის სახელი> ]
ZMean2Estimate=ორისაშუალოსZშეფასება
ZMean2Estimate.Syntax=[ <შერჩევა1 ის მონეცემთა სია>, <შერჩევა2-ის მონაცემთა სია>, <σ1>, <σ2>, <დონე> ]\n[ <შერჩევა1-ის საშუალო>, <σ1>, <შერჩევა1-ის ზომა>, <შერჩევა2-ის საშუალო>, <σ2>, <შერჩევა2-ის ზომა>, <დონე> ]
ZMean2Test=ორისაშუალოსZტესტი
ZMean2Test.Syntax=[ <შერჩევა1 ის მონეცემთა სია>, <შერჩევა2-ის მონაცემთა სია>, <σ1>, <σ2>, <ცდების რაოდენობა> ]\n[ <შერჩევა1-ის საშუალო>, <σ1>, <შერჩევა1-ის ზომა>, <შერჩევა2-ის საშუალო>, <σ2>, <შერჩევა2-ის ზომა>, <კუდი> ]
ZMeanEstimate=საშუალოსZშეფასება
ZMeanEstimate.Syntax=[ <შერჩევის მონაცემთა სია>, <σ>, <დონე> ]\n[ <შერჩევის საშუალო>, <σ>, <შერჩევის ზომა>, <დონე> ]
ZMeanTest=საშუალოსZტესტი
ZMeanTest.Syntax=[ <შერჩევის მონაცმთა სია>, <σ>, <ჰიპოთეტური საშუალო>, <კუდი> ]\n[ <შერჩევის საშუალო>, <σ>, <შერჩევის ზომა>, <ჰიპოთეტური საშუალო>, <კუდი> ]
ZProportion2Estimate=ორიპროპორციისZშეფასება
ZProportion2Estimate.Syntax=[ <შერჩევის პროპორცია 1>, <შერჩევის ზომა 1>, <შერჩევის პროპორცია 2>, <შერჩევის ზომა 2>, <დონე> ]
ZProportion2Test=ორიპროპორციისZტესტი
ZProportion2Test.Syntax=[ <შერჩევის პროპორცია 1>, <შერჩევის ზომა 1>, <შერჩევის პროპორცია 2>, <შერჩევის ზომა 2>, <კუდი> ]
ZProportionEstimate=პროპორციისZშეფასება
ZProportionEstimate.Syntax=[ <შერჩევის პროპორცია>, <შერჩევის ზომა>, <დონე> ]
ZProportionTest=პროპორციისZტესტი
ZProportionTest.Syntax=[ <შერჩევის პროპორცია>, <შერჩევის ზომა>, <ჰიპოთეტური_პროპრცია>, <კუდი> ]
Zip.Syntax=[ <გამოსახულება>, <ცვლადი1>, <სია1>, <ცვლადი2>, <სია2>, ... ]
Zipf.Syntax=[ <ელემენტების რაოდენობა>, <ექსპონენტი> ]\n[ <ელემენტების რაოდენობა>, <ექსპონენტი>, <ლოგიკური_ კუმულატიური?> ]\n[ <ელემენტების რაოდენობა>, <ექსპონენტი>, <ცვლადი მნიშვნელობა>, <ლოგიკური_ კუმულატიური?> ]
Zipf.SyntaxCAS=[ <ელემენტების რაოდენობა>, <ექსპონენტი>, <ცვლადი მნიშვნელობა>, <ლოგიკური_ კუმულატიური?> ]
ZoomIn=გადიდება
ZoomIn.Syntax=[ <მასშტაბის კოეფიციენტი> ]\n[ <მასშტაბის კოეფიციენტი>, <ცენტრის წერტილი> ]\n[ <Min-x>, <Min-y>, <Max-x>, <Max-y> ]
ZoomOut=დაპატარავება
ZoomOut.Syntax=[ <მასშტაბი> ]\n[ <მასშტაბი>, <ცენტრი> ]
mean.Syntax=[ <დაუმუშავებელ მონაცემთა სია> ]\n[ <რიცხვების სია>, <სიხშირეების სია> ]
mean.SyntaxCAS=[ <რიცხვების სია> ]
nCr.Syntax=[ <რიცხვი n>, <რიცხვი r> ]
stdev.Syntax=[ <დაუმუშავებელ მონაცემთა სია> ]\n[ <რიცხვების სია>, <სიხშირეების სია> ]
stdevp.Syntax=[ <დაუმუშავებელ მონაცემთა სია> ]\n[ <რიცხვების სია>, <სიხშირეების სია> ]
stdevp.SyntaxCAS=[ <რიცხვების სია> ]