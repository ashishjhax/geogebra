# Copyright (c) GeoGebra Group, office@geogebra.org
# The GeoGebra language files are licensed to you under the terms of the
# Creative Commons Attribution-NonCommercial-ShareAlike licence (version 3.0 or later),
# the current text of which can be found via this link:
# https://creativecommons.org/licenses/by-nc-sa/3.0/legalcode.
# Attribution (as required by that Creative Commons license) should take the form of
# (at least) a mention of our name, an appropriate copyright notice and a link to our
# website located at https://www.geogebra.org.
# For further details, please see https://www.geogebra.org/license
ANOVA.Syntax=[ <Lista>, <Lista>, ... ]
AffineRatio=RazónSimple
AffineRatio.Syntax=[ <Punto origen>, <Punto final>, <Punto alineado> ]
Angle=Ángulo
Angle.Syntax=[ <Objeto> ]\n[ <Vector>, <Vector> ]\n[ <Lado (semi/recta o segmento)>, <Lado (semi/recta o segmento)> ]\n[ <Punto lateral>, <Vértice>, <Punto lateral (en sentido antihorario)> ]\n[ <Punto lateral>, <Vértice>, <Ángulo de rotación (en sentido antihorario)> ]
Angle.Syntax3D=[ <Vector>, <Vector> ]\n[ <Plano>, <Plano> ]\n[ <Lado (recta, semirrecta o segmento)>, <Plano> ]\n[ <Punto (lateral)>, <Vértice>, <Punto (lateral antihorario)> ]\n[ <Punto (lateral)>, <Vértice>, <Ángulo (de rotación antihoraria)> ]\n[ <Objeto (polígono, cónica, vector, punto o número)> ]\n[ <Lado (recta, semirrecta o segmento)>, <Lado (recta, semirrecta o segmento)> ]\n[ <Punto (lateral)>, <Vértice>, <Punto (lateral antihorario)>, <Dirección> ]
AngularBisector=Bisectriz
AngularBisector.Syntax=[ <Lado (semi/recta o segmento)>, <Lado (semi/recta o segmento)> ]\n[ <Punto inicial>, <Vértice>, <Punto final (en sentido antihorario)> ]
Append=Añade
Append.Syntax=[ <Lista>, <Objeto> ]\n[ <Objeto>, <Lista> ]
ApplyMatrix=AplicaMatriz
ApplyMatrix.Syntax=[ <Matriz>, <Objeto> ]
Arc=Arco
Arc.Syntax=[ <Circunferencia>, <Punto inicial>, <Punto final (en sentido antihorario)> ]\n[ <Elipse>, <Punto inicial>, <Punto final (en sentido antihorario)> ]\n[ <Circunferencia>, <Valor inicial del parámetro>, <Valor final> ]\n[ <Elipse>, <Valor inicial del parámetro>, <Valor final> ]
AreCollinear=EstánAlineados
AreCollinear.Syntax=[ <Punto>, <Punto>, <Punto> ]
AreConcurrent=SonConcurrentes
AreConcurrent.Syntax=[ <Recta>, <Recta>, <Recta> ]
AreConcyclic=SonCocíclicos
AreConcyclic.Syntax=[ <Punto>, <Punto>, <Punto>, <Punto> ]
AreCongruent=SonCongruentes
AreCongruent.Syntax=[ <Objeto>, <Objeto> ]
AreEqual=SonIguales
AreEqual.Syntax=[ <Objeto>, <Objeto> ]
AreParallel=SonParalelas
AreParallel.Syntax=[ <Recta>, <Recta> ]
ArePerpendicular=SonPerpendiculares
ArePerpendicular.Syntax=[ <Recta>, <Recta> ]
Area=Área
Area.Syntax=[ <Cónica> ]\n[ <Polígono> ]\n[ <Punto>, ..., <Punto> ]
Assume=Asumiendo
Assume.SyntaxCAS=[ <Condición>, <Expresión> ]
Asymptote=Asíntota
Asymptote.Syntax=[ <Objeto> ]
AttachCopyToView=CopiaObjetoEn
AttachCopyToView.Syntax=[ <Objeto>, <Vista 0|1|2> ]\n[ <Objeto>, <Vista 0|1|2>, <Punto 1>, <Punto 2>, <Píxel del punto 1>, <Píxel del punto 2> ]
Axes=Ejes
Axes.Syntax=[ <Cónica> ]
Axes.Syntax3D=[ <Cónica> ]\n[ <Cuádrica> ]
AxisStepX=PasoEjeX
AxisStepY=PasoEjeY
BarChart=Barras
BarChart.Syntax=[ <Lista de datos>, <Lista de frecuencias> ]\n[ <Lista de datos brutos>, <Ancho de barras>, <Factor de escala vertical (opcional)> ]\n[ <Lista de datos>, <Lista de frecuencias>, <Ancho de barras> ]\n[ <Valor inicial>, <Valor final>, <Lista de alturas> ]\n[ <Valor inicial>, <Valor final>, <Expresión>, <Variable>, <Del número>, <A número> ]\n[ <Valor inicial>, <Valor final>, <Expresión>, <Variable>, <Del número>, <A número>, <Paso> ]
BarCode=CódigoBarras
BarCode.Syntax=[ ]\n[ <Imagen> ]\n[ <Texto o Número>, "<Formato (opcional)>", "<Corrección de error (opcional)>", <Ancho (opcional)>, <Altura (opcional)> ]
Barycenter=BaricentroBaremado
Barycenter.Syntax=[ <Lista de puntos>, <Lista de pesos> ]
Bernoulli.Syntax=[ <Probabilidad>, <Acumulada (true/false)> ]
Binomial=NúmeroCombinatorio
Binomial.Syntax=[ <Número n (o valor numérico)>, <Número r (o valor numérico)> ]
BinomialDist=DistribuciónBinomial
BinomialDist.Syntax=[ <Número de ensayos>, <Probabilidad de éxito> ]\n[ <Número de ensayos>, <Probabilidad de éxito>, <Acumulada (true/false)> ]\n[ <Número de ensayos>, <Probabilidad de éxito>, <Valor>, <Acumulada (true/false)> ]
BinomialDist.SyntaxCAS=[ <Número de ensayos>, <Probabilidad de éxito>, <Valor de variable>, <Acumulada (true/false)> ]
Bottom=Fondo
Bottom.Syntax=[ <Cuádrica> ]
BoxPlot=DiagramaCaja
BoxPlot.Syntax=[ <Offset_y>, <Escala_y>, <Lista de datos brutos> ]\n[ <Offset_y>, <Escala_y>, <Lista de datos brutos>, <Atipicidades (true/false)> ]\n[ <Offset_y>, <Escala_y>, <Lista de datos>, <Lista de frecuencias>, <Atipicidades (true/false)> ]\n[ <Offset_y>, <Escala_y>, <Valor inicial>, <Cuartil1>, <Mediana>, <Cuartil3>, <Valor final> ]
Button=Botón
Button.Syntax=[ ]\n[ <Rótulo> ]
CFactor=FactorC
CFactor.SyntaxCAS=[ <Expresión> ]\n[ <Expresión>, <Variable> ]
CIFactor=FactorizaCI
CIFactor.SyntaxCAS=[ <Expresión> ]\n[ <Expresión>, <Variable> ]
CSolutions=SolucionesC
CSolutions.SyntaxCAS=[ <Ecuación> ]\n[ <Ecuación>, <Variable> ]\n[ <Lista de ecuaciones>, <Lista de variables> ]
CSolve=ResoluciónC
CSolve.SyntaxCAS=[ <Ecuación> ]\n[ <Ecuación>, <Variable> ]\n[ <Lista de ecuaciones>, <Lista de variables> ]
Cauchy.Syntax=[ <Mediana>, <Escala>, <Valor> ]\n[ <Mediana>, <Escala>, x, <Acumulada o no (true/false)> ]
Cauchy.SyntaxCAS=[ <Mediana>, <Escala>, <Valor> ]
Cell=Celda
Cell.Syntax=[ <Columna>, <Fila> ]
CellRange=RangoCeldas
CellRange.Syntax=[ <Celda inicial>, <Celda final> ]
Center=Centro
Center.Syntax=[ <Cónica> ]
Center.Syntax3D=[ <Cónica> ]\n[ <Cuádrica> ]
CenterView=VistaCentrada
CenterView.Syntax=[ <Punto central> ]
Centroid=Baricentro
Centroid.Syntax=[ <Polígono> ]
Checkbox=CasillaControl
Checkbox.Syntax=[ ]\n[ <Rótulo> ]\n[ <Lista> ]\n[ <Rótulo>, <Lista> ]
ChiSquared=ChiCuadrado
ChiSquared.Syntax=[ <Grados de libertad>, <Valor> ]\n[ <Grados de libertad>, x, <Acumulada o no (true/false)> ]
ChiSquared.SyntaxCAS=[ <Grados de libertad>, <Valor> ]
ChiSquaredTest=TestChiCuadrado
ChiSquaredTest.Syntax=[ <Matriz> ]\n[ <Lista>, <Lista> ]\n[ <Matriz>, <Matriz> ]
Circle=Circunferencia
Circle.Syntax=[ <Punto (centro)>, <Número o valor numérico (radio)> ]\n[ <Punto>, <Segmento> ]\n[ <Punto (centro)>, <Punto> ]\n[ <Punto>, <Punto>, <Punto> ]
Circle.Syntax3D=[ <Punto (centro)>, <<Número o valor numérico (radio)> ]\n[ <Punto>, <Segmento> ]\n[ <Punto>, <Punto> ]\n[ <Recta>, <Punto> ]\n[ <Punto>, <Punto>, <Punto> ]\n[ <Punto>, <Radio>, <Dirección> ]\n[ <Punto>, <Punto>, <Dirección> ]
CircleArc=ArcoCircunferencia
CircleArc.Syntax=[ <Punto (centro)>, <Punto (extremo)>, <Punto (extremo en sentido antihorario)> ]
CircleSector=SectorCircular
CircleSector.Syntax=[ <Punto (centro)>, <Punto (extremo)>, <Punto (extremo en sentido antihorario)> ]
CircumcircleArc=ArcoTresPuntos
CircumcircleArc.Syntax=[ <Punto (extremo)>, <Punto>, <Punto (extremo)> ]
CircumcircleSector=SectorTresPuntos
CircumcircleSector.Syntax=[ <Punto (extremo)>, <Punto>, <Punto (extremo)> ]
Circumference=Perímetro
Circumference.Syntax=[ <Cónica> ]
Classes=Clases
Classes.Syntax=[ <Lista de datos>, <Número de clases> ]\n[ <Lista de datos>, <Inicio>, <Ancho de las clases> ]
ClosestPoint=PuntoMásCercano
ClosestPoint.Syntax=[ <Recorrido>, <Punto> ]\n[ <Recta>, <Recta> ]
ClosestPointRegion=PuntoRegiónMásCercano
ClosestPointRegion.Syntax=[ <Región>, <Punto> ]
Coefficients=Coeficientes
Coefficients.Syntax=[ <Polinomio> ]\n[ <Cónica> ]
Coefficients.SyntaxCAS=[ <Polinomio> ]\n[ <Polinomio>, <Variable> ]
Column=Columna
Column.Syntax=[ <Celda de Hoja de Cálculo> ]
ColumnName=NombreColumna
ColumnName.Syntax=[ <Celda de la Hoja de Cálculo> ]
Command=Comando
CommonDenominator=ComúnDenominador
CommonDenominator.Syntax=[ <Expresión>, <Expresión> ]
CompetitionRank=RangoCompetición
CompetitionRank.Syntax=[ <Lista> ]
CompleteSquare=CompletaCuadrado
CompleteSquare.Syntax=[ <Función cuadrática> ]
ComplexRoot=RaízCompleja
ComplexRoot.Syntax=[ <Polinomio> ]
Cone=Cono
Cone.Syntax=[ <Círculo>, <Altura> ]\n[ <Punto>, <Punto>, <Radio> ]\n[ <Punto>, <Vector>, <Ángulo> ]
ConeInfinite=ConoInfinito
ConeInfinite.Syntax=[ <Punto>, <Vector>, <Ángulo> ]\n[ <Punto>, <Punto>, <Ángulo> ]\n[ <Punto>, <Recta>, <Ángulo> ]
Conic=Cónica
Conic.Syntax=[ <Punto>, <Punto>, <Punto>, <Punto>, <Punto> ]\n[ <Número>, <Número>, <Número>, <Número>, <Número>, <Número> ]
ConstructionStep=PasoConstrucción
ConstructionStep.Syntax=[ ]\n[ <Objeto> ]
ContingencyTable=TablaContingencia
ContingencyTable.Syntax=[ <Lista de textos>, <Lista de textos> ]\n[ <Lista de textos>, <Lista de textos>, <Opciones> ]\n[ <Lista de valores (filas)>, <Lista de valores (columnas)>, <Tabla de frecuencias> ]\n[ <Lista de valores (filas)>, <Lista de valores (columnas)>, <Tabla de frecuencias>, <Opciones> ]
ContinuedFraction=FracciónContinua
ContinuedFraction.Syntax=[ <Número> ]\n[ <Número>, <Nivel> ]\n[ <Número>, <Nivel>, <Abreviado (true/false)> ]
ConvexHull=EnvolventeConvexa
ConvexHull.Syntax=[ <Lista de puntos> ]
CopyFreeObject=CopiaObjetoLibre
CopyFreeObject.Syntax=[ <Objeto> ]
Corner=Esquina
Corner.Syntax=[ <Número de esquina> ]\n[ <Imagen>, <Número de esquina> ]\n[ <Texto>, <Número de esquina> ]\n[ <Vista Gráfica 1|2>, <Número de esquina> ]
CountIf=CuentaSi
CountIf.Syntax=[ <Condición>, <Lista> ]\n[ <Condición>, <Variable>, <Lista> ]
Covariance=Covarianza
Covariance.Syntax=[ <Lista de puntos> ]\n[ <Lista de números>, <Lista de números> ]
Cross=ProductoVectorial
CrossRatio=RazónDoble
CrossRatio.Syntax=[ <Punto (origen 1)>, <Punto (origen 2)>, <Punto (final)>, <Punto (alineado)> ]
Cube=Cubo
Cube.Syntax=[ <Cuadrado> ]\n[ <Punto>, <Punto>, <Punto> ]\n[ <Punto>, <Punto>, <Dirección> ]
Cubic=Cúbica
Cubic.Syntax=[ <Punto>, <Punto>, <Punto>, <Número (o valor numérico)> ]
Curvature=Curvatura
Curvature.Syntax=[ <Punto>, <Objeto (función o curva)> ]
CurvatureVector=VectorCurvatura
CurvatureVector.Syntax=[ <Punto>, <Objeto (función o curva)> ]
CurveCartesian=Curva
CurveCartesian.Syntax=[ <Expresión>, <Expresión>, <Parámetro>, <Valor inicial>, <Valor final> ]
CurveCartesian.Syntax3D=[ <Expresión>, <Expresión>, <Parámetro>, <Valor inicial>, <Valor final> ]\n[ <Expresión>, <Expresión>, <Expresión>, <Parámetro>, <Valor inicial>, <Valor final> ]
Cylinder=Cilindro
Cylinder.Syntax=[ <Círculo>, <Altura> ]\n[ <Punto>, <Punto>, <Radio> ]
CylinderInfinite=CilindroInfinito
CylinderInfinite.Syntax=[ <Recta>, <Radio> ]\n[ <Punto>, <Vector>, <Radio> ]\n[ <Punto>, <Punto>, <Radio> ]
DataFunction=DatosFunción
DataFunction.Syntax=[ <Lista de números>, <Lista de números> ]
Defined=EstáDefinido
Defined.Syntax=[ <Objeto> ]
Degree=Grado
Degree.Syntax=[ <Polinomio> ]
Degree.SyntaxCAS=[ <Polinomio> ]\n[ <Polinomio>, <Variable> ]
DelauneyTriangulation=Delaunay
DelauneyTriangulation.Syntax=[ <Lista de Puntos> ]
Delete=Elimina
Delete.Syntax=[ <Objeto> ]
Denominator=Denominador
Denominator.Syntax=[ <Número> ]\n[ <Función> ]
Denominator.SyntaxCAS=[ <Expresión> ]
DensityPlot=MapaDensidad
Derivative=Derivada
Derivative.Syntax=[ <Función> ]\n[ <Curva> ]\n[ <Función>, <Número (orden de la derivada)> ]\n[ <Función>, <Variable> ]\n[ <Curva>, <Número (orden de la derivada)> ]\n[ <Función>, <Variable>, <Número (orden de la derivada)> ]
Derivative.SyntaxCAS=[ <Expresión> ]\n[ <Expresión>, <Variable> ]\n[ <Expresión>, <Variable>, <Número (orden de la derivada)> ]
Determinant=Determinante
Determinant.Syntax=[ <Matriz> ]
Diameter=DiámetroConjugado
Diameter.Syntax=[ <Vector>, <Cónica> ]\n[ <Dirección (recta, semirrecta o segmento)>, <Cónica> ]
Difference=Diferencia
Difference.Syntax=[ <Polígono>, <Polígono> ]
Dilate=Homotecia
Dilate.Syntax=[ <Objeto>, <Razón> ]\n[ <Objeto>, <Razón>, <Punto (centro)> ]
Dimension=Dimensión
Dimension.Syntax=[ <Objeto> ]
Direction=Dirección
Direction.Syntax=[ <Recta, semirrecta o segmento> ]
Directrix=Directriz
Directrix.Syntax=[ <Parábola> ]
Distance=Distancia
Distance.Syntax=[ <Punto>, <Objeto (punto, recta, cónica... )> ]\n[ <Recta>, <Recta> ]
Div=Cociente
Div.Syntax=[ <Número dividendo>, <Número divisor> ]\n[ <Polinomio dividendo>, <Polinomio divisor> ]
Division=División
Division.Syntax=[ <Número dividendo>, <Número divisor> ]\n[ <Polinomio dividendo>, <Polinomio divisor> ]
Divisors=Divisores
Divisors.Syntax=[ <Número> ]
DivisorsList=ListaDivisores
DivisorsList.Syntax=[ <Número> ]
DivisorsSum=SumaDivisores
DivisorsSum.Syntax=[ <Número> ]
Dodecahedron=Dodecaedro
Dodecahedron.Syntax=[ <Pentágono regular> ]\n[ <Punto>, <Punto>, <Punto> ]\n[ <Punto>, <Punto>, <Dirección> ]
Dot=ProductoEscalar
DotPlot=GráficoPuntos
DotPlot.Syntax=[ <Lista de datos brutos>, <Pila de puntos adyacentes (opcional)>, <Factor de escala (opcional)> ]
DynamicCoordinates=CoordenadasDinámicas
DynamicCoordinates.Syntax=[ <Punto>, <Coordenada X>, <Coordenada Y> ]\n[ <Punto>, <Coordenada X>, <Coordenada Y>, <Coordenada Z> ]
Eccentricity=Excentricidad
Eccentricity.Syntax=[ <Cónica> ]
Eigenvalues=ValoresPropios
Eigenvalues.SyntaxCAS=[ <Matriz> ]
Eigenvectors=VectoresPropios
Eigenvectors.SyntaxCAS=[ <Matriz> ]
Element=Elemento
Element.Syntax=[ <Lista>, <Número (posición)> ]\n[ <Matriz>, <Número (fila)>, <Número (columna)> ]\n[ <Lista>, <Índice 1>, <Índice 2>, ... ]
Element.SyntaxCAS=[ <Lista>, <Número (posición)> ]\n[ <Matriz>, <Número (fila)>, <Número (columna)> ]
Eliminate=Eliminación
Eliminate.Syntax=[ <Lista de Polinomios>, <Lista de Variables> ]
Ellipse=Elipse
Ellipse.Syntax=[ <Punto (foco)>, <Punto (foco)>, <Número (semieje mayor)> ]\n[ <Punto (foco)>, <Punto (foco)>, <Segmento (semieje mayor)> ]\n[ <Punto (foco)>, <Punto (foco)>, <Punto (en la elipse)> ]
Ends=Extremos
Ends.Syntax=[ <Cuádrica> ]
Envelope=Envolvente
Envelope.Syntax=[ <Trayecto>, <Punto> ]
Erlang.Syntax=[ <Figura>, <Razón>, <Valor variable> ]\n[ <Figura>, <Razón>, <Valor variable>, <Acumulada (true/false)> ]\n[ <Figura>, <Razón>, x, <Acumulada (true/false)> ]
Evaluate=Evalúa
Excentricity=SemiFocal
Excentricity.Syntax=[ <Cónica> ]
Execute=Ejecuta
Execute.Syntax=[ <Lista de textos> ]\n[ <Lista de textos>, <Parámetro>, <Parámetro>, ... ]
Expand=Desarrolla
Expand.Syntax=[ <Expresión> ]
Exponential=Exponencial
Exponential.Syntax=[ <Lambda>, <Valor> ]\n[ <Lambda>, x, <Acumulada o no (true/false)> ]
Exponential.SyntaxCAS=[ <Lambda>, <Valor> ]
ExportImage=ExportaImagen
ExportImage.Syntax=[ <Propiedad>, <Valor>, <Propiedad>, <Valor>, ... ]
Extremum=Extremo
Extremum.Syntax=[ <Polinomio> ]\n[ <Función>, <Extremo inferior del intervalo>, <Extremo superior del intervalo> ]
FDistribution=DistribuciónF
FDistribution.Syntax=[ <Grados de libertad del numerador>, <Grados de libertad del denominador>, <Valor> ]\n[ <Grados de libertad del numerador>, <Grados de libertad del denominador>, x, <Acumulada o no (true/false)> ]
FDistribution.SyntaxCAS=[ <Grados de libertad del numerador>, <Grados de libertad del denominador>, <Valor> ]
Factor=Factoriza
Factor.Syntax=[ <Polinomio> ]
Factor.SyntaxCAS=[ <Número> ]\n[ <Polinomio> ]\n[ <Expresión>, <Variable> ]
Factors=Factores
Factors.Syntax=[ <Polinomio> ]\n[ <Número> ]
FillCells=RellenaCeldas
FillCells.Syntax=[ <Rango de celdas>, <Objeto> ]\n[ <Celda>, <Lista> ]\n[ <Celda>, <Matriz> ]
FillColumn=RellenaColumna
FillColumn.Syntax=[ <Columna>, <Lista> ]
FillRow=RellenaFila
FillRow.Syntax=[ <Fila>, <Lista> ]
First=Primero
First.Syntax=[ <Lista> ]\n[ <Texto> ]\n[ <Lista>, <Número de elementos> ]\n[ <Texto>, <Número de elementos> ]\n[ <Lugar Geométrico>, <Número de elementos> ]
First.SyntaxCAS=[ <Lista> ]\n[ <Lista>, <Número de elementos> ]
FirstAxis=EjeMayor
FirstAxis.Syntax=[ <Cónica> ]
FirstAxisLength=LongitudSemiejeMayor
FirstAxisLength.Syntax=[ <Cónica> ]
Fit=Ajusta
Fit.Syntax=[ <Lista de puntos>, <Lista de funciones> ]\n[ <Lista de puntos>, <Función> ]
FitExp=AjusteExp
FitExp.Syntax=[ <Lista de puntos> ]
FitGrowth=AjusteBaseExp
FitGrowth.Syntax=[ <Lista de puntos> ]
FitImplicit=AjusteImplícita
FitImplicit.Syntax=[ <Lista de puntos>, <Orden> ]
FitLineX=AjusteRectaX
FitLineX.Syntax=[ <Lista de puntos> ]
FitLineY=AjusteLineal
FitLineY.Syntax=[ <Lista de puntos> ]
FitLog=AjusteLog
FitLog.Syntax=[ <Lista de puntos> ]
FitLogistic=AjusteLogístico
FitLogistic.Syntax=[ <Lista de puntos> ]
FitPoly=AjustePolinómico
FitPoly.Syntax=[ <Lista de puntos>, <Grado del polinomio> ]\n[ <Función a mano alzada>, <Grado del polinomio> ]
FitPow=AjustePotencia
FitPow.Syntax=[ <Lista de puntos> ]
FitSin=AjusteSeno
FitSin.Syntax=[ <Lista de puntos> ]
Flatten=Aplana
Flatten.Syntax=[ <Lista> ]
Focus=Foco
Focus.Syntax=[ <Cónica> ]
FractionText=TextoFracción
FractionText.Syntax=[ <Número> ]\n[ <Punto> ]
Frequency=Frecuencia
Frequency.Syntax=[ <Lista de datos brutos> ]\n[ <Acumulada o no (true/false)>, <Lista de datos brutos> ]\n[ <Lista de límites de clases>, <Lista de datos brutos> ]\n[ <Lista (textos)>, <Lista (textos)> ]\n[ <Acumulada (true/false)>, <Lista de límites de clases>, <Lista de datos brutos> ]\n[ <Lista de límites de clases>, <Lista de datos brutos>, <Usar Densidad o no (true/false)>, <Factor de escala de densidad (opcional)> ]\n[ <Acumulada o no (true/false)>, <Lista de límites de clases>, <Lista de datos brutos>, <Usar Densidad o no (true/false)>, <Factor de escala de densidad (opcional)> ]
FrequencyPolygon=PolígonoFrecuencias
FrequencyPolygon.Syntax=[ <Lista de límites de clases>, <Lista de alturas> ]\n[ <Lista de límites de clases>, <Lista de datos brutos>, <Usar densidad o no (true/false)>, <Factor de escala de densidad (opcional)> ]\n[ <Acumulada o no (true/false)>, <Lista de límites de clases>, <Lista de datos brutos>, <Usar densidad (true/false)>, <Factor de escala de densidad (opcional)> ]
FrequencyTable=TablaFrecuencias
FrequencyTable.Syntax=[ <Lista de datos brutos>, <Factor de escala (opcional)> ]\n[ <Acumulada (true/false)>, <Lista de datos brutos> ]\n[ <Lista de Límites de clase>, <Lista de datos brutos> ]\n[ <Acumulada (true/false)>, <Lista de límites de clase>, <Lista de datos brutos> ]\n[ <Lista de Límites de clase>, <Lista de datos brutos>, <Densidad>, <Factor de escala de densidad (opcional)> ]\n[ <Acumulada o no (true/false)>, <Lista de límites de clase>, <Lista de datos brutos>, <Densidad>, <Factor de escala de densidad (opcional)> ]
FromBase=DesdeBase
FromBase.Syntax=[ "<Número entre comillas (como texto)>", <Base> ]
Function=Función
Function.Syntax=[ <Lista de números> ]\n[ <Función>, <Extremo inferior del intervalo>, <Extremo superior del intervalo> ]
Function.Syntax3D=[ <Lista de números> ]\n[ <Función>, <Valor inicial>, <Valor final> ]\n[ <Expresión>, <Parámetro 1>, <Valor inicial>, <Valor final>, <Parámetro 2>, <Valor inicial>, <Valor final> ]
Function.SyntaxCAS=[ <Función>, <Valor-x inicial>, <Valor-x final> ]
FutureValue=ValorFuturo
FutureValue.Syntax=[ <Tasa>, <Número de períodos>, <Pago>, <Valor actual (opcional)>, <Tipo (opcional)> ]
GCD=MCD
GCD.Syntax=[ <Lista de números> ]\n[ <Número>, <Número> ]
GCD.SyntaxCAS=[ <Lista de números> ]\n[ <Lista de polinomios> ]\n[ <Número>, <Número> ]\n[ <Polinomio>, <Polinomio> ]
Gamma.Syntax=[ <Alfa>, <Beta>, <Valor variable> ]\n[ <Alfa>, <Beta>, <Valor variable>, <Acumulada (true/false)> ]\n[ <Alfa>, <Beta>, x, <Acumulada (true/false)> ]
Gamma.SyntaxCAS=[ <Alfa>, <Beta>, <Valor> ]
GeometricMean=MediaGeométrica
GeometricMean.Syntax=[ <Lista de números> ]
GetTime=TomaTiempo
GetTime.Syntax=[ ]\n[ "<Formato>" ]
GroebnerDegRevLex.Syntax=[ <Lista de Polinomios> ]\n[ <Lista de Polinomios>, <Lista de Variables> ]
GroebnerLex.Syntax=[ <Lista de Polinomios> ]\n[ <Lista de Polinomios>, <Lista de Variables> ]
GroebnerLexDeg.Syntax=[ <Lista de Polinomios> ]\n[ <Lista de Polinomios>, <Lista de Variables> ]
HarmonicMean=MediaArmónica
HarmonicMean.Syntax=[ <Lista de números> ]
Height=Altura
Height.Syntax=[ <Sólido (cono, cilindro, poliedro)> ]
HideLayer=OcultaCapa
HideLayer.Syntax=[ <Número> ]
Histogram=Histograma
Histogram.Syntax=[ <Lista de límites de clases>, <Lista de alturas> ]\n[ <Lista de límites de clases>, <Lista de datos brutos>, <Uso de Densidad (true/false)>, <Factor de escala de densidad (opcional)> ]\n[ <Acumulada o no (true/false)>, <Lista de límites de clases>, <Lista de datos brutos>, <Uso de Densidad (true/false)>, <Factor de escala de densidad (opcional)> ]
HistogramRight=HistogramaDerecha
HistogramRight.Syntax=[ <Lista de límites de clases>, <Lista de alturas> ]\n[ <Lista de límites de clases>, <Lista de datos brutos>, <Uso de Densidad (true/false)>, <Factor de escala de densidad (opcional)> ]\n[ <Acumulada (true/false)>, <Lista de límites de clases>, <Lista de datos brutos>, <Uso de Densidad (true/false)>, <Factor de escala de densidad (opcional)> ]
HyperGeometric=Hipergeométrica
HyperGeometric.Syntax=[ <Tamaño de población>, <Número de éxitos>, <Tamaño de muestra> ]\n[ <Tamaño de población>, <Número de éxitos>, <Tamaño de muestra>, <Acumulada (true/false)> ]\n[ <Tamaño de población>, <Número de éxitos>, <Tamaño de muestra>, <Valor>, <Acumulada (true/false)> ]
HyperGeometric.SyntaxCAS=[ <Tamaño de población>, <Número de éxitos>, <Tamaño de muestra>, <Valor>, <Acumulada (true/false)> ]
Hyperbola=Hipérbola
Hyperbola.Syntax=[ <Punto (foco)>, <Punto (foco)>, <Número (semieje mayor)> ]\n[ <Punto (foco)>, <Punto (foco)>, <Segmento (semieje mayor)> ]\n[ <Punto (foco)>, <Punto (foco)>, <Punto (en la hipérbola)> ]
IFactor=FactorizaI
IFactor.Syntax=[ <Polinomio> ]
IFactor.SyntaxCAS=[ <Expresión> ]\n[ <Expresión>, <Variable> ]
Icosahedron=Icosaedro
Icosahedron.Syntax=[ <Triángulo equilátero> ]\n[ <Punto>, <Punto>, <Punto> ]\n[ <Punto>, <Punto>, <Dirección> ]
Identity=Identidad
Identity.Syntax=[ <Número> ]
If=Si
If.Syntax=[ <Condición>, <Entonces> ]\n[ <Condición>, <Entonces>, <Si no> ]
ImplicitCurve=CurvaImplícita
ImplicitCurve.Syntax=[ <Lista de puntos> ]\n[ <f(x, y)> ]
ImplicitDerivative=DerivadaImplícita
ImplicitDerivative.SyntaxCAS=[ <f(x, y)> ]\n[ <Expresión>, <Variable dependiente>, <Variable independiente> ]
Incircle=CircunferenciaInscrita
Incircle.Syntax=[ <Punto>, <Punto>, <Punto> ]
IndexOf=ÍndiceDe
IndexOf.Syntax=[ <Objeto>, <Lista> ]\n[ <Texto>, <Texto> ]\n[ <Objeto>, <Lista>, <Índice inicial> ]\n[ <Texto>, <Texto>, <Índice inicial> ]
Insert=Intercala
Insert.Syntax=[ <Lista>, <Lista>, <Posición> ]\n[ <Objeto>, <Lista>, <Posición> ]
Integral.Syntax=[ <Función> ]\n[ <Función>, <Variable> ]\n[ <Función>, <Extremo inferior del intervalo>, <Extremo superior del intervalo> ]\n[ <Función>, <Extremo inferior del intervalo>, <Extremo superior del intervalo>, <Evaluar o no (true/false)> ]
Integral.SyntaxCAS=[ <Función> ]\n[ <Función>, <Variable> ]\n[ <Función>, <Extremo inferior del intervalo>, <Extremo superior del intervalo> ]\n[ <Función>, <Variable>, <Valor inicial>, <Valor final> ]
IntegralBetween=IntegralEntre
IntegralBetween.Syntax=[ <Función>, <Función>, <Extremo inferior del intervalo>, <Extremo superior del intervalo> ]\n[ <Función>, <Función>, <Extremo inferior del intervalo>, <Extremo superior del intervalo>, <Evaluar  (true/false)> ]
IntegralBetween.SyntaxCAS=[ <Función>, <Función>, <Extremo inferior del intervalo>, <Extremo superior del intervalo> ]\n[ <Función>, <Función>, <Variable>, <Valor inicial>, <Valor final> ]
IntegralSymbolic=IntegralSimbólica
IntegralSymbolic.Syntax=[ <Función> ]\n[ <Función>, <Variable> ]
InteriorAngles=ÁngulosInteriores
InteriorAngles.Syntax=[ <Polígono> ]
Intersect=Interseca
Intersect.Syntax=[ <Objeto>, <Objeto> ]\n[ <Objeto>, <Objeto>, <Índice del punto de intersección> ]\n[ <Objeto>, <Objeto>, <Punto inicial> ]\n[ <Función>, <Función>, <Extremo inferior del intervalo>, <Extremo superior del intervalo> ]\n[ <Curva 1>, <Curva 2>, <Parámetro 1>, <Parámetro 2> ]
Intersect.SyntaxCAS=[ <Función>, <Función> ]
IntersectConic=IntersecaCónica
IntersectConic.Syntax=[ <Plano>, <Cuádrica> ]\n[ <Cuádrica>, <Cuádrica> ]
IntersectPath=IntersecaRecorridos
IntersectPath.Syntax=[ <Recta>, <Polígono> ]\n[ <Polígono>, <Polígono> ]
IntersectPath.Syntax3D=[ <Recta>, <Polígono> ]\n[ <Polígono>, <Polígono> ]\n[ <Plano>, <Polígono> ]\n[ <Plano>, <Cuádrica> ]
Intersection=Intersección
Intersection.Syntax=[ <Lista>, <Lista> ]
InverseBinomial=BinomialInversa
InverseBinomial.Syntax=[ <Número de ensayos>, <Probabilidad de éxito>, <Probabilidad> ]
InverseCauchy=CauchyInversa
InverseCauchy.Syntax=[ <Mediana>, <Escala>, <Probabilidad> ]
InverseChiSquared=ChiCuadradoInversa
InverseChiSquared.Syntax=[ <Grados de libertad>, <Probabilidad> ]
InverseExponential=ExponencialInversa
InverseExponential.Syntax=[ <Media>, <Probabilidad> ]
InverseFDistribution=DistribuciónFInversa
InverseFDistribution.Syntax=[ <Grados de libertad del numerador>, <Grados de libertad del denominador>, <Probabilidad> ]
InverseGamma=GammaInversa
InverseGamma.Syntax=[ <Alfa>, <Beta>, <Probabilidad> ]
InverseHyperGeometric=HipergeométricaInversa
InverseHyperGeometric.Syntax=[ <Tamaño (población)>, <Número de éxitos>, <Tamaño (muestra)>, <Probabilidad> ]
InverseLaplace=LaplaceInversa
InverseLaplace.Syntax=[ <Función> ]\n[ <Función>, <Variable> ]\n[ <Función>, <Variable>, <Variable> ]
InverseLogNormal=LogNormalInversa
InverseLogNormal.Syntax=[ <Media>, <Desviación estándar>, <Probabilidad> ]
InverseLogistic=LogísticaInversa
InverseLogistic.Syntax=[ <Media>, <Escala>, <Probabilidad> ]
InverseNormal=NormalInversa
InverseNormal.Syntax=[ <Media>, <Desviación estándar>, <Probabilidad> ]
InversePascal=PascalInversa
InversePascal.Syntax=[ <n>, <p>, <Probabilidad> ]
InversePoisson=PoissonInversa
InversePoisson.Syntax=[ <Media>, <Probabilidad> ]
InverseTDistribution=DistribuciónTInversa
InverseTDistribution.Syntax=[ <Grados de libertad>, <Probabilidad> ]
InverseWeibull=WeibullInversa
InverseWeibull.Syntax=[ <Forma>, <Escala>, <Probabilidad> ]
InverseZipf=ZipfInversa
InverseZipf.Syntax=[ <Número de elementos>, <Exponente>, <Probabilidad> ]
Invert=Inversa
Invert.Syntax=[ <Matriz> ]\n[ <Función> ]
IsInRegion=EstáEnRegión
IsInRegion.Syntax=[ <Punto>, <Región> ]
IsInteger=EsEntero
IsInteger.Syntax=[ <Número (o valor numérico)> ]
IsPrime=EsPrimo
IsPrime.Syntax=[ <Número> ]
IsTangent=EsTangente
IsTangent.Syntax=[ <Recta>, <Cónica> ]
IsVertexForm=EsCuadráticaCanónica
IsVertexForm.Syntax=[ <Función> ]
Iteration=Iteración
Iteration.Syntax=[ <Función>, <Valor inicial>, <Número de iteraciones> ]\n[ <Expresión>, <Variables>, <Valores iniciales>, <Número de iteraciones> ]
IterationList=ListaIteración
IterationList.Syntax=[ <Función>, <Valor inicial>, <Número de iteraciones> ]\n[ <Expresión>, <Variables>, <Valores iniciales>, <Número de iteraciones> ]
Join=Encadena
Join.Syntax=[ <Lista de listas> ]\n[ <Lista>, <Lista>, ... ]
JordanDiagonalization=DiagonalizaciónJordan
JordanDiagonalization.SyntaxCAS=[ <Matriz> ]
KeepIf=ConservaSi
KeepIf.Syntax=[ <Condición>, <Lista> ]\n[ <Condición>, <Variable>, <Lista> ]
LCM=MCM
LCM.Syntax=[ <Lista de números> ]\n[ <Número (o valor numérico)>, <Número (o valor numérico)> ]
LCM.SyntaxCAS=[ <Lista de números> ]\n[ <Lista de polinomios> ]\n[ <Número (o valor numérico)>, <Número (o valor numérico)> ]\n[ <Polinomio>, <Polinomio> ]
LaTeX=FórmulaTexto
LaTeX.Syntax=[ <Objeto> ]\n[ <Objeto>, <Sustituye las variables (true/false)> ]\n[ <Objeto>, <Sustituye las variables (true/false)>, <Muestra el nombre (true/false)> ]
Laplace.Syntax=[ <Función> ]\n[ <Función>, <Variable> ]\n[ <Función>, <Variable>, <Variable> ]
Last=Último
Last.Syntax=[ <Lista> ]\n[ <Texto> ]\n[ <Lista>, <Número de elementos (n últimos)> ]\n[ <Texto>, <Número de elementos (n últimos)> ]
Last.SyntaxCAS=[ <Lista> ]\n[ <Lista>, <Número de elementos (n últimos)> ]
LeftSide=PrimerMiembro
LeftSide.Syntax=[ <Ecuación> ]
LeftSide.SyntaxCAS=[ <Ecuación> ]\n[ <Lista de ecuaciones> ]\n[ <Lista de ecuaciones>, <Número (índice)> ]
LeftSum=SumaIzquierda
LeftSum.Syntax=[ <Función>, <Extremo inferior del intervalo>, <Extremo superior del intervalo>, <Número de rectángulos> ]
Length=Longitud
Length.Syntax=[ <Objeto> ]\n[ <Función>, <Extremo inferior del intervalo>, <Extremo superior del intervalo> ]\n[ <Función>, <Punto inicial>, <Punto final> ]\n[ <Curva>, <Valor inicial de t>, <Valor final de t> ]\n[ <Curva>, <Punto inicial>, <Punto final> ]
Length.SyntaxCAS=[ <Lista> ]\n[ <Función>, <x inicial>, <x final> ]\n[ <Función>, <Variable>, <x inicial>, <x final> ]
LetterToUnicode=CódigoLetra
LetterToUnicode.Syntax=[ <Letra (entre comillas)> ]
Limit=Límite
Limit.Syntax=[ <Función>, <Valor numérico> ]
Limit.SyntaxCAS=[ <Expresión>, <Valor> ]\n[ <Expresión>, <Variable>, <Valor> ]
LimitAbove=LímiteDerecha
LimitAbove.Syntax=[ <Función>, <Valor> ]
LimitAbove.SyntaxCAS=[ <Expresión>, <Valor> ]\n[ <Expresión>, <Variable>, <Valor> ]
LimitBelow=LímiteIzquierda
LimitBelow.Syntax=[ <Función>, <Valor> ]
LimitBelow.SyntaxCAS=[ <Expresión>, <Valor> ]\n[ <Expresión>, <Variable>, <Valor> ]
Line=Recta
Line.Syntax=[ <Punto>, <Punto> ]\n[ <Punto>, <Recta (paralela)> ]\n[ <Punto>, <Vector director> ]
LineBisector=Mediatriz
LineBisector.Syntax=[ <Segmento> ]\n[ <Punto>, <Punto> ]
LineBisector.Syntax3D=[ <Segmento> ]\n[ <Punto>, <Punto> ]\n[ <Punto>, <Punto>, <Dirección> ]
LineGraph=GráficoPoligonal
LineGraph.Syntax=[ <Lista de abscisas>, <Lista de ordenadas> ]
Locus=LugarGeométrico
Locus.Syntax=[ <Punto que trazará el lugar>, <Punto> ]\n[ <Punto que trazará el lugar>, <Deslizador> ]\n[ <Campo de direcciones>, <Punto> ]\n[ <f(x, y)>, <Punto> ]
LocusEquation=EcuaciónLugar
LocusEquation.Syntax=[ <Lugar geométrico> ]\n[ <Punto del lugar>, <Punto variable> ]\n[ <Función lógica>, <Punto libre> ]
LogNormal.Syntax=[ <Media>, <Desviación estándar>, <Valor variable> ]\n[ <Media>, <Desviación estándar>, <Valor variable>, <Acumulada (true/false)> ]\n[ <Media>, <Desviación estándar>, x, <Acumulada (true/false)> ]
Logistic=Logística
Logistic.Syntax=[ <Media>, <Escala>, <Valor> ]\n[ <Media>, <Escala>, <Valor>, <Acumulada (true/false)> ]\n[ <Media>, <Escala>, x, <Acumulada (true/false)> ]
LowerSum=SumaInferior
LowerSum.Syntax=[ <Función>, <Extremo inferior del intervalo>, <Extremo superior del intervalo>, <Número de rectángulos> ]
MAD=DM
MAD.Syntax=[ <Lista de números> ]\n[ <Lista de números>, <Lista de frecuencias> ]
MatrixPlot=DiagramaMatriz
MatrixRank=RangoMatriz
MatrixRank.Syntax=[ <Matriz> ]
Max=Máximo
Max.Syntax=[ <Intervalo> ]\n[ <Lista> ]\n[ <Número>, <Número> ]\n[ <Lista de datos>, <Lista de frecuencias> ]\n[ <Función>, <Extremo inferior del intervalo>, <Extremo superior del intervalo> ]
Max.SyntaxCAS=[ <Lista> ]\n[ <Número>, <Número> ]
Maximize=Maximiza
Maximize.Syntax=[ <Número dependiente>, <Número libre> ]\n[ <Número dependiente>, <Punto en trayecto> ]
Mean=Media
Mean.Syntax=[ <Lista de datos brutos> ]\n[ <Lista de números>, <Lista de frecuencias> ]
Mean.SyntaxCAS=[ <Lista de números> ]
MeanX=MediaX
MeanX.Syntax=[ <Lista de puntos> ]
MeanY=MediaY
MeanY.Syntax=[ <Lista de puntos> ]
Median=Mediana
Median.Syntax=[ <Lista de datos brutos> ]\n[ <Lista de números>, <Lista de frecuencias> ]
Median.SyntaxCAS=[ <Lista de números> ]
Midpoint=PuntoMedio
Midpoint.Syntax=[ <Segmento> ]\n[ <Cónica> ]\n[ <Intervalo> ]\n[ <Punto>, <Punto> ]
Min=Mínimo
Min.Syntax=[ <Intervalo> ]\n[ <Lista> ]\n[ <Número>, <Número> ]\n[ <Lista de datos>, <Lista de frecuencias> ]\n[ <Función>, <Extremo inferior del intervalo>, <Extremo superior del intervalo> ]
Min.SyntaxCAS=[ <Lista> ]\n[ <Número>, <Número> ]
Minimize=Minimiza
Minimize.Syntax=[ <Número dependiente>, <Número libre> ]\n[ <Número dependiente>, <Punto en trayecto> ]
MinimumSpanningTree=ÁrbolRecubridorMínimo
MinimumSpanningTree.Syntax=[ <Lista de puntos> ]
Mirror=Refleja
Mirror.Syntax=[ <Objeto>, <Punto> ]\n[ <Objeto>, <Recta> ]\n[ <Objeto>, <Circunferencia> ]
Mirror.Syntax3D=[ <Objeto>, <Punto> ]\n[ <Objeto>, <Recta> ]\n[ <Objeto>, <Plano> ]\n[ <Objeto>, <Circunferencia> ]
MixedNumber=NúmeroMixto
MixedNumber.SyntaxCAS=[ <Número> ]
Mod=Resto
Mod.Syntax=[ <Número (dividendo)>, <Número (divisor)> ]\n[ <Polinomio dividendo>, <Polinomio divisor> ]
Mode=Moda
Mode.Syntax=[ <Lista de números> ]
NDerivative=DerivadaN
NDerivative.Syntax=[ <Función> ]\n[ <Función>, <Orden> ]
NIntegral=IntegralN
NIntegral.Syntax=[ <Función> ]\n[ <Función>, <x inicial>, <x final> ]
NIntegral.SyntaxCAS=[ <Función>, <Extremo inferior del intervalo>, <Extremo superior del intervalo> ]\n[ <Función>, <Variable>, <Valor inicial>, <Valor final> ]
NInvert=InversaN
NInvert.Syntax=[ <Función> ]
NSolutions=SolucionesN
NSolutions.Syntax=[ <Ecuación> ]
NSolutions.SyntaxCAS=[ <Ecuación> ]\n[ <Ecuación>, <Variable> ]\n[ <Ecuación>, <Variable = valor inicial> ]\n[ <Lista de ecuaciones>, <Lista de variables> ]
NSolve=ResoluciónN
NSolve.Syntax=[ <Ecuación> ]
NSolve.SyntaxCAS=[ <Ecuación> ]\n[ <Ecuación>, <Variable> ]\n[ <Ecuación>, <Variable = valor inicial> ]\n[ <Lista de ecuaciones>, <Lista de variables> ]
NSolveODE=ResuelveNEDO
NSolveODE.Syntax=[ <Lista de derivadas>, <Valor inicial de x>, <Lista de valores iniciales de y>, <Valor final de x> ]
Name=Nombre
Name.Syntax=[ <Objeto> ]
Net=Desarrollo
Net.Syntax=[ <Poliedro>, <Número> ]\n[ <Poliedro>, <Número>, <Cara>, <Arista>, <Arista>, ... ]
NextPrime=PrimoSiguiente
NextPrime.Syntax=[ <Número> ]
Normal.Syntax=[ <Media>, <Desviación estándar>, <Valor> ]\n[ <Media>, <Desviación estándar>, <Valor>, <Acumulada o no (true/false)> ]\n[ <Media>, <Desviación estándar>, x, <Acumulada o no (true/false)> ]
Normal.SyntaxCAS=[ <Media>, <Desviación estándar>, x ]
NormalQuantilePlot=GráficoQQ
NormalQuantilePlot.Syntax=[ <Lista de datos brutos> ]
Normalize=Normaliza
Normalize.Syntax=[ <Lista de números> ]\n[ <Lista de puntos> ]
Numerator=Numerador
Numerator.Syntax=[ <Número> ]\n[ <Función> ]
Numerator.SyntaxCAS=[ <Expresión> ]
Numeric=ValorNumérico
Numeric.SyntaxCAS=[ <Expresión> ]\n[ <Expresión>, <Número de cifras significativas> ]
Object=Objeto
Object.Syntax=[ <Nombre del objeto (como texto)> ]
Octahedron=Octaedro
Octahedron.Syntax=[ <Triángulo equilátero> ]\n[ <Punto>, <Punto>, <Punto> ]\n[ <Punto>, <Punto>, <Dirección> ]
Ordinal.Syntax=[ <Entero> ]
OrdinalRank=ListaOrdinal
OrdinalRank.Syntax=[ <Lista> ]
OrthogonalLine=Perpendicular
OrthogonalLine.Syntax=[ <Punto>, <Recta> ]\n[ <Punto>, <Segmento> ]\n[ <Punto>, <Vector> ]
OrthogonalLine.Syntax3D=[ <Punto>, <Recta> ]\n[ <Punto>, <Segmento> ]\n[ <Punto>, <Vector> ]\n[ <Punto>, <Plano> ]\n[ <Recta>, <Recta> ]\n[ <Punto>, <Dirección>, <Dirección> ]\n[ <Punto>, <Recta>, <Contexto (plano o espacial)> ]
OrthogonalPlane=PlanoPerpendicular
OrthogonalPlane.Syntax=[ <Punto>, <Recta> ]\n[ <Punto>, <Vector> ]
OrthogonalVector=VectorNormal
OrthogonalVector.Syntax=[ <Dirección (recta o semirrecta)> ]\n[ <Segmento> ]\n[ <Vector> ]
OrthogonalVector.Syntax3D=[ <Recta> ]\n[ <Segmento> ]\n[ <Vector> ]\n[ <Plano> ]
OsculatingCircle=CírculoOsculador
OsculatingCircle.Syntax=[ <Punto>, <Objeto (función o curva> ]
PMCC=CoeficienteCorrelación
PMCC.Syntax=[ <Lista de puntos> ]\n[ <Lista de x>, <Lista de y> ]
Pan=DesplazaPíxeles
Parabola=Parábola
Parabola.Syntax=[ <Punto (foco)>, <Directriz (recta, semirrecta o segmento)> ]
Parameter=Parámetro
Parameter.Syntax=[ <Cónica> ]
ParametricDerivative=DerivadaParamétrica
ParametricDerivative.Syntax=[ <Curva> ]
ParseToFunction=TextoAFunción
ParseToFunction.Syntax=[ <Función>, <Texto> ]
ParseToNumber=TextoANúmero
ParseToNumber.Syntax=[ <Nombre de número>, <Expresión (texto)> ]
PartialFractions=FraccionesParciales
PartialFractions.Syntax=[ <Función> ]
PartialFractions.SyntaxCAS=[ <Función> ]\n[ <Función>, <Variable> ]
Pascal.Syntax=[ <Número de éxitos>, <Probabilidad de éxito> ]\n[ <Número de éxitos>, <Probabilidad de éxito>, <Acumulada (true/false)> ]\n[ <Número de éxitos>, <Probabilidad de éxito>, <Valor>, <Acumulada (true/false)> ]
Pascal.SyntaxCAS=[ <n>, <p>, <Variable>, <Acumulada (true/false)> ]
PathParameter=ParámetroRecorrido
PathParameter.Syntax=[ <Punto sobre el recorrido> ]
Payment=Pago
Payment.Syntax=[ <Tasa>, <Número de períodos>, <Valor actual>, <Valor futuro (opcional)>, <Tipo (opcional)> ]
Percentile=Percentil
Percentile.Syntax=[ <Lista de números>, <Porcentaje> ]
Perimeter=Perímetro
Perimeter.Syntax=[ <Polígono> ]\n[ <Cónica> ]\n[ <Lugar geométrico> ]
Periods=Períodos
Periods.Syntax=[ <Tasa>, <Pago>, <Valor actual>, <Valor futuro (opcional)>, <Tipo (opcional)> ]
PieChart=GráficoCircular
PieChart.Syntax=[ <Lista de frecuencias> ]\n[ <Lista de frecuencias>, <Centro>, <Radio> ]
Plane=Plano
Plane.Syntax=[ <Polígono> ]\n[ <Cónica> ]\n[ <Punto>, <Plano> ]\n[ <Punto>, <Recta> ]\n[ <Recta>, <Recta> ]\n[ <Punto>, <Punto>, <Punto> ]
PlaneBisector=PlanoBisector
PlaneBisector.Syntax=[ <Segmento> ]\n[ <Punto>, <Punto> ]
PlaySound=TocaSonido
PlaySound.Syntax=[ <URL/Archivo> ]\n[ <Suena o no (true/false)> ]\n[ <Función>, <Valor mínimo>, <Valor máximo> ]\n[ <Función>, <Valor mínimo>, <Valor máximo>, <Frecuencia de muestreo>, <Profundidad de muestreo> ]
PlotSolve=GraficaResuelve
PlotSolve.Syntax=[ <Ecuación en x> ]
Point=Punto
Point.Syntax=[ <Objeto> ]\n[ <Lista> ]\n[ <Objeto>, <Parámetro> ]\n[ <Punto>, <Vector> ]
PointIn=PuntoEn
PointIn.Syntax=[ <Región> ]
PointList=ListaPuntos
PointList.Syntax=[ <Lista de listas de pares de coordenadas> ]
Poisson.Syntax=[ <Media> ]\n[ <Media>, <Acumulada o no (true/false)> ]\n[ <Media>, <Valor>, <Acumulada o no (true/false)> ]
Poisson.SyntaxCAS=[ <Media>, <Valor>, <Acumulada (true/false)> ]
Polar.Syntax=[ <Punto>, <Cónica> ]\n[ <Recta>, <Cónica> ]
PolyLine=Poligonal
PolyLine.Syntax=[ <Lista de puntos> ]\n[ <Punto>, ..., <Punto> ]
Polygon=Polígono
Polygon.Syntax=[ <Lista de puntos> ]\n[ <Punto (vértice inicial)>, ..., <Punto (vértice final)> ]\n[ <Punto (vértice)>, <Punto (vértice consecutivo)>, <Número de vértices> ]
Polygon.Syntax3D=[ <Lista de Puntos> ]\n[ <Punto>, ..., <Punto> ]\n[ <Punto>, <Punto>, <Número de vértices> ]\n[ <Punto>, <Punto>, <Número de vértices>, <Dirección> ]
Polynomial=Polinomio
Polynomial.Syntax=[ <Función> ]\n[ <Lista de puntos> ]
Polynomial.SyntaxCAS=[ <Función> ]\n[ <Función>, <Variable> ]
PresentValue=ValorActual
PresentValue.Syntax=[ <Tasa>, <Número de períodos>, <Pago>, <Valor futuro (opcional)>, <Tipo (opcional)> ]
PreviousPrime=PrimoAnterior
PreviousPrime.Syntax=[ <Número> ]
PrimeFactors=FactoresPrimos
PrimeFactors.Syntax=[ <Número> ]
Prism=Prisma
Prism.Syntax=[ <Polígono>, <Punto> ]\n[ <Polígono>, <Número (altura)> ]\n[ <Punto>, <Punto>, ... ]
Product=Producto
Product.Syntax=[ <Lista de datos brutos> ]\n[ <Lista de números>, <Número de elementos> ]\n[ <Lista de números>, <Lista de frecuencias> ]\n[ <Expresión>, <Variable>, <Valori inicial>, <Valor final> ]
Product.SyntaxCAS=[ <Lista de expresiones> ]\n[ <Expresión>, <Variable>, <Índice inicial>, <Índice final> ]
Prove=Demuestra
Prove.Syntax=[ <Proposición lógica> ]
ProveDetails=DemuestraDetalles
ProveDetails.Syntax=[ <Expresión lógica> ]
Pyramid=Pirámide
Pyramid.Syntax=[ <Polígono>, <Punto> ]\n[ <Polígono>, <Altura> ]\n[ <Punto>, <Punto>, <Punto>, <Punto>, ... ]
Q1=Cuartil1
Q1.Syntax=[ <Lista de datos brutos> ]\n[ <Lista de números>, <Lista de frecuencias> ]
Q3=Cuartil3
Q3.Syntax=[ <Lista de datos brutos> ]\n[ <Lista de números>, <Lista de frecuencias> ]
QuadricSide=Lateral
QuadricSide.Syntax=[ <Cuádrica> ]
RSquare=RCuadrado
RSquare.Syntax=[ <Lista de puntos>, <Función> ]
Radius=Radio
Radius.Syntax=[ <Circunferencia> ]
Random=AleatorioEntre
Random.Syntax=[ <Mínimo (número o valor numérico)>, <Máximo (número o valor numérico)> ]\n[ <Mínimo (número o valor numérico)>, <Máximo (número o valor numérico)>, <Fijo o no (true/false)> ]
Random.SyntaxCAS=[ <Mínimo (número o valor numérico)>, <Máximo (número o valor numérico)> ]
RandomBinomial=BinomialAleatorio
RandomBinomial.Syntax=[ <Número de intentos>, <Probabilidad> ]
RandomDiscrete=AleatorioDiscreto
RandomDiscrete.Syntax=[ <Lista de números>, <Lista de probabilidades (relativa)> ]
RandomElement=ElementoAleatorio
RandomElement.Syntax=[ <Lista> ]
RandomNormal=NormalAleatorio
RandomNormal.Syntax=[ <Media>, <Desviación estándar> ]
RandomPointIn=PuntoAleatorioEn
RandomPointIn.Syntax=[ <Región> ]\n[ <Lista de puntos> ]\n[ <xMín>, <xMáx>, <yMín>, <yMáx> ]
RandomPoisson=PoissonAleatorio
RandomPoisson.Syntax=[ <Media> ]
RandomPolynomial=PolinomioAleatorio
RandomPolynomial.Syntax=[ <Grado>, <Mínimo para coeficientes>, <Máximo para coeficientes> ]
RandomPolynomial.SyntaxCAS=[ <Grado>, <Mínimo para coeficientes>, <Máximo para coeficientes> ]\n[ <Variable>, <Grado>, <Mínimo para coeficientes>, <Máximo para coeficientes> ]
RandomUniform=UniformeAleatorio
RandomUniform.Syntax=[ <Mínimo>, <Máximo> ]\n[ <Mínimo>, <Máximo>, <Número de muestras> ]
Rate=Tasa
Rate.Syntax=[ <Número de períodos>, <Pago>, <Valor actual>, <Valor futuro (opcional)>, <Tipo (opcional)>, <Estimación (opcional)> ]
Rationalize=Racionaliza
Rationalize.SyntaxCAS=[ <Número> ]
Ray=Semirrecta
Ray.Syntax=[ <Punto (extremo)>, <Punto> ]\n[ <Punto (extremo)>, <Vector (director)> ]
ReadText=LeeTexto
ReadText.Syntax=[ <Texto> ]
RectangleSum=SumaRectángulos
RectangleSum.Syntax=[ <Función>, <Extremo inferior del intervalo>, <Extremo superior del intervalo>, <Número de rectángulos>, <Posición del rectángulo inicial> ]
ReducedRowEchelonForm=EscalonadaReducida
ReducedRowEchelonForm.Syntax=[ <Matriz> ]
Relation=Relación
Relation.Syntax=[ <Lista> ]\n[ <Objeto>, <Objeto> ]
RemovableDiscontinuity=DiscontinuidadEvitable
RemovableDiscontinuity.Syntax=[ <Función> ]
Remove=Suprime
Remove.Syntax=[ <Lista>, <Lista> ]
RemoveUndefined=EliminaIndefinidos
RemoveUndefined.Syntax=[ <Lista> ]
Rename=Renombra
Rename.Syntax=[ <Objeto>, <Nombre> ]
Repeat=Repite
Repeat.Syntax=[ <Número>, <Comando de Guiones>, <Comando de Guiones>, ... ]
ReplaceAll=ReemplazaTodo
ReplaceAll.Syntax=[ <Texto>, <Texto a buscar>, <Texto de reemplazo> ]
ResidualPlot=DiagramaResidual
ResidualPlot.Syntax=[ <Lista de puntos>, <Función> ]
Reverse=Invierte
Reverse.Syntax=[ <Lista> ]
RightSide=SegundoMiembro
RightSide.Syntax=[ <Ecuación> ]
RightSide.SyntaxCAS=[ <Ecuación> ]\n[ <Lista de ecuaciones> ]\n[ <Lista de ecuaciones>, <Número (índice)> ]
RigidPolygon=PolígonoRígido
RigidPolygon.Syntax=[ <Polígono> ]\n[ <Polígono>, <Margen x>, <Margen y> ]\n[ <Punto libre>, ..., <Punto libre> ]
Root=Raíz
Root.Syntax=[ <Polinomio> ]\n[ <Función>, <Valor inicial de x> ]\n[ <Función>, <Extremo inferior del intervalo>, <Extremo superior del intervalo> ]
Root.SyntaxCAS=[ <Polinomio> ]
RootList=ListaRaíces
RootList.Syntax=[ <Lista> ]
RootMeanSquare=MediaCuadrática
RootMeanSquare.Syntax=[ <Lista de números> ]
Roots=Raíces
Roots.Syntax=[ <Función>, <Extremo inferior del intervalo>, <Extremo superior del intervalo> ]
Rotate=Rota
Rotate.Syntax=[ <Objeto>, <Ángulo> ]\n[ <Objeto>, <Ángulo>, <Punto> ]
Rotate.Syntax3D=[ <Objeto>, <Ángulo> ]\n[ <Objeto>, <Ángulo>, <Punto> ]\n[ <Objeto>, <Ángulo>, <Eje de rotación> ]\n[ <Objeto>, <Ángulo>, <Punto sobre eje>, <Eje director o Plano> ]
RotateText=RotaTexto
RotateText.Syntax=[ <Texto>, <Ángulo> ]
Row=Fila
Row.Syntax=[ <Celda de Hoja de Cálculo> ]
RunClickScript=EjecutaAlClic
RunClickScript.Syntax=[ <Objeto> ]
RunUpdateScript=EjecutaAlActualizar
RunUpdateScript.Syntax=[ <Objeto> ]
SD=DE
SD.Syntax=[ <Lista de números> ]\n[ <Lista de números>, <Lista de frecuencias> ]
SDX=DEx
SDX.Syntax=[ <Lista de puntos> ]
SDY=DEy
SDY.Syntax=[ <Lista de puntos> ]
SVD=DVS
SVD.Syntax=[ <Matriz> ]
SXX.Syntax=[ <Lista de números> ]\n[ <Lista de puntos> ]
SXY.Syntax=[ <Lista de puntos> ]\n[ <Lista de números>, <Lista de números> ]
SYY.Syntax=[ <Lista de puntos> ]
Sample=Muestra
Sample.Syntax=[ <Lista>, <Tamaño> ]\n[ <Lista>, <Tamaño>, <Con reposición (true/false)> ]
SampleSD=DEmuestral
SampleSD.Syntax=[ <Lista de datos brutos> ]\n[ <Lista de números>, <Lista de frecuencias> ]
SampleSD.SyntaxCAS=[ <Lista de números> ]
SampleSDX=DExMuestral
SampleSDX.Syntax=[ <Lista de puntos> ]
SampleSDY=DEyMuestral
SampleSDY.Syntax=[ <Lista de puntos> ]
SampleVariance=VarianzaMuestral
SampleVariance.Syntax=[ <Lista de datos brutos> ]\n[ <Lista de números>, <Lista de frecuencias> ]
SampleVariance.SyntaxCAS=[ <Lista de números> ]
ScientificText=NotaciónCientífica
ScientificText.Syntax=[ <Número> ]\n[ <Número>, <Precisión> ]
SecondAxis=EjeMenor
SecondAxis.Syntax=[ <Cónica> ]
SecondAxisLength=LongitudSemiejeMenor
SecondAxisLength.Syntax=[ <Cónica> ]
Sector.Syntax=[ <Cónica>, <Punto (extremo)>, <Punto (extremo en sentido antihorario)> ]\n[ <Cónica>, <Valor del parámetro>, <Valor del parámetro> ]
Segment=Segmento
Segment.Syntax=[ <Punto (extremo)>, <Punto (extremo)> ]\n[ <Punto (extremo)>, <Número (longitud)> ]
SelectObjects=Selecciona
SelectObjects.Syntax=[ ]\n[ <Objeto>, <Objeto>, ... ]
SelectedElement=ElementoElegido
SelectedElement.Syntax=[ <Lista> ]
SelectedIndex=ÍndiceElegido
SelectedIndex.Syntax=[ <Lista> ]
Semicircle=Semicircunferencia
Semicircle.Syntax=[ <Punto (extremo)>, <Punto (extremo)> ]
Sequence=Secuencia
Sequence.Syntax=[ <Valor final> ]\n[ <Valor inicial>, <Valor final> ]\n[ <Valor inicial>, <Valor final>, <Incremento> ]\n[ <Expresión>, <Variable>, <Valor inicial>, <Valor final> ]\n[ <Expresión>, <Variable>, <Valor inicial>, <Valor final>, <Incremento> ]
SetActiveView=VistaActiva
SetActiveView.Syntax=[ <Vista> ]\n[ <Plano> ]
SetAxesRatio=RazónEjes
SetAxesRatio.Syntax=[ <Número>, <Número> ]
SetAxesRatio.Syntax3D=[ <Número>, <Número> ]\n[ <Número>, <Número>, <Número> ]
SetBackgroundColor=ColorFondo
SetBackgroundColor.Syntax=[ <Objeto>, "<Nombre del color (entre comillas)>" ]\n[ <Objeto>, <Rojo>, <Verde>, <Azul> ]
SetCaption=Rótulo
SetCaption.Syntax=[ <Objeto>, <Texto> ]
SetColor=Color
SetColor.Syntax=[ <Objeto>, "<Nombre del color (entre comillas)>" ]\n[ <Objeto>, <Rojo>, <Verde>, <Azul> ]
SetConditionToShowObject=CondiciónParaMostrar
SetConditionToShowObject.Syntax=[ <Objeto>, <Condición> ]
SetConstructionStep=FijaPasoConstrucción
SetConstructionStep.Syntax=[ <Número> ]
SetCoords=Coordenadas
SetCoords.Syntax=[ <Objeto>, <x>, <y> ]\n[ <Objeto>, <x>, <y>, <z> ]
SetDecoration=Decoración
SetDecoration.Syntax=[ <Objeto>, <Número> ]
SetDynamicColor=ColorDinámico
SetDynamicColor.Syntax=[ <Objeto>, <Rojo>, <Verde>, <Azul> ]\n[ <Objeto>, <Rojo>, <Verde>, <Azul>, <Opacidad> ]
SetFilling=Opacidad
SetFilling.Syntax=[ <Objeto>, <Número> ]
SetFixed=Fija
SetFixed.Syntax=[ <Objeto>, <true | false> ]\n[ <Objeto>, <true | false>, <true | false> ]
SetLabelMode=ModoEtiqueta
SetLabelMode.Syntax=[ <Objeto>, <Número> ]
SetLayer=Capa
SetLayer.Syntax=[ <Objeto>, <Capa> ]
SetLevelOfDetail=NivelDeDetalle
SetLevelOfDetail.Syntax=[ <Superficie>, <Nivel de detalle> ]
SetLineStyle=EstiloTrazo
SetLineStyle.Syntax=[ <Línea>, <Número> ]
SetLineThickness=GrosorLínea
SetLineThickness.Syntax=[ <Línea>, <Número> ]
SetPerspective=Disposición
SetPerspective.Syntax=[ <Texto> ]
SetPointSize=TamañoPunto
SetPointSize.Syntax=[ <Objeto>, <Número> ]
SetPointStyle=EstiloPunto
SetPointStyle.Syntax=[ <Punto>, <Número> ]
SetSeed=FijaSemilla
SetSeed.Syntax=[ <Entero> ]
SetSpinSpeed=VelocidadGiro
SetSpinSpeed.Syntax=[ <Número> ]
SetTooltipMode=ModoIndicaciones
SetTooltipMode.Syntax=[ <Objeto>, <Número> ]
SetTrace=Rastro
SetTrace.Syntax=[ <Objeto>, <true | false> ]
SetValue=Valor
SetValue.Syntax=[ <Valor lógico>, <0|1> ]\n[ <Objeto>, <Objeto> ]\n[ <Lista>, <Número>, <Objeto> ]
SetViewDirection=DirecciónVista
SetViewDirection.Syntax=[ ]\n[ <Dirección> ]\n[ <Dirección>, <Animación (true/false)> ]
SetVisibleInView=Visibilidad
SetVisibleInView.Syntax=[ <Objeto>, <Número de Vista (1 o 2)>, <Visible (true/false)> ]
Shear=Desliza
Shear.Syntax=[ <Objeto>, <Dirección (vector, recta, semirrecta o segmento)>, <Razón> ]
ShortestDistance=MenorDistancia
ShortestDistance.Syntax=[ <Lista de segmentos>, <Punto inicial>, <Punto final>, <Ponderado (true/false)> ]
ShowAxes=MuestraEjes
ShowAxes.Syntax=[ ]\n[ <True/False> ]\n[ <Vista>, <True/False> ]
ShowGrid=MuestraCuadrícula
ShowGrid.Syntax=[ ]\n[ <True/False> ]\n[ <Vista>, <True/False> ]
ShowLabel=MuestraEtiqueta
ShowLabel.Syntax=[ <Objeto>, <True/False> ]
ShowLayer=MuestraCapa
ShowLayer.Syntax=[ <Número> ]
Shuffle=Mezcla
Shuffle.Syntax=[ <Lista> ]
SigmaXX.Syntax=[ <Lista de puntos> ]\n[ <Lista de datos brutos> ]\n[ <Lista de números>, <Lista de frecuencias> ]
SigmaXY.Syntax=[ <Lista de puntos> ]\n[ <Lista de x>, <Lista de y> ]
SigmaYY.Syntax=[ <Lista de puntos> ]
Simplify=Simplifica
Simplify.Syntax=[ <Función> ]\n[ <Texto> ]
Simplify.SyntaxCAS=[ <Función> ]
Slider=Deslizador
Slider.Syntax=[ <Mín>, <Máx>, <Incremento>, <Velocidad>, <Longitud>, <Ángulo o no (true/false)>, <Horizontal o no (true/false)>, <Animado o no (true/false)>, <Aleatorio o no (true/false)> ]
Slope=Pendiente
Slope.Syntax=[ <Recta, semirrecta o segmento> ]
SlopeField=CampoDirecciones
SlopeField.Syntax=[ <f(x, y)> ]\n[ <f(x, y)>, <Número n> ]\n[ <f(x, y)>, <Número n>, <Factor longitud a> ]\n[ <f(x, y)>, <Número n>, <Factor longitud a>, <Mín x>, <Mín y>, <Máx x>, <Máx y> ]
SlowPlot=GráficaAnimada
SlowPlot.Syntax=[ <Función> ]\n[ <Función>, <Repite (true/false)> ]
Solutions=Soluciones
Solutions.Syntax=[ <Ecuación> ]
Solutions.SyntaxCAS=[ <Ecuación> ]\n[ <Ecuación>, <Variable> ]\n[ <Lista de ecuaciones>, <Lista de variables> ]
Solve=Resuelve
Solve.Syntax=[ <Ecuación> ]
Solve.SyntaxCAS=[ <Ecuación en x> ]\n[ <Ecuación>, <Variable> ]\n[ <Lista de ecuaciones>, <Lista de variables> ]
SolveCubic=ResuelveCúbica
SolveCubic.SyntaxCAS=[ <Polinomio Cúbico> ]
SolveODE=ResuelveEDO
SolveODE.Syntax=[ <f'(x, y)> ]\n[ <f'(x, y)>, <Punto en f> ]\n[ <f'(x, y)>, <x inicial>, <y inicial>, <x final>, <Paso> ]\n[ <y'>, <x'>, <x inicial>, <y inicial>, <t final>, <Paso> ]\n[ <b(x)>, <c(x)>, <f(x)>, <x inicial>, <y inicial>, <y' inicial>, <x final>, <Paso> ]
SolveODE.SyntaxCAS=[ <Ecuación> ]\n[ <Ecuación>, <Punto(s) de f> ]\n[ <Ecuación>, <Punto(s) de f>, <Punto(s) de f'> ]\n[ <Ecuación>, <Variable dependiente>, <Variable independiente>, <Punto(s) de f> ]\n[ <Ecuación>, <Variable dependiente>, <Variable independiente>, <Punto(s) de f>, <Punto(s) de f'> ]
SolveQuartic=ResuelveCuártica
SolveQuartic.SyntaxCAS=[ <Polinomio Cuártico> ]
Sort=Ordena
Sort.Syntax=[ <Lista> ]\n[ <Lista>, <Claves> ]
Spearman.Syntax=[ <Lista de puntos> ]\n[ <Lista de números>, <Lista de números> ]
Sphere=Esfera
Sphere.Syntax=[ <Punto>, <Número (radio)> ]\n[ <Punto>, <Punto> ]
Spline.Syntax=[ <Lista de puntos> ]\n[ <Lista de puntos>, <Grado ≥ 3> ]\n[ <Lista de puntos>, <Grado ≥ 3>, <Función de ponderación> ]
Split=Separa
Split.Syntax=[ <Texto>, <Lista de separadores (textos)> ]
StartAnimation=IniciaAnimación
StartAnimation.Syntax=[ ]\n[ <True/False> ]\n[ <Deslizador o punto>, <Deslizador o punto>, ... ]\n[ <Deslizador o punto>, <Deslizador o punto>, ..., <True/False> ]
StartRecord=IniciaGrabación
StartRecord.Syntax=[ ]\n[ <Valor lógico> ]
StemPlot=DiagramaTalloHojas
StemPlot.Syntax=[ <Lista> ]\n[ <Lista>, <Ajuste (-1, 0 ó 1)> ]
StepGraph=GráficoEscalonado
StepGraph.Syntax=[ <Lista de puntos> ]\n[ <Lista de puntos>, <Conectados o no (true/false)> ]\n[ <Lista de x>, <Lista de y> ]\n[ <Lista de puntos>, <Conectados o no (true/false)>, <Estilo de punto> ]\n[ <Lista de x>, <Lista de y>, <Conectados o no (true/false)> ]\n[ <Lista de x>, <Lista de y>, <Conectados o no (true/false)>, <Estilo de punto> ]
StickGraph=PaloHockey
StickGraph.Syntax=[ <Lista de puntos> ]\n[ <Lista de puntos>, <Horizontal (true/false)> ]\n[ <Lista de x>, <Lista de y> ]\n[ <Lista de x>, <Lista de y>, <Horizontal (true/false)> ]
Stretch=Estira
Stretch.Syntax=[ <Objeto>, <Vector> ]\n[ <Objeto>, <Recta>, <Razón> ]
Substitute=Sustituye
Substitute.SyntaxCAS=[ <Expresión>, <Lista de reemplazos> ]\n[ <Expresión>, <De>, <A> ]
Sum=Suma
Sum.Syntax=[ <Lista> ]\n[ <Lista>, <Número de elementos> ]\n[ <Lista>, <Lista de frecuencias> ]\n[ <Expresión>, <Variable>, <Valori inicial>, <Valor final> ]
Sum.SyntaxCAS=[ <Lista> ]\n[ <Expresión>, <Variable>, <Valor inicial>, <Valor final> ]
SumSquaredErrors=SumaErroresCuadrados
SumSquaredErrors.Syntax=[ <Lista de puntos>, <Función> ]
SurdText=TextoIrracional
SurdText.Syntax=[ <Punto> ]\n[ <Número> ]\n[ <Número>, <Lista> ]
Surface=Superficie
Surface.Syntax=[ <Función>, <Ángulo> ]\n[ <Curva>, <Ángulo>, <Recta> ]\n[ <Expresión>, <Expresión>, <Expresión>, <Parámetro 1>, <Valor inicial 1>, <Valor final 1>, <Parámetro 2>, <Valor inicial 2>, <Valor final 2> ]
TDistribution=DistribuciónT
TDistribution.Syntax=[ <Grados de libertad>, <Valor> ]\n[ <Grados de libertad>, x, <Acumulada o no (true/false)> ]
TDistribution.SyntaxCAS=[ <Grados de libertad>, <Valor> ]
TMean2Estimate=IntervaloMediasT
TMean2Estimate.Syntax=[ <Lista de datos (muestra 1)>, <Lista de datos (muestra 2)>, <Nivel>, <Agrupado o no (true/false)> ]\n[ <Media (muestra 1)>, <Desviación estándar (muestra 1)>, <Tamaño (muestra 1)>, <Media (muestra 2)>, <Desviación estándar (muestra 2)>, <Tamaño (muestra 2)>, <Nivel>, <Agrupado o no (true/false)> ]
TMeanEstimate=IntervaloMediaT
TMeanEstimate.Syntax=[ <Lista de datos (muestra)>, <Nivel> ]\n[ <Media (muestra)>, <Desviación estándar (muestra)>, <Tamaño (muestra)>, <Nivel> ]
TTest=TestMediaT
TTest.Syntax=[ <Lista de datos (muestra)>, <Media (hipótesis)>, <Cola> ]\n[ <Media (muestra)>, <Desviación estándar (muestra)>, <Tamaño (muestra)>, <Media (hipótesis)>, <Cola> ]
TTest2=TestMediasT
TTest2.Syntax=[ <Lista de datos (muestra 1)>, <Lista de datos (muestra 2)>, <Cola>, <Agrupado (true/false)> ]\n[ <Media (muestra 1)>, <Desviación estándar (muestra 1)>, <Tamaño (muestra 1)>, <Media (muestra 2)>, <Desviación estándar (muestra 2)>, <Tamaño (muestra 2)>, <Cola>, <Agrupado (true/false)> ]
TTestPaired=TestApareadasT
TTestPaired.Syntax=[ <Lista de datos (muestra 1)>, <Lista de datos (muestra 2)>, <Cola> ]
TableText=TablaTexto
TableText.Syntax=[ <Lista>, <Lista>, ... ]\n[ <Lista>, <Lista>, ..., <Alineación del texto> ]
Take=Extrae
Take.Syntax=[ <Lista>, <Posición inicial> ]\n[ <Texto>, <Posición inicial> ]\n[ <Lista>, <Posición inicial>, <Posición final> ]\n[ <Texto>, <Posición inicial>, <Posición final> ]
Take.SyntaxCAS=[ <Lista>, <Posición inicial> ]\n[ <Lista>, <Posición inicial>, <Posición final> ]
Tangent=Tangente
Tangent.Syntax=[ <Punto>, <Cónica> ]\n[ <Punto>, <Función> ]\n[ <Punto sobre la curva>, <Curva> ]\n[ <Valor de x (punto o número)>, <Función> ]\n[ <Recta (paralela)>, <Cónica> ]\n[ <Circunferencia>, <Circunferencia> ]
Tangent.SyntaxCAS=[ <Número>, <Función> ]\n[ <Punto>, <Objeto> ]
TaylorSeries=PolinomioTaylor
TaylorSeries.Syntax=[ <Función>, <Valor de x>, <Número (orden)> ]
TaylorSeries.SyntaxCAS=[ <Expresión>, <Valor de x>, <Número (orden)> ]\n[ <Expresión>, <Variable>, <Valor>, <Número (orden)> ]
Tetrahedron=Tetraedro
Tetrahedron.Syntax=[ <Triángulo equilátero> ]\n[ <Punto>, <Punto>, <Punto> ]\n[ <Punto>, <Punto>, <Dirección> ]
Text=Texto
Text.Syntax=[ <Objeto> ]\n[ <Objeto>, <Sustituye variables (true/false)> ]\n[ <Objeto>, <Punto> ]\n[ <Objeto>, <Punto>, <Sustituye variables (true/false)> ]\n[ <Objeto>, <Punto>, <Sustituye variables (true/false)>, <Fórmula LaTeX (true/false)> ]
TextToUnicode=CódigoTexto
TextToUnicode.Syntax=[ "<Texto (entre comillas)>" ]
Textfield=CasillaEntrada
Textfield.Syntax=[ <Objeto vinculado> ]
TiedRank=OrdinalAjustado
TiedRank.Syntax=[ <Lista> ]
ToBase=ABase
ToBase.Syntax=[ <Número>, <Base> ]
ToComplex=AComplejo
ToExponential=AExponencial
ToExponential.SyntaxCAS=[ <Número Complejo> ]
ToPoint=APunto
ToPoint.Syntax=[ <Complejo> ]
ToPolar=APolar
ToPolar.Syntax=[ <Complejo> ]\n[ <Vector> ]
ToolImage=ImagenHerramienta
ToolImage.Syntax=[ <Número> ]\n[ <Número>, <Punto> ]\n[ <Número>, <Punto>, <Punto> ]
Top=Tapa
Top.Syntax=[ <Cuádrica> ]
Translate=Traslada
Translate.Syntax=[ <Objeto>, <Vector> ]\n[ <Vector>, <Punto inicial> ]
Transpose=Traspone
Transpose.Syntax=[ <Matriz> ]
TrapezoidalSum=SumaTrapezoidal
TrapezoidalSum.Syntax=[ <Función>, <Extremo inferior del intervalo>, <Extremo superior del intervalo>, <Número de trapezoides> ]
TravelingSalesman=Viajante
TravelingSalesman.Syntax=[ <Lista de puntos> ]
TriangleCenter=CentroTriángulo
TriangleCenter.Syntax=[ <Punto>, <Punto>, <Punto>, <Número (índice)> ]
TriangleCurve=CurvaTriangular
TriangleCurve.Syntax=[ <Punto>, <Punto>, <Punto>, <Ecuación> ]
Triangular.Syntax=[ <Límite Inferior>, <Límite Superior>, <Moda>, <Valor> ]\n[ <Límite Inferior>, <Límite Superior>, <Moda>, x, <Acumulada o no (true/false)> ]
TrigCombine=TrigCombina
TrigCombine.Syntax=[ <Expresión> ]\n[ <Expresión>, <Función modelo> ]
TrigExpand=TrigDesarrolla
TrigExpand.Syntax=[ <Expresión> ]\n[ <Expresión>, <Función modelo> ]
TrigExpand.SyntaxCAS=[ <Expresión> ]\n[ <Expresión>, <Función modelo> ]\n[ <Expresión>, <Función modelo>, <Variable modelo> ]\n[ <Expresión>, <Función modelo>, <Variable modelo>, <Variable modelo> ]
TrigSimplify=TrigSimplifica
TrigSimplify.Syntax=[ <Expresión> ]
Trilinear=Trilineal
Trilinear.Syntax=[ <Punto>, <Punto>, <Punto>, <Número>, <Número>, <Número> ]
TurningPoint=PuntoInflexión
TurningPoint.Syntax=[ <Polinomio> ]
Turtle=Tortuga
Turtle.Syntax=[ ]
TurtleBack=TortugaRetrocede
TurtleBack.Syntax=[ <Tortuga>, <Distancia> ]
TurtleDown=TortugaAbajo
TurtleDown.Syntax=[ <Tortuga> ]
TurtleForward=TortugaAvanza
TurtleForward.Syntax=[ <Tortuga>, <Distancia> ]
TurtleLeft=TortugaIzquierda
TurtleLeft.Syntax=[ <Tortuga>, <Ángulo> ]
TurtleRight=TortugaDerecha
TurtleRight.Syntax=[ <Tortuga>, <Ángulo> ]
TurtleUp=TortugaArriba
TurtleUp.Syntax=[ <Tortuga> ]
UnicodeToLetter=LetraDeCódigo
UnicodeToLetter.Syntax=[ <Entero> ]
UnicodeToText=TextoDeCódigo
UnicodeToText.Syntax=[ <Lista de enteros> ]
Uniform=Uniforme
Uniform.Syntax=[ <Límite inferior>, <Límite superior>, <Valor> ]\n[ <Límite inferior>, <Límite superior>, x, <Acumulada o no (true/false)> ]
Union=Unión
Union.Syntax=[ <Lista>, <Lista> ]\n[ <Polígono>, <Polígono> ]
Unique=Único
Unique.Syntax=[ <Lista> ]
UnitOrthogonalVector=VectorNormalUnitario
UnitOrthogonalVector.Syntax=[ <Dirección (recta o semirrecta)> ]\n[ <Segmento> ]\n[ <Vector> ]
UnitOrthogonalVector.Syntax3D=[ <Dirección (recta o semirrecta)> ]\n[ <Segmento> ]\n[ <Vector> ]\n[ <Plano> ]
UnitVector=VectorUnitario
UnitVector.Syntax=[ <Objeto> ]
UpdateConstruction=ActualizaConstrucción
UpdateConstruction.Syntax=[ ]\n[ <Número de veces> ]
UpperSum=SumaSuperior
UpperSum.Syntax=[ <Función>, <Extremo inferior del intervalo>, <Extremo superior del intervalo>, <Número de rectángulos> ]
Variance=Varianza
Variance.Syntax=[ <Lista de datos brutos> ]\n[ <Lista de números>, <Lista de frecuencias> ]
Variance.SyntaxCAS=[ <Lista de números> ]
Vector.Syntax=[ <Punto> ]\n[ <Punto inicial>, <Punto final> ]
Vertex=Vértices
Vertex.Syntax=[ <Cónica> ]\n[ <Inecuación> ]\n[ <Polígono> ]\n[ <Polígono>, <Índice> ]\n[ <Segmento>, <Índice> ]
VerticalText=TextoVertical
VerticalText.Syntax=[ <Texto> ]\n[ <Texto>, <Punto> ]
Volume=Volumen
Volume.Syntax=[ <Sólido> ]
Voronoi.Syntax=[ <Lista de puntos> ]
Weibull.Syntax=[ <Forma>, <Escala>, <Valor de la variable> ]\n[ <Forma>, <Escala>, <Valor de la variable>, <Acumulada (true/false)> ]\n[ <Forma>, <Escala>, x, <Acumulada (true/false)> ]
Weibull.SyntaxCAS=[ <Figura>, <Escala>, <Valor variable> ]
ZMean2Estimate=IntervaloMediasZ
ZMean2Estimate.Syntax=[ <Lista de datos (muestra 1)>, <Lista de datos (muestra 2)>, <σ1>, <σ2>, <Nivel> ]\n[ <Media (muestra 1)>, <σ1>, <Tamaño (muestra 1)>, <Media (muestra 2)>, <σ2>, <Tamaño (muestra 2)>, <Nivel> ]
ZMean2Test=TestMediasZ
ZMean2Test.Syntax=[ <Lista de datos (muestra 1)>, <σ1>, <Lista de datos (muestra 2)>, <σ2>, <Cola> ]\n[ <Media (muestra 1)>, <σ1>, <Tamaño (muestra 1)>, <Media (muestra 2)>, <σ2>, <Tamaño (muestra 2)>, <Cola> ]
ZMeanEstimate=IntervaloMediaZ
ZMeanEstimate.Syntax=[ <Lista de datos (muestra)>, <σ>, <Nivel> ]\n[ <Media (muestra)>, <σ>, <Tamaño (muestra)>, <Nivel> ]
ZMeanTest=TestMediaZ
ZMeanTest.Syntax=[ <Lista de datos (muestra)>, <σ>, <Media (hipótesis)>, <Cola> ]\n[ <Media (muestra)>, <σ>, <Tamaño (muestra)>, <Media (hipótesis)>, <Cola> ]
ZProportion2Estimate=IntervaloProporcionesZ
ZProportion2Estimate.Syntax=[ <Proporción (muestra 1)>, <Tamaño (muestra 1)>, <Proporción (muestra 2)>, <Tamaño (muestra 2)>, <Nivel> ]
ZProportion2Test=TestProporcionesZ
ZProportion2Test.Syntax=[ <Proporción (muestra 1)>, <Tamaño (muestra 1)>, <Proporción (muestra 2)>, <Tamaño (muestra 2)>, <Cola> ]
ZProportionEstimate=IntervaloProporciónZ
ZProportionEstimate.Syntax=[ <Proporción (muestra)>, <Tamaño (muestra)>, <Nivel> ]
ZProportionTest=TestProporciónZ
ZProportionTest.Syntax=[ <Proporción (muestra)>, <Tamaño (muestra)>, <Proporción (hipótesis)>, <Cola> ]
Zip.Syntax=[ <Expresión>, <Variable1>, <Lista1>, <Variable2>, <Lista2>, ... ]
Zipf.Syntax=[ <Número de elementos>, <Exponente> ]\n[ <Número de elementos>, <Exponente>, <Acumulada (true/false)> ]\n[ <Número de elementos>, <Exponente>, <Valor>, <Acumulada (true/false)> ]
Zipf.SyntaxCAS=[ <Número de elementos>, <Exponente>, <Valor>, <Acumulada o no (true/false)> ]
ZoomIn=ZoomAcerca
ZoomIn.Syntax=[ ]\n[ <Factor> ]\n[ <Factor>, <Punto (centro)> ]\n[ <Mín x>, <Mín y>, <Máx x>, <Máx y> ]\n[ <Mín x>, <Mín y>, <Mín z>, <Máx x>, <Máx y>, <Máx z> ]
ZoomOut=ZoomAleja
ZoomOut.Syntax=[ <Factor> ]\n[ <Factor>, <Punto (centro)> ]
mad=dm
mad.Syntax=[ <Lista de datos brutos> ]\n[ <Lista de números>, <Lista de frecuencias> ]
mean=media
mean.Syntax=[ <Lista de datos brutos> ]\n[ <Lista de números>, <Lista de frecuencias> ]
mean.SyntaxCAS=[ <Lista de números> ]
nCr.Syntax=[ <Número n (o valor numérico)>, <Número r (o valor numérico)> ]
stdev.Syntax=[ <Lista de números> ]\n[ <Lista de números>, <Lista de frecuencias> ]
stdevp=de
stdevp.Syntax=[ <Lista de datos brutos> ]\n[ <Lista de números>, <Lista de frecuencias> ]
stdevp.SyntaxCAS=[ <Lista de números> ]